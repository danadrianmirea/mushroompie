                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.6 #12533 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module mushroompie
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _init_game
                                     13 	.globl _reset_world
                                     14 	.globl _place_room_items
                                     15 	.globl _init_game_items
                                     16 	.globl _find_by_room_xy
                                     17 	.globl _find_by_id
                                     18 	.globl _pop_by_id
                                     19 	.globl _push_last
                                     20 	.globl _show_inventory
                                     21 	.globl _execute_inventory
                                     22 	.globl _execute_dialog
                                     23 	.globl _vbl_interrupt
                                     24 	.globl _lcd_interrupt
                                     25 	.globl _check_change_room
                                     26 	.globl _set_room
                                     27 	.globl _FadeDMG
                                     28 	.globl _check_dizzy_evil_collisions
                                     29 	.globl _check_dizzy_collisions
                                     30 	.globl _set_dizzy_position
                                     31 	.globl _set_dizzy_animdata
                                     32 	.globl _init_dizzy
                                     33 	.globl _set_enemies_position
                                     34 	.globl _get_coll
                                     35 	.globl _get_v_coll
                                     36 	.globl _get_h_coll
                                     37 	.globl _get_y_scroll_value
                                     38 	.globl _get_x_scroll_value
                                     39 	.globl _update_energy
                                     40 	.globl _show_energy
                                     41 	.globl _show_coins
                                     42 	.globl _sub_coins
                                     43 	.globl _add_coins
                                     44 	.globl _show_lives
                                     45 	.globl _on_dizzy_die
                                     46 	.globl _init_dizzy_energy
                                     47 	.globl _init_dizzy_lives
                                     48 	.globl _init_dizzy_coins
                                     49 	.globl _unshrink_and_mask
                                     50 	.globl _multiple_move_sprites
                                     51 	.globl _get_map_from_buf
                                     52 	.globl _put_map_to_buf
                                     53 	.globl _rle_decompress_data
                                     54 	.globl _get_shrinked_tile_offset
                                     55 	.globl _unshrink_tiles_to_buf
                                     56 	.globl _unshrink_tiles
                                     57 	.globl _set_inc_tiles
                                     58 	.globl _hUGE_init
                                     59 	.globl _PlayFx
                                     60 	.globl _set_bank
                                     61 	.globl _pop_bank
                                     62 	.globl _push_bank
                                     63 	.globl _set_sprite_data
                                     64 	.globl _set_win_tiles
                                     65 	.globl _set_win_data
                                     66 	.globl _set_bkg_tiles
                                     67 	.globl _set_bkg_data
                                     68 	.globl _display_off
                                     69 	.globl _wait_vbl_done
                                     70 	.globl _set_interrupts
                                     71 	.globl _waitpadup
                                     72 	.globl _joypad
                                     73 	.globl _delay
                                     74 	.globl _wait_int_handler
                                     75 	.globl _add_LCD
                                     76 	.globl _add_VBL
                                     77 	.globl _lyc_table
                                     78 	.globl _inventory
                                     79 	.globl ___lcd_int_state
                                     80 	.globl _tim_div
                                     81 	.globl _dizzy_old_pos_y
                                     82 	.globl _dizzy_old_pos_x
                                     83 	.globl _dizzy_stun
                                     84 	.globl _dizzy_falling
                                     85 	.globl _death_pause
                                     86 	.globl _game_over
                                     87 	.globl _joy
                                     88 	.globl _is_position_safe
                                     89 	.globl _safe_room_y
                                     90 	.globl _safe_room_x
                                     91 	.globl _delta_y
                                     92 	.globl _delta_x
                                     93 	.globl _dizzy_tmp_xy
                                     94 	.globl _dizzy_y
                                     95 	.globl _dizzy_x
                                     96 	.globl _current_room
                                     97 	.globl _current_room_y
                                     98 	.globl _current_room_x
                                     99 	.globl _cloud_timer
                                    100 	.globl _bal_update
                                    101 	.globl _walk_update
                                    102 	.globl _ani_update
                                    103 	.globl _current_dyn_phase
                                    104 	.globl _double_dyn
                                    105 	.globl _current_dyn
                                    106 	.globl _ani_phase
                                    107 	.globl _ani_type
                                    108 	.globl _item_stack
                                    109 	.globl _inventory_item_list
                                    110 	.globl ___temp_text_ptr2
                                    111 	.globl ___temp_text_ptr1
                                    112 	.globl ___temp_text_ptr0
                                    113 	.globl ___temp_text_buf
                                    114 	.globl ___temp_item_tiledata2
                                    115 	.globl ___temp_item_tiledata1
                                    116 	.globl ___temp_item_tiledata0
                                    117 	.globl ___temp_bkg_tiles
                                    118 	.globl ___temp_tiles
                                    119 	.globl ___temp_tiledata
                                    120 	.globl ___temp_game_item_desc
                                    121 	.globl ___temp_game_item3
                                    122 	.globl ___temp_game_item2
                                    123 	.globl ___temp_game_item
                                    124 	.globl _game_item_list
                                    125 	.globl _game_items
                                    126 	.globl _item_tiles_hiwater
                                    127 	.globl _font_tiles_start
                                    128 	.globl _inventoty_tiles_start
                                    129 	.globl _window_tiles_hiwater
                                    130 	.globl ___temp_coll_row
                                    131 	.globl _collision_buf
                                    132 	.globl _tile_pos_oy
                                    133 	.globl _tile_pos_ox
                                    134 	.globl _tile_pos_y
                                    135 	.globl _tile_pos_x
                                    136 	.globl ___temp_scroll_value
                                    137 	.globl _bkg_scroll_y_target
                                    138 	.globl _bkg_scroll_x_target
                                    139 	.globl _dec_energy
                                    140 	.globl _inc_energy
                                    141 	.globl _dizzy_energy_old
                                    142 	.globl _dizzy_energy
                                    143 	.globl _coins_indicator
                                    144 	.globl _coins
                                    145 	.globl _temp_tile_buffer
                                    146 	.globl _dizzy_energy_indicator
                                    147 	.globl _dizzy_lives_indicator
                                    148 	.globl _dizzy_lives
                                    149 	.globl _digits_start
                                    150 	.globl _dizzy_energy_start
                                    151 	.globl _dizzy_live_symbol
                                    152 	.globl ___temp_m
                                    153 	.globl ___temp_l
                                    154 	.globl ___temp_k
                                    155 	.globl ___temp_j
                                    156 	.globl ___temp_i
                                    157 	.globl _tmp_dizzy_y
                                    158 	.globl _tmp_dizzy_x
                                    159 	.globl _safe_dizzy_y
                                    160 	.globl _safe_dizzy_x
                                    161 	.globl _tmp_room_y
                                    162 	.globl _tmp_room_x
                                    163 	.globl _ani_type_old
                                    164 	.globl _current_animation
                                    165 	.globl _coll_buf
                                    166 	.globl _all_items_desc
                                    167 	.globl _itmdesc_coin2
                                    168 	.globl _itmdesc_coin1
                                    169 	.globl _itmdesc_coin0
                                    170 	.globl _itmdesc_blockage0
                                    171 	.globl _itmdesc_blockage1
                                    172 	.globl _itmdesc_blockage2
                                    173 	.globl _itmdesc_firefly
                                    174 	.globl _itmdesc_lid
                                    175 	.globl _itmdesc_jar
                                    176 	.globl _itmdesc_pie
                                    177 	.globl _itmdesc_mushrooms
                                    178 	.globl _itmdesc_grass
                                    179 	.globl _itmdesc_key
                                    180 	.globl _itmdesc_pickaxe
                                    181 	.globl _ethalon_tiles_offsets
                                    182 	.globl _ethalon_indicator
                                    183 	.globl _current_coll_idx
                                    184 	.globl _evil_hide
                                    185 	.globl _empty_compressed_map
                                    186 	.globl _ptr_div_reg
                                    187 	.globl _room_5_1
                                    188 	.globl _room_4_1
                                    189 	.globl _room_3_1
                                    190 	.globl _room_2_1
                                    191 	.globl _room_1_1
                                    192 	.globl _room_0_1
                                    193 	.globl _room_5_0
                                    194 	.globl _room_4_0
                                    195 	.globl _room_3_0
                                    196 	.globl _room_2_0
                                    197 	.globl _room_1_0
                                    198 	.globl _room_0_0
                                    199 	.globl _world_row_1
                                    200 	.globl _world_row_0
                                    201 	.globl _dizzy_world
                                    202 	.globl _fly_delta
                                    203 	.globl _fly_offsets
                                    204 	.globl _move_x_data
                                    205 	.globl _double_y_data
                                    206 	.globl _move_y_data
                                    207 	.globl _double_y_dynamics
                                    208 	.globl _move_y_dynamics
                                    209 	.globl _animation
                                    210 	.globl _dead_ani
                                    211 	.globl _stun_ani
                                    212 	.globl _jump_l_ani
                                    213 	.globl _jump_r_ani
                                    214 	.globl _roll_l_ani
                                    215 	.globl _roll_r_ani
                                    216 	.globl _walk_l_ani
                                    217 	.globl _walk_r_ani
                                    218 	.globl _up_ani
                                    219 	.globl _stand_ani
                                    220 	.globl _dizzy_offsets
                                    221 	.globl _show_dialog_window
                                    222 	.globl _default_draw
                                    223 	.globl _default_drop
                                    224 ;--------------------------------------------------------
                                    225 ; special function registers
                                    226 ;--------------------------------------------------------
                                    227 ;--------------------------------------------------------
                                    228 ; ram data
                                    229 ;--------------------------------------------------------
                                    230 	.area _DATA
      000000                        231 _coll_buf::
      000000                        232 	.ds 510
      0001FE                        233 _current_animation::
      0001FE                        234 	.ds 2
      000200                        235 _ani_type_old::
      000200                        236 	.ds 1
      000201                        237 _tmp_room_x::
      000201                        238 	.ds 1
      000202                        239 _tmp_room_y::
      000202                        240 	.ds 1
      000203                        241 _safe_dizzy_x::
      000203                        242 	.ds 2
      000205                        243 _safe_dizzy_y::
      000205                        244 	.ds 2
      000207                        245 _tmp_dizzy_x::
      000207                        246 	.ds 2
      000209                        247 _tmp_dizzy_y::
      000209                        248 	.ds 2
      00020B                        249 ___temp_i::
      00020B                        250 	.ds 1
      00020C                        251 ___temp_j::
      00020C                        252 	.ds 1
      00020D                        253 ___temp_k::
      00020D                        254 	.ds 1
      00020E                        255 ___temp_l::
      00020E                        256 	.ds 1
      00020F                        257 ___temp_m::
      00020F                        258 	.ds 1
      000210                        259 _dizzy_live_symbol::
      000210                        260 	.ds 1
      000211                        261 _dizzy_energy_start::
      000211                        262 	.ds 1
      000212                        263 _digits_start::
      000212                        264 	.ds 1
      000213                        265 _dizzy_lives::
      000213                        266 	.ds 1
      000214                        267 _dizzy_lives_indicator::
      000214                        268 	.ds 3
      000217                        269 _dizzy_energy_indicator::
      000217                        270 	.ds 8
      00021F                        271 _temp_tile_buffer::
      00021F                        272 	.ds 16
      00022F                        273 _coins::
      00022F                        274 	.ds 1
      000230                        275 _coins_indicator::
      000230                        276 	.ds 2
      000232                        277 _dizzy_energy::
      000232                        278 	.ds 1
      000233                        279 _dizzy_energy_old::
      000233                        280 	.ds 1
      000234                        281 _inc_energy::
      000234                        282 	.ds 1
      000235                        283 _dec_energy::
      000235                        284 	.ds 1
      000236                        285 _bkg_scroll_x_target::
      000236                        286 	.ds 1
      000237                        287 _bkg_scroll_y_target::
      000237                        288 	.ds 1
      000238                        289 ___temp_scroll_value::
      000238                        290 	.ds 2
      00023A                        291 _tile_pos_x::
      00023A                        292 	.ds 1
      00023B                        293 _tile_pos_y::
      00023B                        294 	.ds 1
      00023C                        295 _tile_pos_ox::
      00023C                        296 	.ds 1
      00023D                        297 _tile_pos_oy::
      00023D                        298 	.ds 1
      00023E                        299 _collision_buf::
      00023E                        300 	.ds 3
      000241                        301 ___temp_coll_row::
      000241                        302 	.ds 2
      000243                        303 _window_tiles_hiwater::
      000243                        304 	.ds 1
      000244                        305 _inventoty_tiles_start::
      000244                        306 	.ds 1
      000245                        307 _font_tiles_start::
      000245                        308 	.ds 1
      000246                        309 _item_tiles_hiwater::
      000246                        310 	.ds 1
      000247                        311 _game_items::
      000247                        312 	.ds 126
      0002C5                        313 _game_item_list::
      0002C5                        314 	.ds 5
      0002CA                        315 ___temp_game_item::
      0002CA                        316 	.ds 2
      0002CC                        317 ___temp_game_item2::
      0002CC                        318 	.ds 2
      0002CE                        319 ___temp_game_item3::
      0002CE                        320 	.ds 2
      0002D0                        321 ___temp_game_item_desc::
      0002D0                        322 	.ds 2
      0002D2                        323 ___temp_tiledata::
      0002D2                        324 	.ds 2
      0002D4                        325 ___temp_tiles::
      0002D4                        326 	.ds 4
      0002D8                        327 ___temp_bkg_tiles::
      0002D8                        328 	.ds 4
      0002DC                        329 ___temp_item_tiledata0::
      0002DC                        330 	.ds 64
      00031C                        331 ___temp_item_tiledata1::
      00031C                        332 	.ds 64
      00035C                        333 ___temp_item_tiledata2::
      00035C                        334 	.ds 64
      00039C                        335 ___temp_text_buf::
      00039C                        336 	.ds 20
      0003B0                        337 ___temp_text_ptr0::
      0003B0                        338 	.ds 2
      0003B2                        339 ___temp_text_ptr1::
      0003B2                        340 	.ds 2
      0003B4                        341 ___temp_text_ptr2::
      0003B4                        342 	.ds 2
      0003B6                        343 _inventory_item_list::
      0003B6                        344 	.ds 5
      0003BB                        345 _item_stack::
      0003BB                        346 	.ds 5
                                    347 ;--------------------------------------------------------
                                    348 ; ram data
                                    349 ;--------------------------------------------------------
                                    350 	.area _INITIALIZED
      000000                        351 ___CRASH_HEANDLER_INIT:
      000000                        352 	.ds 2
      000002                        353 _ani_type::
      000002                        354 	.ds 1
      000003                        355 _ani_phase::
      000003                        356 	.ds 1
      000004                        357 _current_dyn::
      000004                        358 	.ds 2
      000006                        359 _double_dyn::
      000006                        360 	.ds 1
      000007                        361 _current_dyn_phase::
      000007                        362 	.ds 1
      000008                        363 _ani_update::
      000008                        364 	.ds 1
      000009                        365 _walk_update::
      000009                        366 	.ds 1
      00000A                        367 _bal_update::
      00000A                        368 	.ds 1
      00000B                        369 _cloud_timer::
      00000B                        370 	.ds 1
      00000C                        371 _current_room_x::
      00000C                        372 	.ds 1
      00000D                        373 _current_room_y::
      00000D                        374 	.ds 1
      00000E                        375 _current_room::
      00000E                        376 	.ds 2
      000010                        377 _dizzy_x::
      000010                        378 	.ds 2
      000012                        379 _dizzy_y::
      000012                        380 	.ds 2
      000014                        381 _dizzy_tmp_xy::
      000014                        382 	.ds 2
      000016                        383 _delta_x::
      000016                        384 	.ds 2
      000018                        385 _delta_y::
      000018                        386 	.ds 2
      00001A                        387 _safe_room_x::
      00001A                        388 	.ds 1
      00001B                        389 _safe_room_y::
      00001B                        390 	.ds 1
      00001C                        391 _is_position_safe::
      00001C                        392 	.ds 1
      00001D                        393 _joy::
      00001D                        394 	.ds 1
      00001E                        395 _game_over::
      00001E                        396 	.ds 1
      00001F                        397 _death_pause::
      00001F                        398 	.ds 1
      000020                        399 _dizzy_falling::
      000020                        400 	.ds 1
      000021                        401 _dizzy_stun::
      000021                        402 	.ds 1
      000022                        403 _dizzy_old_pos_x::
      000022                        404 	.ds 2
      000024                        405 _dizzy_old_pos_y::
      000024                        406 	.ds 2
      000026                        407 _tim_div::
      000026                        408 	.ds 1
      000027                        409 ___lcd_int_state::
      000027                        410 	.ds 1
      000028                        411 _inventory::
      000028                        412 	.ds 1
      000029                        413 _lyc_table::
      000029                        414 	.ds 8
                                    415 ;--------------------------------------------------------
                                    416 ; absolute external ram data
                                    417 ;--------------------------------------------------------
                                    418 	.area _DABS (ABS)
                                    419 ;--------------------------------------------------------
                                    420 ; global & static initialisations
                                    421 ;--------------------------------------------------------
                                    422 	.area _HOME
                                    423 	.area _GSINIT
                                    424 	.area _GSFINAL
                                    425 	.area _GSINIT
                                    426 ;--------------------------------------------------------
                                    427 ; Home
                                    428 ;--------------------------------------------------------
                                    429 	.area _HOME
                                    430 ;src/mushroompie.c:293: void lcd_interrupt() NONBANKED __naked 
                                    431 ;	---------------------------------
                                    432 ; Function lcd_interrupt
                                    433 ; ---------------------------------
      000000                        434 _lcd_interrupt::
                                    435 ;src/mushroompie.c:349: __endasm;
      000000 FAr28r00               436 	ld	A, (#_inventory) ; if !inventory then use lyc_table 0..3 else 4..7
      000003 E6 01                  437 	and	#1
      000005 CB 27                  438 	sla	A
      000007 CB 27                  439 	sla	A
      000009 21r27r00               440 	ld	HL, #___lcd_int_state
      00000C 5E                     441 	ld	E, (HL)
      00000D 83                     442 	add	E
      00000E 21r29r00               443 	ld	HL, #_lyc_table
      000011 85                     444 	add	L
      000012 6F                     445 	ld	L, A
      000013 7C                     446 	ld	A, H
      000014 CE 00                  447 	adc	#0
      000016 67                     448 	ld	H, A ; HL = &lyc_table[__lcd_int_state]
      000017 7E                     449 	ld	A,(HL)
      000018 E0r00                  450 	ldh	(#_LYC_REG), A ; setting next interrupt row
      00001A 57                     451 	ld	D, A
      00001B 7B                     452 	ld	A, E
      00001C 3C                     453 	inc	A
      00001D E6 03                  454 	and	#3
      00001F EAr27r00               455 	ld	(#___lcd_int_state), A ; __lcd_int_state++; __lcd_int_state&=3;
      000022 E6 01                  456 	and	#1
      000024 CB 27                  457 	sla	A
      000026 5F                     458 	ld	E,A
      000027 EE 02                  459 	xor	#2
      000029 CB 37                  460 	swap	A
      00002B B3                     461 	or	E ; E = ((__lcd_int_state & 1) << 5) | (((!__lcd_int_state) & 1) << 1)
      00002C 5F                     462 	ld	E, A ; when WIN is ON, OBJ are OFF
      00002D F0r00                  463 	ldh	A, (#_LCDC_REG)
      00002F E6 DD                  464 	and	#0xDD ; mask other bits except WIN and OBJ
      000031 B3                     465 	or	E
      000032 E0r00                  466 	ldh	(#_LCDC_REG), A ; manipulate WIN and OBJ visibiliry
      000034 7A                     467 	ld	A, D
      000035 B7                     468 	or	A
      000036 C0                     469 	ret	NZ
      000037 3E 01                  470 	ld	A, #1
      000039 EA 00 20               471 	ld	(#0x2000), A
      00003C CDr00r00               472 	call	#_hUGE_dosound
      00003F 21r00r00               473 	ld	HL, #___banks_sp ; _current_bank = ((*__banks_sp)), *(uint8_t *)0x2000 = ((*__banks_sp));
      000042 2A                     474 	ld	A, (HL+)
      000043 66                     475 	ld	H, (HL)
      000044 6F                     476 	ld	L, A
      000045 7E                     477 	ld	A, (HL)
      000046 EA 00 20               478 	ld	(#0x2000), A
      000049 C9                     479 	ret
                                    480 ;src/mushroompie.c:350: }    
                                    481 ;src/mushroompie.c:351: void vbl_interrupt() NONBANKED __naked
                                    482 ;	---------------------------------
                                    483 ; Function vbl_interrupt
                                    484 ; ---------------------------------
      00004A                        485 _vbl_interrupt::
                                    486 ;src/mushroompie.c:373: __endasm;
      00004A FAr36r02               487 	ld	A, (#_bkg_scroll_x_target)
      00004D E0r00                  488 	ldh	(#_SCX_REG), A
      00004F FAr37r02               489 	ld	A, (#_bkg_scroll_y_target)
      000052 E0r00                  490 	ldh	(#_SCY_REG), A
      000054 FAr26r00               491 	ld	A, (#_tim_div)
      000057 3C                     492 	inc	A
      000058 E6 03                  493 	and	#3
      00005A EAr26r00               494 	ld	(#_tim_div), A
      00005D 20 05                  495 	jr	NZ, vblint01$
      00005F 21r08r00               496 	ld	HL, #_ani_update
      000062 36 01                  497 	ld	(HL), #1
      000064                        498 	vblint01$:
      000064 E6 01                  499 	and #1
      000066 28 03                  500 	jr	Z, vblint02$
      000068 EAr0Ar00               501 	ld	(#_bal_update), A
      00006B                        502 	vblint02$:
      00006B 3E 01                  503 	ld A, #1
      00006D EAr09r00               504 	ld	(#_walk_update), A
      000070 C9                     505 	ret
                                    506 ;src/mushroompie.c:374: } 
                                    507 ;src/misc/inventory.c:74: void show_dialog_window(const UBYTE lines, const dialog_item* item) NONBANKED {
                                    508 ;	---------------------------------
                                    509 ; Function show_dialog_window
                                    510 ; ---------------------------------
      000071                        511 _show_dialog_window::
                                    512 ;src/misc/inventory.c:75: push_bank(1);
      000071 3E 01                  513 	ld	a, #0x01
      000073 F5                     514 	push	af
      000074 33                     515 	inc	sp
      000075 CDr00r00               516 	call	_push_bank
      000078 33                     517 	inc	sp
                                    518 ;src/misc/inventory.c:76: execute_dialog(lines, item);
      000079 F8 03                  519 	ldhl	sp,	#3
      00007B 2A                     520 	ld	a, (hl+)
      00007C 5F                     521 	ld	e, a
      00007D 3A                     522 	ld	a, (hl-)
      00007E 2B                     523 	dec	hl
      00007F 57                     524 	ld	d, a
      000080 D5                     525 	push	de
      000081 7E                     526 	ld	a, (hl)
      000082 F5                     527 	push	af
      000083 33                     528 	inc	sp
      000084 CDr00r00               529 	call	_execute_dialog
      000087 E8 03                  530 	add	sp, #3
                                    531 ;src/misc/inventory.c:77: pop_bank();
                                    532 ;src/misc/inventory.c:78: }
      000089 C3r00r00               533 	jp	_pop_bank
      00008C                        534 _itmdesc_pickaxe:
      00008C 01                     535 	.db #0x01	; 1
      00008D 01                     536 	.db #0x01	; 1
      00008E 01                     537 	.db #0x01	; 1
      00008F 03                     538 	.db #0x03	; 3
      000090 0A                     539 	.db #0x0a	; 10
      000091r42r01                  540 	.dw __str_0
      000093r00r00                  541 	.dw _pickaxe_tiles
      000095r00r00                  542 	.dw _pickaxe_mask
      000097                        543 _itmdesc_key:
      000097 02                     544 	.db #0x02	; 2
      000098 01                     545 	.db #0x01	; 1
      000099 04                     546 	.db #0x04	; 4
      00009A 0E                     547 	.db #0x0e	; 14
      00009B 0C                     548 	.db #0x0c	; 12
      00009Cr50r01                  549 	.dw __str_1
      00009Er00r00                  550 	.dw _key_tiles
      0000A0r00r00                  551 	.dw _key_mask
      0000A2                        552 _itmdesc_grass:
      0000A2 03                     553 	.db #0x03	; 3
      0000A3 01                     554 	.db #0x01	; 1
      0000A4 04                     555 	.db #0x04	; 4
      0000A5 0E                     556 	.db #0x0e	; 14
      0000A6 0C                     557 	.db #0x0c	; 12
      0000A7r5Dr01                  558 	.dw __str_2
      0000A9r00r00                  559 	.dw _grass_tiles
      0000ABr00r00                  560 	.dw _grass_mask
      0000AD                        561 _itmdesc_mushrooms:
      0000AD 04                     562 	.db #0x04	; 4
      0000AE 01                     563 	.db #0x01	; 1
      0000AF 00                     564 	.db #0x00	; 0
      0000B0 07                     565 	.db #0x07	; 7
      0000B1 06                     566 	.db #0x06	; 6
      0000B2r6Br01                  567 	.dw __str_3
      0000B4r00r00                  568 	.dw _mushrooms_tiles
      0000B6r00r00                  569 	.dw _mushrooms_mask
      0000B8                        570 _itmdesc_pie:
      0000B8 05                     571 	.db #0x05	; 5
      0000B9 FF                     572 	.db #0xff	; 255
      0000BA FF                     573 	.db #0xff	; 255
      0000BB 00                     574 	.db #0x00	; 0
      0000BC 00                     575 	.db #0x00	; 0
      0000BDr75r01                  576 	.dw __str_4
      0000BFr00r00                  577 	.dw _pie_tiles
      0000C1r00r00                  578 	.dw _pie_mask
      0000C3                        579 _itmdesc_jar:
      0000C3 06                     580 	.db #0x06	; 6
      0000C4 00                     581 	.db #0x00	; 0
      0000C5 05                     582 	.db #0x05	; 5
      0000C6 02                     583 	.db #0x02	; 2
      0000C7 0E                     584 	.db #0x0e	; 14
      0000C8r82r01                  585 	.dw __str_5
      0000CAr00r00                  586 	.dw _jar_tiles
      0000CCr00r00                  587 	.dw _jar_mask
      0000CE                        588 _itmdesc_lid:
      0000CE 07                     589 	.db #0x07	; 7
      0000CF 00                     590 	.db #0x00	; 0
      0000D0 02                     591 	.db #0x02	; 2
      0000D1 07                     592 	.db #0x07	; 7
      0000D2 04                     593 	.db #0x04	; 4
      0000D3r8Cr01                  594 	.dw __str_6
      0000D5r00r00                  595 	.dw _lid_tiles
      0000D7r00r00                  596 	.dw _lid_mask
      0000D9                        597 _itmdesc_firefly:
      0000D9 08                     598 	.db #0x08	; 8
      0000DA FF                     599 	.db #0xff	; 255
      0000DB FF                     600 	.db #0xff	; 255
      0000DC 00                     601 	.db #0x00	; 0
      0000DD 00                     602 	.db #0x00	; 0
      0000DEr97r01                  603 	.dw __str_7
      0000E0 00 00                  604 	.dw #0x0000
      0000E2 00 00                  605 	.dw #0x0000
      0000E4                        606 _itmdesc_blockage2:
      0000E4 0C                     607 	.db #0x0c	; 12
      0000E5 01                     608 	.db #0x01	; 1
      0000E6 01                     609 	.db #0x01	; 1
      0000E7 12                     610 	.db #0x12	; 18
      0000E8 0A                     611 	.db #0x0a	; 10
      0000E9r9Fr01                  612 	.dw __str_8
      0000EBr00r00                  613 	.dw _blockage2_tiles
      0000ED 00 00                  614 	.dw #0x0000
      0000EF                        615 _itmdesc_blockage1:
      0000EF 0D                     616 	.db #0x0d	; 13
      0000F0 01                     617 	.db #0x01	; 1
      0000F1 01                     618 	.db #0x01	; 1
      0000F2 11                     619 	.db #0x11	; 17
      0000F3 0A                     620 	.db #0x0a	; 10
      0000F4r9Fr01                  621 	.dw __str_8
      0000F6r00r00                  622 	.dw _blockage1_tiles
      0000F8 00 00                  623 	.dw #0x0000
      0000FA                        624 _itmdesc_blockage0:
      0000FA 0E                     625 	.db #0x0e	; 14
      0000FB 01                     626 	.db #0x01	; 1
      0000FC 01                     627 	.db #0x01	; 1
      0000FD 11                     628 	.db #0x11	; 17
      0000FE 09                     629 	.db #0x09	; 9
      0000FFr9Fr01                  630 	.dw __str_8
      000101r00r00                  631 	.dw _blockage0_tiles
      000103 00 00                  632 	.dw #0x0000
      000105                        633 _itmdesc_coin0:
      000105 89                     634 	.db #0x89	; 137
      000106 01                     635 	.db #0x01	; 1
      000107 01                     636 	.db #0x01	; 1
      000108 12                     637 	.db #0x12	; 18
      000109 02                     638 	.db #0x02	; 2
      00010ArA8r01                  639 	.dw __str_9
      00010Cr00r00                  640 	.dw _coin_tiles
      00010Er00r00                  641 	.dw _coin_mask
      000110                        642 _itmdesc_coin1:
      000110 8A                     643 	.db #0x8a	; 138
      000111 00                     644 	.db #0x00	; 0
      000112 00                     645 	.db #0x00	; 0
      000113 14                     646 	.db #0x14	; 20
      000114 05                     647 	.db #0x05	; 5
      000115rA8r01                  648 	.dw __str_9
      000117r00r00                  649 	.dw _coin_tiles
      000119r00r00                  650 	.dw _coin_mask
      00011B                        651 _itmdesc_coin2:
      00011B 8B                     652 	.db #0x8b	; 139
      00011C 01                     653 	.db #0x01	; 1
      00011D 03                     654 	.db #0x03	; 3
      00011E 01                     655 	.db #0x01	; 1
      00011F 02                     656 	.db #0x02	; 2
      000120rA8r01                  657 	.dw __str_9
      000122r00r00                  658 	.dw _coin_tiles
      000124r00r00                  659 	.dw _coin_mask
      000126                        660 _all_items_desc:
      000126r8Cr00                  661 	.dw _itmdesc_pickaxe
      000128r97r00                  662 	.dw _itmdesc_key
      00012ArADr00                  663 	.dw _itmdesc_mushrooms
      00012CrA2r00                  664 	.dw _itmdesc_grass
      00012ErB8r00                  665 	.dw _itmdesc_pie
      000130rC3r00                  666 	.dw _itmdesc_jar
      000132rCEr00                  667 	.dw _itmdesc_lid
      000134rD9r00                  668 	.dw _itmdesc_firefly
      000136rE4r00                  669 	.dw _itmdesc_blockage2
      000138rEFr00                  670 	.dw _itmdesc_blockage1
      00013ArFAr00                  671 	.dw _itmdesc_blockage0
      00013Cr05r01                  672 	.dw _itmdesc_coin0
      00013Er10r01                  673 	.dw _itmdesc_coin1
      000140r1Br01                  674 	.dw _itmdesc_coin2
      000142                        675 __str_0:
      000142 48 45 41 56 59 20 50   676 	.ascii "HEAVY PICKAXE"
             49 43 4B 41 58 45
      00014F 00                     677 	.db 0x00
      000150                        678 __str_1:
      000150 45 4C 45 56 41 54 4F   679 	.ascii "ELEVATOR KEY"
             52 20 4B 45 59
      00015C 00                     680 	.db 0x00
      00015D                        681 __str_2:
      00015D 54 55 46 54 20 4F 46   682 	.ascii "TUFT OF GRASS"
             20 47 52 41 53 53
      00016A 00                     683 	.db 0x00
      00016B                        684 __str_3:
      00016B 4D 55 53 48 52 4F 4F   685 	.ascii "MUSHROOMS"
             4D 53
      000174 00                     686 	.db 0x00
      000175                        687 __str_4:
      000175 4D 55 53 48 52 4F 4F   688 	.ascii "MUSHROOM PIE"
             4D 20 50 49 45
      000181 00                     689 	.db 0x00
      000182                        690 __str_5:
      000182 47 4C 41 53 53 20 4A   691 	.ascii "GLASS JAR"
             41 52
      00018B 00                     692 	.db 0x00
      00018C                        693 __str_6:
      00018C 57 4F 4F 44 45 4E 20   694 	.ascii "WOODEN LID"
             4C 49 44
      000196 00                     695 	.db 0x00
      000197                        696 __str_7:
      000197 46 49 52 45 46 4C 59   697 	.ascii "FIREFLY"
      00019E 00                     698 	.db 0x00
      00019F                        699 __str_8:
      00019F 42 4F 55 4C 44 45 52   700 	.ascii "BOULDERS"
             53
      0001A7 00                     701 	.db 0x00
      0001A8                        702 __str_9:
      0001A8 43 4F 49 4E            703 	.ascii "COIN"
      0001AC 00                     704 	.db 0x00
                                    705 ;src/misc/inventory.c:81: game_item * show_inventory() NONBANKED {
                                    706 ;	---------------------------------
                                    707 ; Function show_inventory
                                    708 ; ---------------------------------
      0001AD                        709 _show_inventory::
                                    710 ;src/misc/inventory.c:82: push_bank(1);
      0001AD 3E 01                  711 	ld	a, #0x01
      0001AF F5                     712 	push	af
      0001B0 33                     713 	inc	sp
      0001B1 CDr00r00               714 	call	_push_bank
      0001B4 33                     715 	inc	sp
                                    716 ;src/misc/inventory.c:83: game_item * res = execute_inventory();
      0001B5 CDr00r00               717 	call	_execute_inventory
                                    718 ;src/misc/inventory.c:84: pop_bank();
      0001B8 D5                     719 	push	de
      0001B9 CDr00r00               720 	call	_pop_bank
      0001BC D1                     721 	pop	de
                                    722 ;src/misc/inventory.c:85: return res;
                                    723 ;src/misc/inventory.c:86: }
      0001BD C9                     724 	ret
                                    725 ;src/misc/inventory.c:157: void place_room_items(const UBYTE row, const UBYTE col, unsigned char * room_buf) NONBANKED {
                                    726 ;	---------------------------------
                                    727 ; Function place_room_items
                                    728 ; ---------------------------------
      0001BE                        729 _place_room_items::
      0001BE 3B                     730 	dec	sp
      0001BF 3B                     731 	dec	sp
                                    732 ;src/misc/inventory.c:158: item_tiles_hiwater = window_tiles_hiwater;
      0001C0 FAr43r02               733 	ld	a, (#_window_tiles_hiwater)
      0001C3 EAr46r02               734 	ld	(#_item_tiles_hiwater),a
                                    735 ;src/misc/inventory.c:159: __temp_game_item = game_item_list.first;
      0001C6 11rC6r02               736 	ld	de, #(_game_item_list + 1)
      0001C9 1A                     737 	ld	a, (de)
      0001CA 21rCAr02               738 	ld	hl, #___temp_game_item
      0001CD 22                     739 	ld	(hl+), a
      0001CE 13                     740 	inc	de
      0001CF 1A                     741 	ld	a, (de)
      0001D0 77                     742 	ld	(hl), a
                                    743 ;src/misc/inventory.c:160: while (__temp_game_item) {
      0001D1                        744 00110$:
      0001D1 21rCBr02               745 	ld	hl, #___temp_game_item + 1
      0001D4 3A                     746 	ld	a, (hl-)
      0001D5 B6                     747 	or	a, (hl)
      0001D6 CArE3r03               748 	jp	Z, 00117$
                                    749 ;src/misc/inventory.c:161: if ((__temp_game_item->room_row == row) && (__temp_game_item->room_col == col)) {
      0001D9 7E                     750 	ld	a, (hl)
      0001DA F8 00                  751 	ldhl	sp,	#0
      0001DC 77                     752 	ld	(hl), a
      0001DD FArCBr02               753 	ld	a, (#___temp_game_item + 1)
      0001E0 F8 01                  754 	ldhl	sp,	#1
      0001E2 77                     755 	ld	(hl), a
      0001E3 C1                     756 	pop	bc
      0001E4 C5                     757 	push	bc
      0001E5 03                     758 	inc	bc
      0001E6 0A                     759 	ld	a, (bc)
      0001E7 4F                     760 	ld	c, a
      0001E8 F8 04                  761 	ldhl	sp,	#4
      0001EA 7E                     762 	ld	a, (hl)
      0001EB 91                     763 	sub	a, c
      0001EC C2rCCr03               764 	jp	NZ,00108$
      0001EF C1                     765 	pop	bc
      0001F0 C5                     766 	push	bc
      0001F1 03                     767 	inc	bc
      0001F2 03                     768 	inc	bc
      0001F3 0A                     769 	ld	a, (bc)
      0001F4 4F                     770 	ld	c, a
      0001F5 F8 05                  771 	ldhl	sp,	#5
      0001F7 7E                     772 	ld	a, (hl)
      0001F8 91                     773 	sub	a, c
      0001F9 C2rCCr03               774 	jp	NZ,00108$
                                    775 ;src/misc/inventory.c:162: __temp_tiledata = __temp_game_item->desc->data;
      0001FC D1                     776 	pop	de
      0001FD D5                     777 	push	de
      0001FE 21 05 00               778 	ld	hl, #0x0005
      000201 19                     779 	add	hl, de
      000202 2A                     780 	ld	a, (hl+)
      000203 4F                     781 	ld	c, a
      000204 46                     782 	ld	b, (hl)
      000205 21 07 00               783 	ld	hl, #0x0007
      000208 09                     784 	add	hl, bc
      000209 5D                     785 	ld	e, l
      00020A 54                     786 	ld	d, h
      00020B 1A                     787 	ld	a, (de)
      00020C 21rD2r02               788 	ld	hl, #___temp_tiledata
      00020F 22                     789 	ld	(hl+), a
      000210 13                     790 	inc	de
      000211 1A                     791 	ld	a, (de)
      000212 77                     792 	ld	(hl), a
                                    793 ;src/misc/inventory.c:163: if (__temp_tiledata) {
      000213 21rD3r02               794 	ld	hl, #___temp_tiledata + 1
      000216 3A                     795 	ld	a, (hl-)
      000217 B6                     796 	or	a, (hl)
      000218 CArCCr03               797 	jp	Z, 00108$
                                    798 ;src/misc/inventory.c:164: item_tiles_hiwater -= item_map_size;
      00021B 21r46r02               799 	ld	hl, #_item_tiles_hiwater
      00021E 7E                     800 	ld	a, (hl)
      00021F C6 FC                  801 	add	a, #0xfc
      000221 77                     802 	ld	(hl), a
                                    803 ;src/misc/inventory.c:167: push_bank(1); 
      000222 3E 01                  804 	ld	a, #0x01
      000224 F5                     805 	push	af
      000225 33                     806 	inc	sp
      000226 CDr00r00               807 	call	_push_bank
      000229 33                     808 	inc	sp
                                    809 ;src/misc/inventory.c:168: unshrink_tiles_to_buf(item_map_size, __temp_tiledata->data, __temp_item_tiledata0); 
      00022A 21rD2r02               810 	ld	hl, #___temp_tiledata
      00022D 2A                     811 	ld	a, (hl+)
      00022E 4F                     812 	ld	c, a
      00022F 46                     813 	ld	b, (hl)
      000230 03                     814 	inc	bc
      000231 11rDCr02               815 	ld	de, #___temp_item_tiledata0
      000234 D5                     816 	push	de
      000235 C5                     817 	push	bc
      000236 3E 04                  818 	ld	a, #0x04
      000238 F5                     819 	push	af
      000239 33                     820 	inc	sp
      00023A CDr00r00               821 	call	_unshrink_tiles_to_buf
      00023D E8 05                  822 	add	sp, #5
                                    823 ;src/misc/inventory.c:161: if ((__temp_game_item->room_row == row) && (__temp_game_item->room_col == col)) {
      00023F 21rCAr02               824 	ld	hl, #___temp_game_item
      000242 2A                     825 	ld	a, (hl+)
      000243 4F                     826 	ld	c, a
      000244 46                     827 	ld	b, (hl)
                                    828 ;src/misc/inventory.c:162: __temp_tiledata = __temp_game_item->desc->data;
      000245 21 05 00               829 	ld	hl, #0x0005
      000248 09                     830 	add	hl, bc
                                    831 ;src/misc/inventory.c:169: __temp_tiledata = (__temp_game_item->desc->mask) ? __temp_game_item->desc->mask : &null_mask;
      000249 2A                     832 	ld	a, (hl+)
      00024A 4F                     833 	ld	c, a
      00024B 46                     834 	ld	b, (hl)
      00024C 21 09 00               835 	ld	hl, #0x0009
      00024F 09                     836 	add	hl, bc
      000250 2A                     837 	ld	a, (hl+)
      000251 4F                     838 	ld	c, a
      000252 46                     839 	ld	b, (hl)
      000253 78                     840 	ld	a, b
      000254 B1                     841 	or	a, c
      000255 20 03                  842 	jr	NZ, 00120$
      000257 01r00r00               843 	ld	bc, #_null_mask
      00025A                        844 00120$:
      00025A 21rD2r02               845 	ld	hl, #___temp_tiledata
      00025D 79                     846 	ld	a, c
      00025E 22                     847 	ld	(hl+), a
                                    848 ;src/misc/inventory.c:170: unshrink_tiles_to_buf(item_map_size, __temp_tiledata->data, __temp_item_tiledata2); 
      00025F 78                     849 	ld	a, b
      000260 32                     850 	ld	(hl-), a
      000261 2A                     851 	ld	a, (hl+)
      000262 4F                     852 	ld	c, a
      000263 46                     853 	ld	b, (hl)
      000264 03                     854 	inc	bc
      000265 11r5Cr03               855 	ld	de, #___temp_item_tiledata2
      000268 D5                     856 	push	de
      000269 C5                     857 	push	bc
      00026A 3E 04                  858 	ld	a, #0x04
      00026C F5                     859 	push	af
      00026D 33                     860 	inc	sp
      00026E CDr00r00               861 	call	_unshrink_tiles_to_buf
      000271 E8 05                  862 	add	sp, #5
                                    863 ;src/misc/inventory.c:171: pop_bank();
      000273 CDr00r00               864 	call	_pop_bank
                                    865 ;src/misc/inventory.c:174: get_map_from_buf(__temp_game_item->x, __temp_game_item->y, item_width, item_height, __temp_bkg_tiles, room_buf, room_width, room_height);
                                    866 ;src/misc/inventory.c:161: if ((__temp_game_item->room_row == row) && (__temp_game_item->room_col == col)) {
      000276 21rCAr02               867 	ld	hl, #___temp_game_item
      000279 2A                     868 	ld	a, (hl+)
      00027A 4F                     869 	ld	c, a
      00027B 46                     870 	ld	b, (hl)
                                    871 ;src/misc/inventory.c:174: get_map_from_buf(__temp_game_item->x, __temp_game_item->y, item_width, item_height, __temp_bkg_tiles, room_buf, room_width, room_height);
      00027C 21 04 00               872 	ld	hl, #0x0004
      00027F 09                     873 	add	hl, bc
      000280 56                     874 	ld	d, (hl)
      000281 03                     875 	inc	bc
      000282 03                     876 	inc	bc
      000283 03                     877 	inc	bc
      000284 0A                     878 	ld	a, (bc)
      000285 26 11                  879 	ld	h, #0x11
                                    880 ;	spillPairReg hl
                                    881 ;	spillPairReg hl
      000287 E5                     882 	push	hl
      000288 33                     883 	inc	sp
      000289 26 1E                  884 	ld	h, #0x1e
                                    885 ;	spillPairReg hl
                                    886 ;	spillPairReg hl
      00028B E5                     887 	push	hl
      00028C 33                     888 	inc	sp
      00028D F8 08                  889 	ldhl	sp,	#8
      00028F 4E                     890 	ld	c, (hl)
      000290 23                     891 	inc	hl
      000291 46                     892 	ld	b, (hl)
      000292 C5                     893 	push	bc
      000293 01rD8r02               894 	ld	bc, #___temp_bkg_tiles
      000296 C5                     895 	push	bc
      000297 26 02                  896 	ld	h, #0x02
                                    897 ;	spillPairReg hl
                                    898 ;	spillPairReg hl
      000299 E5                     899 	push	hl
      00029A 33                     900 	inc	sp
      00029B 26 02                  901 	ld	h, #0x02
                                    902 ;	spillPairReg hl
                                    903 ;	spillPairReg hl
      00029D 6A                     904 	ld	l, d
      00029E E5                     905 	push	hl
      00029F F5                     906 	push	af
      0002A0 33                     907 	inc	sp
      0002A1 CDr00r00               908 	call	_get_map_from_buf
      0002A4 E8 0A                  909 	add	sp, #10
                                    910 ;src/misc/inventory.c:178: __temp_j = current_room->room_tiles->count;
      0002A6 21r0Er00               911 	ld	hl, #_current_room
      0002A9 2A                     912 	ld	a, (hl+)
      0002AA 4F                     913 	ld	c, a
      0002AB 46                     914 	ld	b, (hl)
      0002AC 21 05 00               915 	ld	hl, #0x0005
      0002AF 09                     916 	add	hl, bc
      0002B0 2A                     917 	ld	a, (hl+)
      0002B1 4F                     918 	ld	c, a
      0002B2 46                     919 	ld	b, (hl)
      0002B3 0A                     920 	ld	a, (bc)
      0002B4 EAr0Cr02               921 	ld	(#___temp_j),a
                                    922 ;src/misc/inventory.c:179: __temp_text_ptr1 = __temp_item_tiledata1;
      0002B7 21rB2r03               923 	ld	hl, #___temp_text_ptr1
      0002BA 36r1C                  924 	ld	(hl), #<(___temp_item_tiledata1)
      0002BC 23                     925 	inc	hl
      0002BD 36s03                  926 	ld	(hl), #>(___temp_item_tiledata1)
                                    927 ;src/misc/inventory.c:180: for (__temp_i = 0; __temp_i < item_map_size; __temp_i++) {
      0002BF 21r0Br02               928 	ld	hl, #___temp_i
      0002C2 36 00                  929 	ld	(hl), #0x00
      0002C4                        930 00113$:
                                    931 ;src/misc/inventory.c:181: __temp_k = __temp_bkg_tiles[__temp_i];
      0002C4 3ErD8                  932 	ld	a, #<(___temp_bkg_tiles)
      0002C6 21r0Br02               933 	ld	hl, #___temp_i
      0002C9 86                     934 	add	a, (hl)
      0002CA 4F                     935 	ld	c, a
      0002CB 3Es02                  936 	ld	a, #>(___temp_bkg_tiles)
      0002CD CE 00                  937 	adc	a, #0x00
      0002CF 47                     938 	ld	b, a
      0002D0 0A                     939 	ld	a, (bc)
                                    940 ;src/misc/inventory.c:182: if (__temp_k >= __temp_j) __temp_k = 0; // merge with bkg tiles only, "modified tile" = empty, can't drop item on item
      0002D1 EAr0Dr02               941 	ld	(#___temp_k),a
      0002D4 21r0Cr02               942 	ld	hl, #___temp_j
      0002D7 96                     943 	sub	a, (hl)
      0002D8 38 05                  944 	jr	C, 00102$
      0002DA 21r0Dr02               945 	ld	hl, #___temp_k
      0002DD 36 00                  946 	ld	(hl), #0x00
      0002DF                        947 00102$:
                                    948 ;src/misc/inventory.c:183: unshrink_tiles_to_buf(1, get_shrinked_tile_offset(__temp_k, current_room->room_tiles->data), __temp_text_ptr1);
      0002DF 21r0Er00               949 	ld	hl, #_current_room
      0002E2 2A                     950 	ld	a, (hl+)
      0002E3 4F                     951 	ld	c, a
      0002E4 46                     952 	ld	b, (hl)
      0002E5 21 05 00               953 	ld	hl, #0x0005
      0002E8 09                     954 	add	hl, bc
      0002E9 2A                     955 	ld	a, (hl+)
      0002EA 4F                     956 	ld	c, a
      0002EB 46                     957 	ld	b, (hl)
      0002EC 03                     958 	inc	bc
      0002ED C5                     959 	push	bc
      0002EE FAr0Dr02               960 	ld	a, (#___temp_k)
      0002F1 F5                     961 	push	af
      0002F2 33                     962 	inc	sp
      0002F3 CDr00r00               963 	call	_get_shrinked_tile_offset
      0002F6 E8 03                  964 	add	sp, #3
      0002F8 21rB2r03               965 	ld	hl, #___temp_text_ptr1
      0002FB 2A                     966 	ld	a, (hl+)
      0002FC 4F                     967 	ld	c, a
      0002FD 46                     968 	ld	b, (hl)
      0002FE C5                     969 	push	bc
      0002FF D5                     970 	push	de
      000300 3E 01                  971 	ld	a, #0x01
      000302 F5                     972 	push	af
      000303 33                     973 	inc	sp
      000304 CDr00r00               974 	call	_unshrink_tiles_to_buf
      000307 E8 05                  975 	add	sp, #5
                                    976 ;src/misc/inventory.c:184: __temp_text_ptr1 += 16;
      000309 21rB2r03               977 	ld	hl, #___temp_text_ptr1
      00030C 7E                     978 	ld	a, (hl)
      00030D C6 10                  979 	add	a, #0x10
      00030F 22                     980 	ld	(hl+), a
      000310 7E                     981 	ld	a, (hl)
      000311 CE 00                  982 	adc	a, #0x00
      000313 77                     983 	ld	(hl), a
                                    984 ;src/misc/inventory.c:180: for (__temp_i = 0; __temp_i < item_map_size; __temp_i++) {
      000314 21r0Br02               985 	ld	hl, #___temp_i
      000317 34                     986 	inc	(hl)
      000318 7E                     987 	ld	a, (hl)
      000319 D6 04                  988 	sub	a, #0x04
      00031B 38 A7                  989 	jr	C, 00113$
                                    990 ;src/misc/inventory.c:187: __temp_text_ptr0 = __temp_item_tiledata0; __temp_text_ptr1 = __temp_item_tiledata1; __temp_text_ptr2 = __temp_item_tiledata2;
      00031D 21rB0r03               991 	ld	hl, #___temp_text_ptr0
      000320 36rDC                  992 	ld	(hl), #<(___temp_item_tiledata0)
      000322 23                     993 	inc	hl
      000323 36s02                  994 	ld	(hl), #>(___temp_item_tiledata0)
      000325 21rB2r03               995 	ld	hl, #___temp_text_ptr1
      000328 36r1C                  996 	ld	(hl), #<(___temp_item_tiledata1)
      00032A 23                     997 	inc	hl
      00032B 36s03                  998 	ld	(hl), #>(___temp_item_tiledata1)
      00032D 21rB4r03               999 	ld	hl, #___temp_text_ptr2
      000330 36r5C                 1000 	ld	(hl), #<(___temp_item_tiledata2)
      000332 23                    1001 	inc	hl
      000333 36s03                 1002 	ld	(hl), #>(___temp_item_tiledata2)
                                   1003 ;src/misc/inventory.c:188: for (__temp_i = 0; __temp_i < item_tiledata_size; __temp_i++) {
      000335 21r0Br02              1004 	ld	hl, #___temp_i
      000338 36 00                 1005 	ld	(hl), #0x00
      00033A                       1006 00115$:
                                   1007 ;src/misc/inventory.c:189: *__temp_text_ptr0 = *__temp_text_ptr1 & *__temp_text_ptr2 | *__temp_text_ptr0;
      00033A 21rB0r03              1008 	ld	hl, #___temp_text_ptr0
      00033D 2A                    1009 	ld	a, (hl+)
      00033E 4F                    1010 	ld	c, a
      00033F 46                    1011 	ld	b, (hl)
      000340 21rB2r03              1012 	ld	hl, #___temp_text_ptr1
      000343 6E                    1013 	ld	l, (hl)
                                   1014 ;	spillPairReg hl
                                   1015 ;	spillPairReg hl
      000344 FArB3r03              1016 	ld	a, (___temp_text_ptr1 + 1)
      000347 67                    1017 	ld	h, a
                                   1018 ;	spillPairReg hl
                                   1019 ;	spillPairReg hl
      000348 5E                    1020 	ld	e, (hl)
      000349 21rB4r03              1021 	ld	hl, #___temp_text_ptr2
      00034C 6E                    1022 	ld	l, (hl)
                                   1023 ;	spillPairReg hl
                                   1024 ;	spillPairReg hl
      00034D FArB5r03              1025 	ld	a, (___temp_text_ptr2 + 1)
      000350 67                    1026 	ld	h, a
                                   1027 ;	spillPairReg hl
                                   1028 ;	spillPairReg hl
      000351 7E                    1029 	ld	a, (hl)
      000352 A3                    1030 	and	a, e
      000353 5F                    1031 	ld	e, a
      000354 0A                    1032 	ld	a, (bc)
      000355 B3                    1033 	or	a, e
      000356 02                    1034 	ld	(bc), a
                                   1035 ;src/misc/inventory.c:190: __temp_text_ptr0++; __temp_text_ptr1++; __temp_text_ptr2++;
      000357 21rB0r03              1036 	ld	hl, #___temp_text_ptr0
      00035A 34                    1037 	inc	(hl)
      00035B 20 02                 1038 	jr	NZ, 00180$
      00035D 23                    1039 	inc	hl
      00035E 34                    1040 	inc	(hl)
      00035F                       1041 00180$:
      00035F 21rB2r03              1042 	ld	hl, #___temp_text_ptr1
      000362 34                    1043 	inc	(hl)
      000363 20 02                 1044 	jr	NZ, 00181$
      000365 23                    1045 	inc	hl
      000366 34                    1046 	inc	(hl)
      000367                       1047 00181$:
      000367 21rB4r03              1048 	ld	hl, #___temp_text_ptr2
      00036A 34                    1049 	inc	(hl)
      00036B 20 02                 1050 	jr	NZ, 00182$
      00036D 23                    1051 	inc	hl
      00036E 34                    1052 	inc	(hl)
      00036F                       1053 00182$:
                                   1054 ;src/misc/inventory.c:188: for (__temp_i = 0; __temp_i < item_tiledata_size; __temp_i++) {
      00036F 21r0Br02              1055 	ld	hl, #___temp_i
      000372 34                    1056 	inc	(hl)
      000373 7E                    1057 	ld	a, (hl)
      000374 D6 40                 1058 	sub	a, #0x40
      000376 38 C2                 1059 	jr	C, 00115$
                                   1060 ;src/misc/inventory.c:194: set_bkg_data(item_tiles_hiwater, item_map_size, __temp_item_tiledata0);
      000378 11rDCr02              1061 	ld	de, #___temp_item_tiledata0
      00037B D5                    1062 	push	de
      00037C 3E 04                 1063 	ld	a, #0x04
      00037E F5                    1064 	push	af
      00037F 33                    1065 	inc	sp
      000380 FAr46r02              1066 	ld	a, (#_item_tiles_hiwater)
      000383 F5                    1067 	push	af
      000384 33                    1068 	inc	sp
      000385 CDr00r00              1069 	call	_set_bkg_data
      000388 E8 04                 1070 	add	sp, #4
                                   1071 ;src/misc/inventory.c:197: set_inc_tiles(item_tiles_hiwater, item_map_size, __temp_tiles);
      00038A 11rD4r02              1072 	ld	de, #___temp_tiles
      00038D D5                    1073 	push	de
      00038E 3E 04                 1074 	ld	a, #0x04
      000390 F5                    1075 	push	af
      000391 33                    1076 	inc	sp
      000392 FAr46r02              1077 	ld	a, (#_item_tiles_hiwater)
      000395 F5                    1078 	push	af
      000396 33                    1079 	inc	sp
      000397 CDr00r00              1080 	call	_set_inc_tiles
      00039A E8 04                 1081 	add	sp, #4
                                   1082 ;src/misc/inventory.c:198: put_map_to_buf(__temp_game_item->x, __temp_game_item->y, item_width, item_height, __temp_tiles, room_buf, room_width, room_height);
                                   1083 ;src/misc/inventory.c:161: if ((__temp_game_item->room_row == row) && (__temp_game_item->room_col == col)) {
      00039C 21rCAr02              1084 	ld	hl, #___temp_game_item
      00039F 2A                    1085 	ld	a, (hl+)
      0003A0 4F                    1086 	ld	c, a
      0003A1 46                    1087 	ld	b, (hl)
                                   1088 ;src/misc/inventory.c:198: put_map_to_buf(__temp_game_item->x, __temp_game_item->y, item_width, item_height, __temp_tiles, room_buf, room_width, room_height);
      0003A2 21 04 00              1089 	ld	hl, #0x0004
      0003A5 09                    1090 	add	hl, bc
      0003A6 56                    1091 	ld	d, (hl)
      0003A7 03                    1092 	inc	bc
      0003A8 03                    1093 	inc	bc
      0003A9 03                    1094 	inc	bc
      0003AA 0A                    1095 	ld	a, (bc)
      0003AB 26 11                 1096 	ld	h, #0x11
                                   1097 ;	spillPairReg hl
                                   1098 ;	spillPairReg hl
      0003AD E5                    1099 	push	hl
      0003AE 33                    1100 	inc	sp
      0003AF 26 1E                 1101 	ld	h, #0x1e
                                   1102 ;	spillPairReg hl
                                   1103 ;	spillPairReg hl
      0003B1 E5                    1104 	push	hl
      0003B2 33                    1105 	inc	sp
      0003B3 F8 08                 1106 	ldhl	sp,	#8
      0003B5 4E                    1107 	ld	c, (hl)
      0003B6 23                    1108 	inc	hl
      0003B7 46                    1109 	ld	b, (hl)
      0003B8 C5                    1110 	push	bc
      0003B9 01rD4r02              1111 	ld	bc, #___temp_tiles
      0003BC C5                    1112 	push	bc
      0003BD 26 02                 1113 	ld	h, #0x02
                                   1114 ;	spillPairReg hl
                                   1115 ;	spillPairReg hl
      0003BF E5                    1116 	push	hl
      0003C0 33                    1117 	inc	sp
      0003C1 26 02                 1118 	ld	h, #0x02
                                   1119 ;	spillPairReg hl
                                   1120 ;	spillPairReg hl
      0003C3 6A                    1121 	ld	l, d
      0003C4 E5                    1122 	push	hl
      0003C5 F5                    1123 	push	af
      0003C6 33                    1124 	inc	sp
      0003C7 CDr00r00              1125 	call	_put_map_to_buf
      0003CA E8 0A                 1126 	add	sp, #10
      0003CC                       1127 00108$:
                                   1128 ;src/misc/inventory.c:201: __temp_game_item = __temp_game_item->next;
      0003CC 21rCAr02              1129 	ld	hl, #___temp_game_item
      0003CF 2A                    1130 	ld	a, (hl+)
      0003D0 4F                    1131 	ld	c, a
      0003D1 46                    1132 	ld	b, (hl)
      0003D2 21 07 00              1133 	ld	hl, #0x0007
      0003D5 09                    1134 	add	hl, bc
      0003D6 5D                    1135 	ld	e, l
      0003D7 54                    1136 	ld	d, h
      0003D8 1A                    1137 	ld	a, (de)
      0003D9 21rCAr02              1138 	ld	hl, #___temp_game_item
      0003DC 22                    1139 	ld	(hl+), a
      0003DD 13                    1140 	inc	de
      0003DE 1A                    1141 	ld	a, (de)
      0003DF 77                    1142 	ld	(hl), a
      0003E0 C3rD1r01              1143 	jp	00110$
      0003E3                       1144 00117$:
                                   1145 ;src/misc/inventory.c:203: }
      0003E3 33                    1146 	inc	sp
      0003E4 33                    1147 	inc	sp
      0003E5 C9                    1148 	ret
                                   1149 	.area _HOME
                                   1150 ;--------------------------------------------------------
                                   1151 ; code
                                   1152 ;--------------------------------------------------------
                                   1153 	.area _CODE
                                   1154 ;src/misc/energy.c:26: void unshrink_and_mask(UBYTE npix, const unsigned char * source, unsigned char * dest) {
                                   1155 ;	---------------------------------
                                   1156 ; Function unshrink_and_mask
                                   1157 ; ---------------------------------
      000000                       1158 _unshrink_and_mask::
      000000 3B                    1159 	dec	sp
      000001 3B                    1160 	dec	sp
                                   1161 ;src/misc/energy.c:27: UBYTE mask = (0xFF << (8 - npix));
      000002 F8 04                 1162 	ldhl	sp,	#4
      000004 4E                    1163 	ld	c, (hl)
      000005 3E 08                 1164 	ld	a, #0x08
      000007 91                    1165 	sub	a, c
      000008 4F                    1166 	ld	c, a
      000009 F8 00                 1167 	ldhl	sp,	#0
      00000B 36 FF                 1168 	ld	(hl), #0xff
      00000D 0C                    1169 	inc	c
      00000E 18 04                 1170 	jr	00119$
      000010                       1171 00118$:
      000010 F8 00                 1172 	ldhl	sp,	#0
      000012 CB 26                 1173 	sla	(hl)
      000014                       1174 00119$:
      000014 0D                    1175 	dec	c
      000015 20 F9                 1176 	jr	NZ,00118$
                                   1177 ;src/misc/energy.c:28: source++;
      000017 F8 05                 1178 	ldhl	sp,	#5
      000019 34                    1179 	inc	(hl)
      00001A 20 02                 1180 	jr	NZ, 00120$
      00001C 23                    1181 	inc	hl
      00001D 34                    1182 	inc	(hl)
      00001E                       1183 00120$:
                                   1184 ;src/misc/energy.c:29: for (UBYTE i = 0; i < 8; i++) {
      00001E F8 05                 1185 	ldhl	sp,	#5
      000020 2A                    1186 	ld	a, (hl+)
      000021 4F                    1187 	ld	c, a
      000022 46                    1188 	ld	b, (hl)
      000023 F8 01                 1189 	ldhl	sp,	#1
      000025 36 00                 1190 	ld	(hl), #0x00
      000027                       1191 00103$:
      000027 F8 01                 1192 	ldhl	sp,	#1
      000029 7E                    1193 	ld	a, (hl)
      00002A D6 08                 1194 	sub	a, #0x08
      00002C 30 21                 1195 	jr	NC, 00105$
                                   1196 ;src/misc/energy.c:30: *dest = ((*source) & mask); dest++;
      00002E F8 07                 1197 	ldhl	sp,	#7
      000030 2A                    1198 	ld	a, (hl+)
      000031 5F                    1199 	ld	e, a
      000032 56                    1200 	ld	d, (hl)
      000033 0A                    1201 	ld	a, (bc)
      000034 F8 00                 1202 	ldhl	sp,	#0
      000036 A6                    1203 	and	a, (hl)
      000037 12                    1204 	ld	(de), a
      000038 13                    1205 	inc	de
      000039 F8 07                 1206 	ldhl	sp,	#7
      00003B 7B                    1207 	ld	a, e
      00003C 22                    1208 	ld	(hl+), a
                                   1209 ;src/misc/energy.c:31: *dest = 0x00; dest++;
      00003D 7A                    1210 	ld	a, d
      00003E 32                    1211 	ld	(hl-), a
      00003F 2A                    1212 	ld	a, (hl+)
      000040 5F                    1213 	ld	e, a
      000041 3A                    1214 	ld	a, (hl-)
      000042 57                    1215 	ld	d, a
      000043 AF                    1216 	xor	a, a
      000044 12                    1217 	ld	(de), a
      000045 13                    1218 	inc	de
      000046 7B                    1219 	ld	a, e
      000047 22                    1220 	ld	(hl+), a
      000048 72                    1221 	ld	(hl), d
                                   1222 ;src/misc/energy.c:32: source++;  
      000049 03                    1223 	inc	bc
                                   1224 ;src/misc/energy.c:29: for (UBYTE i = 0; i < 8; i++) {
      00004A F8 01                 1225 	ldhl	sp,	#1
      00004C 34                    1226 	inc	(hl)
      00004D 18 D8                 1227 	jr	00103$
      00004F                       1228 00105$:
                                   1229 ;src/misc/energy.c:34: }
      00004F 33                    1230 	inc	sp
      000050 33                    1231 	inc	sp
      000051 C9                    1232 	ret
      000052                       1233 _dizzy_offsets:
      000052 26                    1234 	.db #0x26	; 38
      000053 04                    1235 	.db #0x04	; 4
      000054 2E                    1236 	.db #0x2e	; 46
      000055 04                    1237 	.db #0x04	; 4
      000056 26                    1238 	.db #0x26	; 38
      000057 0C                    1239 	.db #0x0c	; 12
      000058 2E                    1240 	.db #0x2e	; 46
      000059 0C                    1241 	.db #0x0c	; 12
      00005A 26                    1242 	.db #0x26	; 38
      00005B 14                    1243 	.db #0x14	; 20
      00005C 2E                    1244 	.db #0x2e	; 46
      00005D 14                    1245 	.db #0x14	; 20
      00005E 36                    1246 	.db #0x36	; 54	'6'
      00005F 04                    1247 	.db #0x04	; 4
      000060 36                    1248 	.db #0x36	; 54	'6'
      000061 0C                    1249 	.db #0x0c	; 12
      000062 36                    1250 	.db #0x36	; 54	'6'
      000063 14                    1251 	.db #0x14	; 20
      000064                       1252 _stand_ani:
      000064 02                    1253 	.db #0x02	; 2
      000065 00                    1254 	.db #0x00	; 0
      000066 FF                    1255 	.db #0xff	; 255
      000067 00                    1256 	.db #0x00	; 0
      000068 00                    1257 	.db #0x00	; 0
      000069r00r00                 1258 	.dw _m_stand_0
      00006Br00r00                 1259 	.dw _m_stand_1
      00006D                       1260 _up_ani:
      00006D 10                    1261 	.db #0x10	; 16
      00006E 00                    1262 	.db #0x00	; 0
      00006F 00                    1263 	.db #0x00	; 0
      000070 00                    1264 	.db #0x00	; 0
      000071 01                    1265 	.db #0x01	; 1
      000072r00r00                 1266 	.dw _m_stand_0
      000074r00r00                 1267 	.dw _m_up_0
      000076r00r00                 1268 	.dw _m_up_1
      000078r00r00                 1269 	.dw _m_up_2
      00007Ar00r00                 1270 	.dw _m_up_3
      00007Cr00r00                 1271 	.dw _m_up_4
      00007Er00r00                 1272 	.dw _m_up_5
      000080r00r00                 1273 	.dw _m_up_6
      000082r00r00                 1274 	.dw _m_stand_0
      000084r00r00                 1275 	.dw _m_up_0
      000086r00r00                 1276 	.dw _m_up_1
      000088r00r00                 1277 	.dw _m_up_2
      00008Ar00r00                 1278 	.dw _m_up_3
      00008Cr00r00                 1279 	.dw _m_up_4
      00008Er00r00                 1280 	.dw _m_up_5
      000090r00r00                 1281 	.dw _m_up_6
      000092                       1282 _walk_r_ani:
      000092 08                    1283 	.db #0x08	; 8
      000093 00                    1284 	.db #0x00	; 0
      000094 FF                    1285 	.db #0xff	; 255
      000095 00                    1286 	.db #0x00	; 0
      000096 04                    1287 	.db #0x04	; 4
      000097r00r00                 1288 	.dw _m_walk_r_0
      000099r00r00                 1289 	.dw _m_walk_r_1
      00009Br00r00                 1290 	.dw _m_walk_r_2
      00009Dr00r00                 1291 	.dw _m_walk_r_1
      00009Fr00r00                 1292 	.dw _m_walk_r_0
      0000A1r00r00                 1293 	.dw _m_walk_r_3
      0000A3r00r00                 1294 	.dw _m_walk_r_2
      0000A5r00r00                 1295 	.dw _m_walk_r_3
      0000A7                       1296 _walk_l_ani:
      0000A7 08                    1297 	.db #0x08	; 8
      0000A8 00                    1298 	.db #0x00	; 0
      0000A9 FF                    1299 	.db #0xff	; 255
      0000AA 00                    1300 	.db #0x00	; 0
      0000AB 05                    1301 	.db #0x05	; 5
      0000ACr00r00                 1302 	.dw _m_walk_l_0
      0000AEr00r00                 1303 	.dw _m_walk_l_1
      0000B0r00r00                 1304 	.dw _m_walk_l_2
      0000B2r00r00                 1305 	.dw _m_walk_l_1
      0000B4r00r00                 1306 	.dw _m_walk_l_0
      0000B6r00r00                 1307 	.dw _m_walk_l_3
      0000B8r00r00                 1308 	.dw _m_walk_l_2
      0000BAr00r00                 1309 	.dw _m_walk_l_3
      0000BC                       1310 _roll_r_ani:
      0000BC 08                    1311 	.db #0x08	; 8
      0000BD 00                    1312 	.db #0x00	; 0
      0000BE FE                    1313 	.db #0xfe	; 254
      0000BF 02                    1314 	.db #0x02	; 2
      0000C0 04                    1315 	.db #0x04	; 4
      0000C1r00r00                 1316 	.dw _m_walk_r_0
      0000C3r00r00                 1317 	.dw _m_roll_r_0
      0000C5r00r00                 1318 	.dw _m_roll_r_1
      0000C7r00r00                 1319 	.dw _m_roll_r_2
      0000C9r00r00                 1320 	.dw _m_roll_r_3
      0000CBr00r00                 1321 	.dw _m_roll_r_4
      0000CDr00r00                 1322 	.dw _m_roll_r_5
      0000CFr00r00                 1323 	.dw _m_roll_r_6
      0000D1                       1324 _roll_l_ani:
      0000D1 08                    1325 	.db #0x08	; 8
      0000D2 00                    1326 	.db #0x00	; 0
      0000D3 FE                    1327 	.db #0xfe	; 254
      0000D4 03                    1328 	.db #0x03	; 3
      0000D5 05                    1329 	.db #0x05	; 5
      0000D6r00r00                 1330 	.dw _m_walk_l_0
      0000D8r00r00                 1331 	.dw _m_roll_l_0
      0000DAr00r00                 1332 	.dw _m_roll_l_1
      0000DCr00r00                 1333 	.dw _m_roll_l_2
      0000DEr00r00                 1334 	.dw _m_roll_l_3
      0000E0r00r00                 1335 	.dw _m_roll_l_4
      0000E2r00r00                 1336 	.dw _m_roll_l_5
      0000E4r00r00                 1337 	.dw _m_roll_l_6
      0000E6                       1338 _jump_r_ani:
      0000E6 10                    1339 	.db #0x10	; 16
      0000E7 00                    1340 	.db #0x00	; 0
      0000E8 00                    1341 	.db #0x00	; 0
      0000E9 02                    1342 	.db #0x02	; 2
      0000EA 04                    1343 	.db #0x04	; 4
      0000EBr00r00                 1344 	.dw _m_walk_r_0
      0000EDr00r00                 1345 	.dw _m_roll_r_0
      0000EFr00r00                 1346 	.dw _m_roll_r_1
      0000F1r00r00                 1347 	.dw _m_roll_r_2
      0000F3r00r00                 1348 	.dw _m_roll_r_3
      0000F5r00r00                 1349 	.dw _m_roll_r_4
      0000F7r00r00                 1350 	.dw _m_roll_r_5
      0000F9r00r00                 1351 	.dw _m_roll_r_6
      0000FBr00r00                 1352 	.dw _m_walk_r_0
      0000FDr00r00                 1353 	.dw _m_roll_r_0
      0000FFr00r00                 1354 	.dw _m_roll_r_1
      000101r00r00                 1355 	.dw _m_roll_r_2
      000103r00r00                 1356 	.dw _m_roll_r_3
      000105r00r00                 1357 	.dw _m_roll_r_4
      000107r00r00                 1358 	.dw _m_roll_r_5
      000109r00r00                 1359 	.dw _m_roll_r_6
      00010B                       1360 _jump_l_ani:
      00010B 10                    1361 	.db #0x10	; 16
      00010C 00                    1362 	.db #0x00	; 0
      00010D 00                    1363 	.db #0x00	; 0
      00010E 03                    1364 	.db #0x03	; 3
      00010F 05                    1365 	.db #0x05	; 5
      000110r00r00                 1366 	.dw _m_walk_l_0
      000112r00r00                 1367 	.dw _m_roll_l_0
      000114r00r00                 1368 	.dw _m_roll_l_1
      000116r00r00                 1369 	.dw _m_roll_l_2
      000118r00r00                 1370 	.dw _m_roll_l_3
      00011Ar00r00                 1371 	.dw _m_roll_l_4
      00011Cr00r00                 1372 	.dw _m_roll_l_5
      00011Er00r00                 1373 	.dw _m_roll_l_6
      000120r00r00                 1374 	.dw _m_walk_l_0
      000122r00r00                 1375 	.dw _m_roll_l_0
      000124r00r00                 1376 	.dw _m_roll_l_1
      000126r00r00                 1377 	.dw _m_roll_l_2
      000128r00r00                 1378 	.dw _m_roll_l_3
      00012Ar00r00                 1379 	.dw _m_roll_l_4
      00012Cr00r00                 1380 	.dw _m_roll_l_5
      00012Er00r00                 1381 	.dw _m_roll_l_6
      000130                       1382 _stun_ani:
      000130 08                    1383 	.db #0x08	; 8
      000131 00                    1384 	.db #0x00	; 0
      000132 FE                    1385 	.db #0xfe	; 254
      000133 00                    1386 	.db #0x00	; 0
      000134 00                    1387 	.db #0x00	; 0
      000135r00r00                 1388 	.dw _m_stun_0
      000137r00r00                 1389 	.dw _m_stun_1
      000139r00r00                 1390 	.dw _m_stun_0
      00013Br00r00                 1391 	.dw _m_stun_2
      00013Dr00r00                 1392 	.dw _m_stun_3
      00013Fr00r00                 1393 	.dw _m_stun_2
      000141r00r00                 1394 	.dw _m_stun_3
      000143r00r00                 1395 	.dw _m_stun_4
      000145                       1396 _dead_ani:
      000145 04                    1397 	.db #0x04	; 4
      000146 03                    1398 	.db #0x03	; 3
      000147 FE                    1399 	.db #0xfe	; 254
      000148 07                    1400 	.db #0x07	; 7
      000149 07                    1401 	.db #0x07	; 7
      00014Ar00r00                 1402 	.dw _m_dead_0
      00014Cr00r00                 1403 	.dw _m_dead_1
      00014Er00r00                 1404 	.dw _m_dead_2
      000150r00r00                 1405 	.dw _m_dead_1
      000152                       1406 _animation:
      000152r64r00                 1407 	.dw _stand_ani
      000154r6Dr00                 1408 	.dw _up_ani
      000156r92r00                 1409 	.dw _walk_r_ani
      000158rA7r00                 1410 	.dw _walk_l_ani
      00015ArBCr00                 1411 	.dw _roll_r_ani
      00015CrD1r00                 1412 	.dw _roll_l_ani
      00015Er30r01                 1413 	.dw _stun_ani
      000160r45r01                 1414 	.dw _dead_ani
      000162rE6r00                 1415 	.dw _jump_r_ani
      000164r0Br01                 1416 	.dw _jump_l_ani
      000166                       1417 _move_y_dynamics:
      000166 20                    1418 	.db #0x20	; 32
      000167 FC FF                 1419 	.dw #0xfffc
      000169 FC FF                 1420 	.dw #0xfffc
      00016B FD FF                 1421 	.dw #0xfffd
      00016D FE FF                 1422 	.dw #0xfffe
      00016F FE FF                 1423 	.dw #0xfffe
      000171 FF FF                 1424 	.dw #0xffff
      000173 FE FF                 1425 	.dw #0xfffe
      000175 FF FF                 1426 	.dw #0xffff
      000177 FF FF                 1427 	.dw #0xffff
      000179 FF FF                 1428 	.dw #0xffff
      00017B FF FF                 1429 	.dw #0xffff
      00017D FF FF                 1430 	.dw #0xffff
      00017F 00 00                 1431 	.dw #0x0000
      000181 FF FF                 1432 	.dw #0xffff
      000183 00 00                 1433 	.dw #0x0000
      000185 00 00                 1434 	.dw #0x0000
      000187 00 00                 1435 	.dw #0x0000
      000189 00 00                 1436 	.dw #0x0000
      00018B 01 00                 1437 	.dw #0x0001
      00018D 00 00                 1438 	.dw #0x0000
      00018F 01 00                 1439 	.dw #0x0001
      000191 01 00                 1440 	.dw #0x0001
      000193 01 00                 1441 	.dw #0x0001
      000195 01 00                 1442 	.dw #0x0001
      000197 01 00                 1443 	.dw #0x0001
      000199 02 00                 1444 	.dw #0x0002
      00019B 01 00                 1445 	.dw #0x0001
      00019D 02 00                 1446 	.dw #0x0002
      00019F 02 00                 1447 	.dw #0x0002
      0001A1 03 00                 1448 	.dw #0x0003
      0001A3 04 00                 1449 	.dw #0x0004
      0001A5 04 00                 1450 	.dw #0x0004
      0001A7                       1451 _double_y_dynamics:
      0001A7 20                    1452 	.db #0x20	; 32
      0001A8 F8 FF                 1453 	.dw #0xfff8
      0001AA F8 FF                 1454 	.dw #0xfff8
      0001AC FA FF                 1455 	.dw #0xfffa
      0001AE FC FF                 1456 	.dw #0xfffc
      0001B0 FC FF                 1457 	.dw #0xfffc
      0001B2 FC FF                 1458 	.dw #0xfffc
      0001B4 FD FF                 1459 	.dw #0xfffd
      0001B6 FD FF                 1460 	.dw #0xfffd
      0001B8 FD FF                 1461 	.dw #0xfffd
      0001BA FE FF                 1462 	.dw #0xfffe
      0001BC FE FF                 1463 	.dw #0xfffe
      0001BE FF FF                 1464 	.dw #0xffff
      0001C0 FF FF                 1465 	.dw #0xffff
      0001C2 FF FF                 1466 	.dw #0xffff
      0001C4 00 00                 1467 	.dw #0x0000
      0001C6 00 00                 1468 	.dw #0x0000
      0001C8 00 00                 1469 	.dw #0x0000
      0001CA 00 00                 1470 	.dw #0x0000
      0001CC 01 00                 1471 	.dw #0x0001
      0001CE 01 00                 1472 	.dw #0x0001
      0001D0 01 00                 1473 	.dw #0x0001
      0001D2 02 00                 1474 	.dw #0x0002
      0001D4 02 00                 1475 	.dw #0x0002
      0001D6 03 00                 1476 	.dw #0x0003
      0001D8 03 00                 1477 	.dw #0x0003
      0001DA 03 00                 1478 	.dw #0x0003
      0001DC 04 00                 1479 	.dw #0x0004
      0001DE 04 00                 1480 	.dw #0x0004
      0001E0 04 00                 1481 	.dw #0x0004
      0001E2 06 00                 1482 	.dw #0x0006
      0001E4 08 00                 1483 	.dw #0x0008
      0001E6 08 00                 1484 	.dw #0x0008
      0001E8                       1485 _move_y_data:
      0001E8 00 00                 1486 	.dw #0x0000
      0001EAr66r01                 1487 	.dw _move_y_dynamics
      0001EC 00 00                 1488 	.dw #0x0000
      0001EE 00 00                 1489 	.dw #0x0000
      0001F0 00 00                 1490 	.dw #0x0000
      0001F2 00 00                 1491 	.dw #0x0000
      0001F4 00 00                 1492 	.dw #0x0000
      0001F6 00 00                 1493 	.dw #0x0000
      0001F8r66r01                 1494 	.dw _move_y_dynamics
      0001FAr66r01                 1495 	.dw _move_y_dynamics
      0001FC                       1496 _double_y_data:
      0001FC 00 00                 1497 	.dw #0x0000
      0001FErA7r01                 1498 	.dw _double_y_dynamics
      000200 00 00                 1499 	.dw #0x0000
      000202 00 00                 1500 	.dw #0x0000
      000204 00 00                 1501 	.dw #0x0000
      000206 00 00                 1502 	.dw #0x0000
      000208 00 00                 1503 	.dw #0x0000
      00020A 00 00                 1504 	.dw #0x0000
      00020CrA7r01                 1505 	.dw _double_y_dynamics
      00020ErA7r01                 1506 	.dw _double_y_dynamics
      000210                       1507 _move_x_data:
      000210 00 00                 1508 	.dw #0x0000
      000212 00 00                 1509 	.dw #0x0000
      000214 01 00                 1510 	.dw #0x0001
      000216 FF FF                 1511 	.dw #0xffff
      000218 01 00                 1512 	.dw #0x0001
      00021A FF FF                 1513 	.dw #0xffff
      00021C 00 00                 1514 	.dw #0x0000
      00021E 00 00                 1515 	.dw #0x0000
      000220 01 00                 1516 	.dw #0x0001
      000222 FF FF                 1517 	.dw #0xffff
      000224                       1518 _fly_offsets:
      000224 28                    1519 	.db #0x28	; 40
      000225 08                    1520 	.db #0x08	; 8
      000226                       1521 _fly_delta:
      000226 FC FF                 1522 	.dw #0xfffc
      000228 FD FF                 1523 	.dw #0xfffd
      00022A FE FF                 1524 	.dw #0xfffe
      00022C 00 00                 1525 	.dw #0x0000
      00022E 00 00                 1526 	.dw #0x0000
      000230 02 00                 1527 	.dw #0x0002
      000232 03 00                 1528 	.dw #0x0003
      000234 04 00                 1529 	.dw #0x0004
      000236                       1530 _dizzy_world:
      000236r3Ar02                 1531 	.dw _world_row_0
      000238r47r02                 1532 	.dw _world_row_1
      00023A                       1533 _world_row_0:
      00023A 00                    1534 	.db #0x00	; 0
      00023Br54r02                 1535 	.dw _room_0_0
      00023Dr6Fr02                 1536 	.dw _room_1_0
      00023Fr8Ar02                 1537 	.dw _room_2_0
      000241rA5r02                 1538 	.dw _room_3_0
      000243rC0r02                 1539 	.dw _room_4_0
      000245rDBr02                 1540 	.dw _room_5_0
      000247                       1541 _world_row_1:
      000247 01                    1542 	.db #0x01	; 1
      000248rF6r02                 1543 	.dw _room_0_1
      00024Ar11r03                 1544 	.dw _room_1_1
      00024Cr2Cr03                 1545 	.dw _room_2_1
      00024Er47r03                 1546 	.dw _room_3_1
      000250r62r03                 1547 	.dw _room_4_1
      000252r7Dr03                 1548 	.dw _room_5_1
      000254                       1549 _room_0_0:
      000254 03                    1550 	.db #0x03	; 3
      000255r00r00                 1551 	.dw _room_0_0_map
      000257r00r00                 1552 	.dw _room_0_0_coll
      000259r00r00                 1553 	.dw _room_0_0_tiles
      00025B 00 00                 1554 	.dw #0x0000
      00025D 00 00                 1555 	.dw #0x0000
      00025F 00 00                 1556 	.dw #0x0000
      000261 00 00                 1557 	.dw #0x0000
      000263 00 00                 1558 	.dw #0x0000
      000265 00 00                 1559 	.dw #0x0000
      000267 00 00                 1560 	.dw #0x0000
      000269 00 00                 1561 	.dw #0x0000
      00026B 00 00                 1562 	.dw #0x0000
      00026D 00 00                 1563 	.dw #0x0000
      00026F                       1564 _room_1_0:
      00026F 03                    1565 	.db #0x03	; 3
      000270r00r00                 1566 	.dw _room_1_0_map
      000272r00r00                 1567 	.dw _room_1_0_coll
      000274r00r00                 1568 	.dw _room_1_0_tiles
      000276 00 00                 1569 	.dw #0x0000
      000278 00 00                 1570 	.dw #0x0000
      00027A 00 00                 1571 	.dw #0x0000
      00027C 00 00                 1572 	.dw #0x0000
      00027E 00 00                 1573 	.dw #0x0000
      000280 00 00                 1574 	.dw #0x0000
      000282 00 00                 1575 	.dw #0x0000
      000284 00 00                 1576 	.dw #0x0000
      000286 00 00                 1577 	.dw #0x0000
      000288 00 00                 1578 	.dw #0x0000
      00028A                       1579 _room_2_0:
      00028A 03                    1580 	.db #0x03	; 3
      00028Br00r00                 1581 	.dw _room_2_0_map
      00028Dr00r00                 1582 	.dw _room_2_0_coll
      00028Fr00r00                 1583 	.dw _room_2_0_tiles
      000291r00r00                 1584 	.dw _enemies_2_0_tiles
      000293r00r00                 1585 	.dw _init_room2_0
      000295r00r00                 1586 	.dw _move_spider
      000297r00r00                 1587 	.dw _draw_spider
      000299 00 00                 1588 	.dw #0x0000
      00029B 00 00                 1589 	.dw #0x0000
      00029Dr00r00                 1590 	.dw _coll_spider
      00029F 00 00                 1591 	.dw #0x0000
      0002A1 00 00                 1592 	.dw #0x0000
      0002A3 00 00                 1593 	.dw #0x0000
      0002A5                       1594 _room_3_0:
      0002A5 03                    1595 	.db #0x03	; 3
      0002A6r00r00                 1596 	.dw _room_3_0_map
      0002A8r00r00                 1597 	.dw _room_3_0_coll
      0002AAr00r00                 1598 	.dw _room_3_0_tiles
      0002AC 00 00                 1599 	.dw #0x0000
      0002AE 00 00                 1600 	.dw #0x0000
      0002B0 00 00                 1601 	.dw #0x0000
      0002B2 00 00                 1602 	.dw #0x0000
      0002B4 00 00                 1603 	.dw #0x0000
      0002B6 00 00                 1604 	.dw #0x0000
      0002B8 00 00                 1605 	.dw #0x0000
      0002BA 00 00                 1606 	.dw #0x0000
      0002BC 00 00                 1607 	.dw #0x0000
      0002BE 00 00                 1608 	.dw #0x0000
      0002C0                       1609 _room_4_0:
      0002C0 03                    1610 	.db #0x03	; 3
      0002C1r00r00                 1611 	.dw _room_4_0_map
      0002C3r00r00                 1612 	.dw _room_4_0_coll
      0002C5r00r00                 1613 	.dw _room_4_0_tiles
      0002C7r00r00                 1614 	.dw _enemies_4_0_tiles
      0002C9r00r00                 1615 	.dw _init_room4_0
      0002CBr00r00                 1616 	.dw _move_flies4_0
      0002CDr00r00                 1617 	.dw _draw_flies4_0
      0002CF 00 00                 1618 	.dw #0x0000
      0002D1 00 00                 1619 	.dw #0x0000
      0002D3 00 00                 1620 	.dw #0x0000
      0002D5r00r00                 1621 	.dw _dizzy_catches_firefly
      0002D7 00 00                 1622 	.dw #0x0000
      0002D9 00 00                 1623 	.dw #0x0000
      0002DB                       1624 _room_5_0:
      0002DB 03                    1625 	.db #0x03	; 3
      0002DCr00r00                 1626 	.dw _room_5_0_map
      0002DEr00r00                 1627 	.dw _room_5_0_coll
      0002E0r00r00                 1628 	.dw _room_5_0_tiles
      0002E2 00 00                 1629 	.dw #0x0000
      0002E4 00 00                 1630 	.dw #0x0000
      0002E6 00 00                 1631 	.dw #0x0000
      0002E8 00 00                 1632 	.dw #0x0000
      0002EA 00 00                 1633 	.dw #0x0000
      0002EC 00 00                 1634 	.dw #0x0000
      0002EE 00 00                 1635 	.dw #0x0000
      0002F0r00r00                 1636 	.dw _grand_gets_pie
      0002F2 00 00                 1637 	.dw #0x0000
      0002F4 00 00                 1638 	.dw #0x0000
      0002F6                       1639 _room_0_1:
      0002F6 04                    1640 	.db #0x04	; 4
      0002F7r00r00                 1641 	.dw _room_0_1_map
      0002F9r00r00                 1642 	.dw _room_0_1_coll
      0002FBr00r00                 1643 	.dw _room_0_1_tiles
      0002FDr00r00                 1644 	.dw _enemies_0_1_tiles
      0002FFr00r00                 1645 	.dw _init_room0_1
      000301r00r00                 1646 	.dw _move_bats0
      000303r00r00                 1647 	.dw _draw_bats0
      000305r00r00                 1648 	.dw _hcoll_darkness
      000307 00 00                 1649 	.dw #0x0000
      000309r00r00                 1650 	.dw _coll_bats
      00030Br00r00                 1651 	.dw _dizzy_drops_firefly
      00030Dr00r00                 1652 	.dw _reset_room0_1
      00030Fr00r00                 1653 	.dw _draw_room0_1
      000311                       1654 _room_1_1:
      000311 04                    1655 	.db #0x04	; 4
      000312r00r00                 1656 	.dw _room_1_1_map
      000314r00r00                 1657 	.dw _room_1_1_coll
      000316r00r00                 1658 	.dw _room_1_1_tiles
      000318r00r00                 1659 	.dw _enemies_1_1_tiles
      00031Ar00r00                 1660 	.dw _init_room1_1
      00031C 00 00                 1661 	.dw #0x0000
      00031Er00r00                 1662 	.dw _draw_flames1_1
      000320r00r00                 1663 	.dw _hcoll_blockage
      000322r00r00                 1664 	.dw _vcoll_blockage
      000324 00 00                 1665 	.dw #0x0000
      000326r00r00                 1666 	.dw _cleaning_path
      000328r00r00                 1667 	.dw _reset_room1
      00032A 00 00                 1668 	.dw #0x0000
      00032C                       1669 _room_2_1:
      00032C 04                    1670 	.db #0x04	; 4
      00032Dr00r00                 1671 	.dw _room_2_1_map
      00032Fr00r00                 1672 	.dw _room_2_1_coll
      000331r00r00                 1673 	.dw _room_2_1_tiles
      000333r00r00                 1674 	.dw _enemies_2_1_tiles
      000335r00r00                 1675 	.dw _init_room2
      000337r00r00                 1676 	.dw _move_elevator
      000339r00r00                 1677 	.dw _draw_elevator
      00033Br00r00                 1678 	.dw _hcoll_elevator
      00033Dr00r00                 1679 	.dw _vcoll_dylan
      00033F 00 00                 1680 	.dw #0x0000
      000341r00r00                 1681 	.dw _dylan_gets_key
      000343r00r00                 1682 	.dw _reset_room2
      000345 00 00                 1683 	.dw #0x0000
      000347                       1684 _room_3_1:
      000347 05                    1685 	.db #0x05	; 5
      000348r00r00                 1686 	.dw _room_3_1_map
      00034Ar00r00                 1687 	.dw _room_3_1_coll
      00034Cr00r00                 1688 	.dw _room_3_1_tiles
      00034Er00r00                 1689 	.dw _enemies_34_1_tiles
      000350r00r00                 1690 	.dw _init_room34
      000352r00r00                 1691 	.dw _move_float
      000354r00r00                 1692 	.dw _draw_float3
      000356r00r00                 1693 	.dw _hcoll_float3
      000358 00 00                 1694 	.dw #0x0000
      00035A 00 00                 1695 	.dw #0x0000
      00035C 00 00                 1696 	.dw #0x0000
      00035E 00 00                 1697 	.dw #0x0000
      000360 00 00                 1698 	.dw #0x0000
      000362                       1699 _room_4_1:
      000362 05                    1700 	.db #0x05	; 5
      000363r00r00                 1701 	.dw _room_4_1_map
      000365r00r00                 1702 	.dw _room_4_1_coll
      000367r00r00                 1703 	.dw _room_4_1_tiles
      000369r00r00                 1704 	.dw _enemies_34_1_tiles
      00036Br00r00                 1705 	.dw _init_room34
      00036Dr00r00                 1706 	.dw _move_float
      00036Fr00r00                 1707 	.dw _draw_float4
      000371r00r00                 1708 	.dw _hcoll_float4
      000373r00r00                 1709 	.dw _vcoll_troll
      000375 00 00                 1710 	.dw #0x0000
      000377 00 00                 1711 	.dw #0x0000
      000379r00r00                 1712 	.dw _reset_room4
      00037B 00 00                 1713 	.dw #0x0000
      00037D                       1714 _room_5_1:
      00037D 05                    1715 	.db #0x05	; 5
      00037Er00r00                 1716 	.dw _room_5_1_map
      000380r00r00                 1717 	.dw _room_5_1_coll
      000382r00r00                 1718 	.dw _room_5_1_tiles
      000384 00 00                 1719 	.dw #0x0000
      000386 00 00                 1720 	.dw #0x0000
      000388 00 00                 1721 	.dw #0x0000
      00038A 00 00                 1722 	.dw #0x0000
      00038Cr00r00                 1723 	.dw _hcoll_mushroom
      00038Er00r00                 1724 	.dw _vcoll_daisy
      000390 00 00                 1725 	.dw #0x0000
      000392r00r00                 1726 	.dw _daisy_gets_mushrooms
      000394r00r00                 1727 	.dw _reset_room5_1
      000396 00 00                 1728 	.dw #0x0000
      000398                       1729 _ptr_div_reg:
      000398 04 FF                 1730 	.dw #0xff04
      00039A                       1731 _empty_compressed_map:
      00039A FF                    1732 	.db #0xff	; 255
      00039B 00                    1733 	.db #0x00	; 0
      00039C FF                    1734 	.db #0xff	; 255
      00039D 00                    1735 	.db #0x00	; 0
      00039E FF                    1736 	.db #0xff	; 255
      00039F 00                    1737 	.db #0x00	; 0
      0003A0 FF                    1738 	.db #0xff	; 255
      0003A1 00                    1739 	.db #0x00	; 0
      0003A2 FF                    1740 	.db #0xff	; 255
      0003A3 00                    1741 	.db #0x00	; 0
      0003A4 FF                    1742 	.db #0xff	; 255
      0003A5 00                    1743 	.db #0x00	; 0
      0003A6 FF                    1744 	.db #0xff	; 255
      0003A7 00                    1745 	.db #0x00	; 0
      0003A8 FF                    1746 	.db #0xff	; 255
      0003A9 00                    1747 	.db #0x00	; 0
      0003AA                       1748 _evil_hide:
      0003AA 00                    1749 	.db #0x00	; 0
      0003AB 00                    1750 	.db #0x00	; 0
      0003AC 00                    1751 	.db #0x00	; 0
      0003AD 00                    1752 	.db #0x00	; 0
      0003AE 00                    1753 	.db #0x00	; 0
      0003AF 00                    1754 	.db #0x00	; 0
      0003B0 00                    1755 	.db #0x00	; 0
      0003B1 00                    1756 	.db #0x00	; 0
      0003B2 00                    1757 	.db #0x00	; 0
      0003B3 00                    1758 	.db #0x00	; 0
      0003B4 00                    1759 	.db #0x00	; 0
      0003B5 00                    1760 	.db #0x00	; 0
      0003B6 00                    1761 	.db #0x00	; 0
      0003B7 00                    1762 	.db #0x00	; 0
      0003B8 00                    1763 	.db #0x00	; 0
      0003B9 00                    1764 	.db #0x00	; 0
      0003BA 00                    1765 	.db #0x00	; 0
      0003BB 00                    1766 	.db #0x00	; 0
      0003BC 00                    1767 	.db #0x00	; 0
      0003BD 00                    1768 	.db #0x00	; 0
      0003BE 00                    1769 	.db #0x00	; 0
      0003BF 00                    1770 	.db #0x00	; 0
      0003C0 00                    1771 	.db #0x00	; 0
      0003C1 00                    1772 	.db #0x00	; 0
      0003C2 00                    1773 	.db #0x00	; 0
      0003C3 00                    1774 	.db #0x00	; 0
      0003C4 00                    1775 	.db #0x00	; 0
      0003C5 00                    1776 	.db #0x00	; 0
      0003C6 00                    1777 	.db #0x00	; 0
      0003C7 00                    1778 	.db #0x00	; 0
      0003C8 00                    1779 	.db #0x00	; 0
      0003C9 00                    1780 	.db #0x00	; 0
      0003CA                       1781 _current_coll_idx:
      0003CAr00r00                 1782 	.dw (_coll_buf + 0)
      0003CCr1Er00                 1783 	.dw (_coll_buf + 30)
      0003CEr3Cr00                 1784 	.dw (_coll_buf + 60)
      0003D0r5Ar00                 1785 	.dw (_coll_buf + 90)
      0003D2r78r00                 1786 	.dw (_coll_buf + 120)
      0003D4r96r00                 1787 	.dw (_coll_buf + 150)
      0003D6rB4r00                 1788 	.dw (_coll_buf + 180)
      0003D8rD2r00                 1789 	.dw (_coll_buf + 210)
      0003DArF0r00                 1790 	.dw (_coll_buf + 240)
      0003DCr0Er01                 1791 	.dw (_coll_buf + 270)
      0003DEr2Cr01                 1792 	.dw (_coll_buf + 300)
      0003E0r4Ar01                 1793 	.dw (_coll_buf + 330)
      0003E2r68r01                 1794 	.dw (_coll_buf + 360)
      0003E4r86r01                 1795 	.dw (_coll_buf + 390)
      0003E6rA4r01                 1796 	.dw (_coll_buf + 420)
      0003E8rC2r01                 1797 	.dw (_coll_buf + 450)
      0003EArE0r01                 1798 	.dw (_coll_buf + 480)
      0003EC                       1799 _ethalon_indicator:
      0003EC 00                    1800 	.db #0x00	; 0
      0003ED 01                    1801 	.db #0x01	; 1
      0003EE 01                    1802 	.db #0x01	; 1
      0003EF 01                    1803 	.db #0x01	; 1
      0003F0 01                    1804 	.db #0x01	; 1
      0003F1 01                    1805 	.db #0x01	; 1
      0003F2 01                    1806 	.db #0x01	; 1
      0003F3 02                    1807 	.db #0x02	; 2
      0003F4                       1808 _ethalon_tiles_offsets:
      0003F4 00                    1809 	.db #0x00	; 0
      0003F5 09                    1810 	.db #0x09	; 9
      0003F6 12                    1811 	.db #0x12	; 18
                                   1812 ;src/misc/energy.c:36: void init_dizzy_coins() { coins = 0; }
                                   1813 ;	---------------------------------
                                   1814 ; Function init_dizzy_coins
                                   1815 ; ---------------------------------
      0003F7                       1816 _init_dizzy_coins::
      0003F7 21r2Fr02              1817 	ld	hl, #_coins
      0003FA 36 00                 1818 	ld	(hl), #0x00
      0003FC C9                    1819 	ret
                                   1820 ;src/misc/energy.c:37: void init_dizzy_lives() { dizzy_lives = 3; }
                                   1821 ;	---------------------------------
                                   1822 ; Function init_dizzy_lives
                                   1823 ; ---------------------------------
      0003FD                       1824 _init_dizzy_lives::
      0003FD 21r13r02              1825 	ld	hl, #_dizzy_lives
      000400 36 03                 1826 	ld	(hl), #0x03
      000402 C9                    1827 	ret
                                   1828 ;src/misc/energy.c:38: void init_dizzy_energy() { dizzy_energy = 16; inc_energy = 48; dec_energy = 0; }
                                   1829 ;	---------------------------------
                                   1830 ; Function init_dizzy_energy
                                   1831 ; ---------------------------------
      000403                       1832 _init_dizzy_energy::
      000403 21r32r02              1833 	ld	hl, #_dizzy_energy
      000406 36 10                 1834 	ld	(hl), #0x10
      000408 21r34r02              1835 	ld	hl, #_inc_energy
      00040B 36 30                 1836 	ld	(hl), #0x30
      00040D 21r35r02              1837 	ld	hl, #_dec_energy
      000410 36 00                 1838 	ld	(hl), #0x00
      000412 C9                    1839 	ret
                                   1840 ;src/misc/energy.c:40: void on_dizzy_die() {
                                   1841 ;	---------------------------------
                                   1842 ; Function on_dizzy_die
                                   1843 ; ---------------------------------
      000413                       1844 _on_dizzy_die::
                                   1845 ;src/misc/energy.c:41: ani_type = ANI_DEAD;
      000413 21r02r00              1846 	ld	hl, #_ani_type
      000416 36 07                 1847 	ld	(hl), #0x07
                                   1848 ;src/misc/energy.c:42: ani_phase = 0; 
      000418 21r03r00              1849 	ld	hl, #_ani_phase
      00041B 36 00                 1850 	ld	(hl), #0x00
                                   1851 ;src/misc/energy.c:43: current_dyn = 0; current_dyn_phase = 0;
      00041D AF                    1852 	xor	a, a
      00041E 21r04r00              1853 	ld	hl, #_current_dyn
      000421 22                    1854 	ld	(hl+), a
      000422 77                    1855 	ld	(hl), a
      000423 21r07r00              1856 	ld	hl, #_current_dyn_phase
      000426 36 00                 1857 	ld	(hl), #0x00
                                   1858 ;src/misc/energy.c:44: death_pause = 32;
      000428 21r1Fr00              1859 	ld	hl, #_death_pause
      00042B 36 20                 1860 	ld	(hl), #0x20
                                   1861 ;src/misc/energy.c:45: }
      00042D C9                    1862 	ret
                                   1863 ;src/misc/energy.c:46: void show_lives() {
                                   1864 ;	---------------------------------
                                   1865 ; Function show_lives
                                   1866 ; ---------------------------------
      00042E                       1867 _show_lives::
                                   1868 ;src/misc/energy.c:47: for (__temp_i = 0; __temp_i < 3; __temp_i++) {
      00042E 21r0Br02              1869 	ld	hl, #___temp_i
      000431 36 00                 1870 	ld	(hl), #0x00
      000433                       1871 00105$:
                                   1872 ;src/misc/energy.c:48: if (__temp_i < dizzy_lives) dizzy_lives_indicator[__temp_i] = dizzy_live_symbol; else dizzy_lives_indicator[__temp_i] = 0x00;
      000433 3Er14                 1873 	ld	a, #<(_dizzy_lives_indicator)
      000435 21r0Br02              1874 	ld	hl, #___temp_i
      000438 86                    1875 	add	a, (hl)
      000439 4F                    1876 	ld	c, a
      00043A 3Es02                 1877 	ld	a, #>(_dizzy_lives_indicator)
      00043C CE 00                 1878 	adc	a, #0x00
      00043E 47                    1879 	ld	b, a
      00043F 7E                    1880 	ld	a, (hl)
      000440 21r13r02              1881 	ld	hl, #_dizzy_lives
      000443 96                    1882 	sub	a, (hl)
      000444 30 06                 1883 	jr	NC, 00102$
      000446 FAr10r02              1884 	ld	a, (#_dizzy_live_symbol)
      000449 02                    1885 	ld	(bc), a
      00044A 18 02                 1886 	jr	00106$
      00044C                       1887 00102$:
      00044C AF                    1888 	xor	a, a
      00044D 02                    1889 	ld	(bc), a
      00044E                       1890 00106$:
                                   1891 ;src/misc/energy.c:47: for (__temp_i = 0; __temp_i < 3; __temp_i++) {
      00044E 21r0Br02              1892 	ld	hl, #___temp_i
      000451 34                    1893 	inc	(hl)
      000452 7E                    1894 	ld	a, (hl)
      000453 D6 03                 1895 	sub	a, #0x03
      000455 38 DC                 1896 	jr	C, 00105$
                                   1897 ;src/misc/energy.c:50: set_win_tiles(15, 1, sizeof(dizzy_lives_indicator), 1, dizzy_lives_indicator);    
      000457 11r14r02              1898 	ld	de, #_dizzy_lives_indicator
      00045A D5                    1899 	push	de
      00045B 21 03 01              1900 	ld	hl, #0x103
      00045E E5                    1901 	push	hl
      00045F 21 0F 01              1902 	ld	hl, #0x10f
      000462 E5                    1903 	push	hl
      000463 CDr00r00              1904 	call	_set_win_tiles
      000466 E8 06                 1905 	add	sp, #6
                                   1906 ;src/misc/energy.c:51: }
      000468 C9                    1907 	ret
                                   1908 ;src/misc/energy.c:53: void add_coins(UBYTE n) __naked 
                                   1909 ;	---------------------------------
                                   1910 ; Function add_coins
                                   1911 ; ---------------------------------
      000469                       1912 _add_coins::
                                   1913 ;src/misc/energy.c:63: __endasm;
      000469 FAr2Fr02              1914 	ld	A, (#_coins)
      00046C F8 02                 1915 	lda	HL, 2(SP)
      00046E 86                    1916 	add	(HL)
      00046F 27                    1917 	daa
      000470 EAr2Fr02              1918 	ld	(#_coins), A
      000473 C9                    1919 	ret
                                   1920 ;src/misc/energy.c:64: }
                                   1921 ;src/misc/energy.c:65: void sub_coins(UBYTE n) __naked 
                                   1922 ;	---------------------------------
                                   1923 ; Function sub_coins
                                   1924 ; ---------------------------------
      000474                       1925 _sub_coins::
                                   1926 ;src/misc/energy.c:75: __endasm;
      000474 FAr2Fr02              1927 	ld	A, (#_coins)
      000477 F8 02                 1928 	lda	HL, 2(SP)
      000479 96                    1929 	sub	(HL)
      00047A 27                    1930 	daa
      00047B EAr2Fr02              1931 	ld	(#_coins), A
      00047E C9                    1932 	ret
                                   1933 ;src/misc/energy.c:76: }
                                   1934 ;src/misc/energy.c:77: void show_coins() {
                                   1935 ;	---------------------------------
                                   1936 ; Function show_coins
                                   1937 ; ---------------------------------
      00047F                       1938 _show_coins::
                                   1939 ;src/misc/energy.c:78: coins_indicator[0] = (coins >> 4) + digits_start;
      00047F 01r30r02              1940 	ld	bc, #_coins_indicator+0
      000482 FAr2Fr02              1941 	ld	a, (#_coins)
      000485 CB 37                 1942 	swap	a
      000487 E6 0F                 1943 	and	a, #0x0f
      000489 21r12r02              1944 	ld	hl, #_digits_start
      00048C 86                    1945 	add	a, (hl)
      00048D 02                    1946 	ld	(bc), a
                                   1947 ;src/misc/energy.c:79: coins_indicator[1] = (coins & 0x0F) + digits_start;
      00048E 59                    1948 	ld	e, c
      00048F 50                    1949 	ld	d, b
      000490 13                    1950 	inc	de
      000491 FAr2Fr02              1951 	ld	a, (#_coins)
      000494 E6 0F                 1952 	and	a, #0x0f
      000496 21r12r02              1953 	ld	hl, #_digits_start
      000499 6E                    1954 	ld	l, (hl)
                                   1955 ;	spillPairReg hl
                                   1956 ;	spillPairReg hl
      00049A 85                    1957 	add	a, l
      00049B 12                    1958 	ld	(de), a
                                   1959 ;src/misc/energy.c:80: set_win_tiles(2, 1, sizeof(coins_indicator), 1, coins_indicator);
      00049C C5                    1960 	push	bc
      00049D 21 02 01              1961 	ld	hl, #0x102
      0004A0 E5                    1962 	push	hl
      0004A1 E5                    1963 	push	hl
      0004A2 CDr00r00              1964 	call	_set_win_tiles
      0004A5 E8 06                 1965 	add	sp, #6
                                   1966 ;src/misc/energy.c:81: }
      0004A7 C9                    1967 	ret
                                   1968 ;src/misc/energy.c:83: void show_energy() {
                                   1969 ;	---------------------------------
                                   1970 ; Function show_energy
                                   1971 ; ---------------------------------
      0004A8                       1972 _show_energy::
                                   1973 ;src/misc/energy.c:84: push_bank(1);
      0004A8 3E 01                 1974 	ld	a, #0x01
      0004AA F5                    1975 	push	af
      0004AB 33                    1976 	inc	sp
      0004AC CDr00r00              1977 	call	_push_bank
      0004AF 33                    1978 	inc	sp
                                   1979 ;src/misc/energy.c:85: __temp_k = dizzy_energy;
      0004B0 FAr32r02              1980 	ld	a, (#_dizzy_energy)
      0004B3 EAr0Dr02              1981 	ld	(#___temp_k),a
                                   1982 ;src/misc/energy.c:86: for (__temp_i = 0; __temp_i < 8; __temp_i++) {
      0004B6 21r0Br02              1983 	ld	hl, #___temp_i
      0004B9 36 00                 1984 	ld	(hl), #0x00
      0004BB                       1985 00108$:
                                   1986 ;src/misc/energy.c:89: dizzy_energy_indicator[__temp_i] = (dizzy_energy_start + ethalon_indicator[__temp_i]);
      0004BB 3Er17                 1987 	ld	a, #<(_dizzy_energy_indicator)
      0004BD 21r0Br02              1988 	ld	hl, #___temp_i
      0004C0 86                    1989 	add	a, (hl)
      0004C1 4F                    1990 	ld	c, a
      0004C2 3Es02                 1991 	ld	a, #>(_dizzy_energy_indicator)
      0004C4 CE 00                 1992 	adc	a, #0x00
      0004C6 47                    1993 	ld	b, a
                                   1994 ;src/misc/energy.c:87: if (__temp_k) {
      0004C7 FAr0Dr02              1995 	ld	a, (#___temp_k)
      0004CA B7                    1996 	or	a, a
      0004CB 28 6F                 1997 	jr	Z, 00105$
                                   1998 ;src/misc/energy.c:89: dizzy_energy_indicator[__temp_i] = (dizzy_energy_start + ethalon_indicator[__temp_i]);
      0004CD 3ErEC                 1999 	ld	a, #<(_ethalon_indicator)
      0004CF 21r0Br02              2000 	ld	hl, #___temp_i
      0004D2 86                    2001 	add	a, (hl)
      0004D3 5F                    2002 	ld	e, a
      0004D4 3Es03                 2003 	ld	a, #>(_ethalon_indicator)
      0004D6 CE 00                 2004 	adc	a, #0x00
      0004D8 57                    2005 	ld	d, a
      0004D9 1A                    2006 	ld	a, (de)
      0004DA 5F                    2007 	ld	e, a
                                   2008 ;src/misc/energy.c:88: if (__temp_k >= 8) {
      0004DB FAr0Dr02              2009 	ld	a, (#___temp_k)
      0004DE D6 08                 2010 	sub	a, #0x08
      0004E0 38 0F                 2011 	jr	C, 00102$
                                   2012 ;src/misc/energy.c:89: dizzy_energy_indicator[__temp_i] = (dizzy_energy_start + ethalon_indicator[__temp_i]);
      0004E2 7B                    2013 	ld	a, e
      0004E3 21r11r02              2014 	ld	hl, #_dizzy_energy_start
      0004E6 86                    2015 	add	a, (hl)
      0004E7 02                    2016 	ld	(bc), a
                                   2017 ;src/misc/energy.c:90: __temp_k -= 8;
      0004E8 21r0Dr02              2018 	ld	hl, #___temp_k
      0004EB 7E                    2019 	ld	a, (hl)
      0004EC C6 F8                 2020 	add	a, #0xf8
      0004EE 77                    2021 	ld	(hl), a
      0004EF 18 4D                 2022 	jr	00109$
      0004F1                       2023 00102$:
                                   2024 ;src/misc/energy.c:92: unshrink_and_mask(__temp_k, ((unsigned char *)energy_tiles) + 1 + ethalon_tiles_offsets[ethalon_indicator[__temp_i]], temp_tile_buffer);
      0004F1 01r00r00              2025 	ld	bc, #_energy_tiles
      0004F4 03                    2026 	inc	bc
      0004F5 21rF4r03              2027 	ld	hl, #_ethalon_tiles_offsets
      0004F8 16 00                 2028 	ld	d, #0x00
      0004FA 19                    2029 	add	hl, de
      0004FB 6E                    2030 	ld	l, (hl)
                                   2031 ;	spillPairReg hl
      0004FC 26 00                 2032 	ld	h, #0x00
      0004FE 09                    2033 	add	hl, bc
      0004FF 11r1Fr02              2034 	ld	de, #_temp_tile_buffer
      000502 D5                    2035 	push	de
      000503 E5                    2036 	push	hl
      000504 FAr0Dr02              2037 	ld	a, (#___temp_k)
      000507 F5                    2038 	push	af
      000508 33                    2039 	inc	sp
      000509 CDr00r00              2040 	call	_unshrink_and_mask
      00050C E8 05                 2041 	add	sp, #5
                                   2042 ;src/misc/energy.c:93: set_win_data(dizzy_energy_start + 3, 1, temp_tile_buffer);
      00050E 21r11r02              2043 	ld	hl, #_dizzy_energy_start
      000511 7E                    2044 	ld	a, (hl)
      000512 C6 03                 2045 	add	a, #0x03
      000514 11r1Fr02              2046 	ld	de, #_temp_tile_buffer
      000517 D5                    2047 	push	de
      000518 26 01                 2048 	ld	h, #0x01
                                   2049 ;	spillPairReg hl
                                   2050 ;	spillPairReg hl
      00051A E5                    2051 	push	hl
      00051B 33                    2052 	inc	sp
      00051C F5                    2053 	push	af
      00051D 33                    2054 	inc	sp
      00051E CDr00r00              2055 	call	_set_win_data
      000521 E8 04                 2056 	add	sp, #4
                                   2057 ;src/misc/energy.c:94: dizzy_energy_indicator[__temp_i] = dizzy_energy_start + 3;
      000523 3Er17                 2058 	ld	a, #<(_dizzy_energy_indicator)
      000525 21r0Br02              2059 	ld	hl, #___temp_i
      000528 86                    2060 	add	a, (hl)
      000529 4F                    2061 	ld	c, a
      00052A 3Es02                 2062 	ld	a, #>(_dizzy_energy_indicator)
      00052C CE 00                 2063 	adc	a, #0x00
      00052E 47                    2064 	ld	b, a
      00052F FAr11r02              2065 	ld	a, (#_dizzy_energy_start)
      000532 C6 03                 2066 	add	a, #0x03
      000534 02                    2067 	ld	(bc), a
                                   2068 ;src/misc/energy.c:95: __temp_k = 0;
      000535 21r0Dr02              2069 	ld	hl, #___temp_k
      000538 36 00                 2070 	ld	(hl), #0x00
      00053A 18 02                 2071 	jr	00109$
      00053C                       2072 00105$:
                                   2073 ;src/misc/energy.c:98: dizzy_energy_indicator[__temp_i] = 0x00;
      00053C AF                    2074 	xor	a, a
      00053D 02                    2075 	ld	(bc), a
      00053E                       2076 00109$:
                                   2077 ;src/misc/energy.c:86: for (__temp_i = 0; __temp_i < 8; __temp_i++) {
      00053E 21r0Br02              2078 	ld	hl, #___temp_i
      000541 34                    2079 	inc	(hl)
      000542 7E                    2080 	ld	a, (hl)
      000543 D6 08                 2081 	sub	a, #0x08
      000545 DArBBr04              2082 	jp	C, 00108$
                                   2083 ;src/misc/energy.c:101: set_win_tiles(6, 1, sizeof(dizzy_energy_indicator), 1, dizzy_energy_indicator);
      000548 11r17r02              2084 	ld	de, #_dizzy_energy_indicator
      00054B D5                    2085 	push	de
      00054C 21 08 01              2086 	ld	hl, #0x108
      00054F E5                    2087 	push	hl
      000550 3E 01                 2088 	ld	a, #0x01
      000552 F5                    2089 	push	af
      000553 33                    2090 	inc	sp
      000554 3E 06                 2091 	ld	a, #0x06
      000556 F5                    2092 	push	af
      000557 33                    2093 	inc	sp
      000558 CDr00r00              2094 	call	_set_win_tiles
      00055B E8 06                 2095 	add	sp, #6
                                   2096 ;src/misc/energy.c:102: pop_bank();
                                   2097 ;src/misc/energy.c:103: }
      00055D C3r00r00              2098 	jp	_pop_bank
                                   2099 ;src/misc/energy.c:104: void update_energy() {
                                   2100 ;	---------------------------------
                                   2101 ; Function update_energy
                                   2102 ; ---------------------------------
      000560                       2103 _update_energy::
                                   2104 ;src/misc/energy.c:105: dizzy_energy_old = dizzy_energy;
      000560 FAr32r02              2105 	ld	a, (#_dizzy_energy)
      000563 EAr33r02              2106 	ld	(#_dizzy_energy_old),a
                                   2107 ;src/misc/energy.c:106: if (dec_energy) {
      000566 21r35r02              2108 	ld	hl, #_dec_energy
      000569 7E                    2109 	ld	a, (hl)
      00056A B7                    2110 	or	a, a
      00056B 28 31                 2111 	jr	Z, 00111$
                                   2112 ;src/misc/energy.c:107: dec_energy--;
      00056D 35                    2113 	dec	(hl)
                                   2114 ;src/misc/energy.c:108: if (dizzy_energy) {
      00056E 21r32r02              2115 	ld	hl, #_dizzy_energy
      000571 7E                    2116 	ld	a, (hl)
      000572 B7                    2117 	or	a, a
      000573 28 1C                 2118 	jr	Z, 00102$
                                   2119 ;src/misc/energy.c:109: dizzy_energy--;
      000575 35                    2120 	dec	(hl)
                                   2121 ;src/misc/energy.c:110: SND_HIT;
      000576 11 86 00              2122 	ld	de, #0x0086
      000579 D5                    2123 	push	de
      00057A 11 10 00              2124 	ld	de, #0x0010
      00057D D5                    2125 	push	de
      00057E 11 41 00              2126 	ld	de, #0x0041
      000581 D5                    2127 	push	de
      000582 AF                    2128 	xor	a, a
      000583 F5                    2129 	push	af
      000584 11 00 00              2130 	ld	de, #0x0000
      000587 D5                    2131 	push	de
      000588 21 00 04              2132 	ld	hl, #0x400
      00058B E5                    2133 	push	hl
      00058C CDr00r00              2134 	call	_PlayFx
      00058F E8 0C                 2135 	add	sp, #12
      000591                       2136 00102$:
                                   2137 ;src/misc/energy.c:112: if (!dizzy_energy) dec_energy = 0;
      000591 FAr32r02              2138 	ld	a, (#_dizzy_energy)
      000594 B7                    2139 	or	a, a
      000595 20 23                 2140 	jr	NZ, 00112$
      000597 21r35r02              2141 	ld	hl, #_dec_energy
      00059A 36 00                 2142 	ld	(hl), #0x00
      00059C 18 1C                 2143 	jr	00112$
      00059E                       2144 00111$:
                                   2145 ;src/misc/energy.c:113: } else if (inc_energy) {
      00059E FAr34r02              2146 	ld	a, (#_inc_energy)
      0005A1 B7                    2147 	or	a, a
      0005A2 28 16                 2148 	jr	Z, 00112$
                                   2149 ;src/misc/energy.c:114: dizzy_energy++; 
      0005A4 21r32r02              2150 	ld	hl, #_dizzy_energy
      0005A7 34                    2151 	inc	(hl)
                                   2152 ;src/misc/energy.c:115: if (dizzy_energy > 64) { 
      0005A8 3E 40                 2153 	ld	a, #0x40
      0005AA 96                    2154 	sub	a, (hl)
      0005AB 30 09                 2155 	jr	NC, 00106$
                                   2156 ;src/misc/energy.c:116: dizzy_energy = 64;
      0005AD 36 40                 2157 	ld	(hl), #0x40
                                   2158 ;src/misc/energy.c:117: inc_energy = 0;
      0005AF 21r34r02              2159 	ld	hl, #_inc_energy
      0005B2 36 00                 2160 	ld	(hl), #0x00
      0005B4 18 04                 2161 	jr	00112$
      0005B6                       2162 00106$:
                                   2163 ;src/misc/energy.c:118: } else inc_energy--;
      0005B6 21r34r02              2164 	ld	hl, #_inc_energy
      0005B9 35                    2165 	dec	(hl)
      0005BA                       2166 00112$:
                                   2167 ;src/misc/energy.c:120: if (dizzy_energy != dizzy_energy_old) {
      0005BA FAr32r02              2168 	ld	a, (#_dizzy_energy)
      0005BD 21r33r02              2169 	ld	hl, #_dizzy_energy_old
      0005C0 96                    2170 	sub	a, (hl)
      0005C1 C8                    2171 	ret	Z
                                   2172 ;src/misc/energy.c:121: if (!dizzy_energy) { 
      0005C2 21r32r02              2173 	ld	hl, #_dizzy_energy
      0005C5 7E                    2174 	ld	a, (hl)
      0005C6 B7                    2175 	or	a, a
      0005C7 C2rA8r04              2176 	jp	NZ,_show_energy
                                   2177 ;src/misc/energy.c:122: if (!death_pause) {
      0005CA 21r1Fr00              2178 	ld	hl, #_death_pause
      0005CD 7E                    2179 	ld	a, (hl)
      0005CE B7                    2180 	or	a, a
      0005CF C2rA8r04              2181 	jp	NZ,_show_energy
                                   2182 ;src/misc/energy.c:123: if (dizzy_lives) dizzy_lives--;
      0005D2 21r13r02              2183 	ld	hl, #_dizzy_lives
      0005D5 7E                    2184 	ld	a, (hl)
      0005D6 B7                    2185 	or	a, a
      0005D7 28 01                 2186 	jr	Z, 00114$
      0005D9 35                    2187 	dec	(hl)
      0005DA                       2188 00114$:
                                   2189 ;src/misc/energy.c:124: show_lives();
      0005DA CDr2Er04              2190 	call	_show_lives
                                   2191 ;src/misc/energy.c:125: on_dizzy_die();
      0005DD CDr13r04              2192 	call	_on_dizzy_die
                                   2193 ;src/misc/energy.c:126: if (!dizzy_lives) game_over = 1;
      0005E0 21r13r02              2194 	ld	hl, #_dizzy_lives
      0005E3 7E                    2195 	ld	a, (hl)
      0005E4 B7                    2196 	or	a, a
      0005E5 C2rA8r04              2197 	jp	NZ,_show_energy
      0005E8 21r1Er00              2198 	ld	hl, #_game_over
      0005EB 36 01                 2199 	ld	(hl), #0x01
                                   2200 ;src/misc/energy.c:129: show_energy();
                                   2201 ;src/misc/energy.c:131: }
      0005ED C3rA8r04              2202 	jp	_show_energy
                                   2203 ;src/mushroompie.c:82: WORD get_x_scroll_value(WORD x) {
                                   2204 ;	---------------------------------
                                   2205 ; Function get_x_scroll_value
                                   2206 ; ---------------------------------
      0005F0                       2207 _get_x_scroll_value::
                                   2208 ;src/mushroompie.c:83: __temp_scroll_value = x - 68;
      0005F0 F8 02                 2209 	ldhl	sp,#2
      0005F2 2A                    2210 	ld	a, (hl+)
      0005F3 5F                    2211 	ld	e, a
      0005F4 56                    2212 	ld	d, (hl)
      0005F5 21 44 00              2213 	ld	hl, #0x0044
      0005F8 7B                    2214 	ld	a, e
      0005F9 95                    2215 	sub	a, l
      0005FA 5F                    2216 	ld	e, a
      0005FB 7A                    2217 	ld	a, d
      0005FC 9C                    2218 	sbc	a, h
      0005FD 21r39r02              2219 	ld	hl, #___temp_scroll_value + 1
      000600 32                    2220 	ld	(hl-), a
                                   2221 ;src/mushroompie.c:84: if (__temp_scroll_value < 0) return 0; else if (__temp_scroll_value > 80) return 80; 
      000601 7B                    2222 	ld	a, e
      000602 22                    2223 	ld	(hl+), a
      000603 CB 7E                 2224 	bit	7, (hl)
      000605 28 04                 2225 	jr	Z, 00104$
      000607 11 00 00              2226 	ld	de, #0x0000
      00060A C9                    2227 	ret
      00060B                       2228 00104$:
      00060B 21r38r02              2229 	ld	hl, #___temp_scroll_value
      00060E 3E 50                 2230 	ld	a, #0x50
      000610 96                    2231 	sub	a, (hl)
      000611 23                    2232 	inc	hl
      000612 3E 00                 2233 	ld	a, #0x00
      000614 9E                    2234 	sbc	a, (hl)
      000615 3E 00                 2235 	ld	a, #0x00
      000617 57                    2236 	ld	d, a
      000618 CB 7E                 2237 	bit	7, (hl)
      00061A 28 07                 2238 	jr	Z, 00118$
      00061C CB 7A                 2239 	bit	7, d
      00061E 20 08                 2240 	jr	NZ, 00119$
      000620 BF                    2241 	cp	a, a
      000621 18 05                 2242 	jr	00119$
      000623                       2243 00118$:
      000623 CB 7A                 2244 	bit	7, d
      000625 28 01                 2245 	jr	Z, 00119$
      000627 37                    2246 	scf
      000628                       2247 00119$:
      000628 30 04                 2248 	jr	NC, 00105$
      00062A 11 50 00              2249 	ld	de, #0x0050
      00062D C9                    2250 	ret
      00062E                       2251 00105$:
                                   2252 ;src/mushroompie.c:85: return __temp_scroll_value;
      00062E 21r38r02              2253 	ld	hl, #___temp_scroll_value
      000631 2A                    2254 	ld	a, (hl+)
      000632 5F                    2255 	ld	e, a
      000633 56                    2256 	ld	d, (hl)
                                   2257 ;src/mushroompie.c:86: }
      000634 C9                    2258 	ret
                                   2259 ;src/mushroompie.c:87: WORD get_y_scroll_value(WORD y) {
                                   2260 ;	---------------------------------
                                   2261 ; Function get_y_scroll_value
                                   2262 ; ---------------------------------
      000635                       2263 _get_y_scroll_value::
                                   2264 ;src/mushroompie.c:88: __temp_scroll_value = y - 56;
      000635 F8 02                 2265 	ldhl	sp,#2
      000637 2A                    2266 	ld	a, (hl+)
      000638 5F                    2267 	ld	e, a
      000639 56                    2268 	ld	d, (hl)
      00063A 21 38 00              2269 	ld	hl, #0x0038
      00063D 7B                    2270 	ld	a, e
      00063E 95                    2271 	sub	a, l
      00063F 5F                    2272 	ld	e, a
      000640 7A                    2273 	ld	a, d
      000641 9C                    2274 	sbc	a, h
      000642 21r39r02              2275 	ld	hl, #___temp_scroll_value + 1
      000645 32                    2276 	ld	(hl-), a
                                   2277 ;src/mushroompie.c:89: if (__temp_scroll_value < 0) return 0; else if (__temp_scroll_value > 16) return 16;
      000646 7B                    2278 	ld	a, e
      000647 22                    2279 	ld	(hl+), a
      000648 CB 7E                 2280 	bit	7, (hl)
      00064A 28 04                 2281 	jr	Z, 00104$
      00064C 11 00 00              2282 	ld	de, #0x0000
      00064F C9                    2283 	ret
      000650                       2284 00104$:
      000650 21r38r02              2285 	ld	hl, #___temp_scroll_value
      000653 3E 10                 2286 	ld	a, #0x10
      000655 96                    2287 	sub	a, (hl)
      000656 23                    2288 	inc	hl
      000657 3E 00                 2289 	ld	a, #0x00
      000659 9E                    2290 	sbc	a, (hl)
      00065A 3E 00                 2291 	ld	a, #0x00
      00065C 57                    2292 	ld	d, a
      00065D CB 7E                 2293 	bit	7, (hl)
      00065F 28 07                 2294 	jr	Z, 00118$
      000661 CB 7A                 2295 	bit	7, d
      000663 20 08                 2296 	jr	NZ, 00119$
      000665 BF                    2297 	cp	a, a
      000666 18 05                 2298 	jr	00119$
      000668                       2299 00118$:
      000668 CB 7A                 2300 	bit	7, d
      00066A 28 01                 2301 	jr	Z, 00119$
      00066C 37                    2302 	scf
      00066D                       2303 00119$:
      00066D 30 04                 2304 	jr	NC, 00105$
      00066F 11 10 00              2305 	ld	de, #0x0010
      000672 C9                    2306 	ret
      000673                       2307 00105$:
                                   2308 ;src/mushroompie.c:90: return __temp_scroll_value;
      000673 21r38r02              2309 	ld	hl, #___temp_scroll_value
      000676 2A                    2310 	ld	a, (hl+)
      000677 5F                    2311 	ld	e, a
      000678 56                    2312 	ld	d, (hl)
                                   2313 ;src/mushroompie.c:91: }
      000679 C9                    2314 	ret
                                   2315 ;src/mushroompie.c:97: void get_h_coll(WORD x, WORD y) {
                                   2316 ;	---------------------------------
                                   2317 ; Function get_h_coll
                                   2318 ; ---------------------------------
      00067A                       2319 _get_h_coll::
                                   2320 ;src/mushroompie.c:98: tile_pos_x = x >> 3; tile_pos_ox = x & 7;
      00067A F8 02                 2321 	ldhl	sp,#2
      00067C 2A                    2322 	ld	a, (hl+)
      00067D 4F                    2323 	ld	c, a
      00067E 46                    2324 	ld	b, (hl)
      00067F CB 28                 2325 	sra	b
      000681 CB 19                 2326 	rr	c
      000683 CB 28                 2327 	sra	b
      000685 CB 19                 2328 	rr	c
      000687 CB 28                 2329 	sra	b
      000689 CB 19                 2330 	rr	c
      00068B 21r3Ar02              2331 	ld	hl, #_tile_pos_x
      00068E 71                    2332 	ld	(hl), c
      00068F F8 02                 2333 	ldhl	sp,	#2
      000691 7E                    2334 	ld	a, (hl)
      000692 E6 07                 2335 	and	a, #0x07
      000694 EAr3Cr02              2336 	ld	(#_tile_pos_ox),a
                                   2337 ;src/mushroompie.c:99: tile_pos_y = y >> 3; tile_pos_oy = y & 7;
      000697 F8 04                 2338 	ldhl	sp,#4
      000699 2A                    2339 	ld	a, (hl+)
      00069A 4F                    2340 	ld	c, a
      00069B 46                    2341 	ld	b, (hl)
      00069C CB 28                 2342 	sra	b
      00069E CB 19                 2343 	rr	c
      0006A0 CB 28                 2344 	sra	b
      0006A2 CB 19                 2345 	rr	c
      0006A4 CB 28                 2346 	sra	b
      0006A6 CB 19                 2347 	rr	c
      0006A8 21r3Br02              2348 	ld	hl, #_tile_pos_y
      0006AB 71                    2349 	ld	(hl), c
      0006AC F8 04                 2350 	ldhl	sp,	#4
      0006AE 7E                    2351 	ld	a, (hl)
      0006AF E6 07                 2352 	and	a, #0x07
      0006B1 EAr3Dr02              2353 	ld	(#_tile_pos_oy),a
                                   2354 ;src/mushroompie.c:100: if (tile_pos_y < room_height) {
      0006B4 21r3Br02              2355 	ld	hl, #_tile_pos_y
      0006B7 7E                    2356 	ld	a, (hl)
      0006B8 D6 11                 2357 	sub	a, #0x11
      0006BA 30 5F                 2358 	jr	NC, 00106$
                                   2359 ;src/mushroompie.c:101: __temp_coll_row = current_coll_idx[tile_pos_y];
      0006BC 01rCAr03              2360 	ld	bc, #_current_coll_idx+0
      0006BF 6E                    2361 	ld	l, (hl)
                                   2362 ;	spillPairReg hl
                                   2363 ;	spillPairReg hl
      0006C0 26 00                 2364 	ld	h, #0x00
                                   2365 ;	spillPairReg hl
                                   2366 ;	spillPairReg hl
      0006C2 29                    2367 	add	hl, hl
      0006C3 09                    2368 	add	hl, bc
      0006C4 5D                    2369 	ld	e, l
      0006C5 54                    2370 	ld	d, h
      0006C6 1A                    2371 	ld	a, (de)
      0006C7 21r41r02              2372 	ld	hl, #___temp_coll_row
      0006CA 22                    2373 	ld	(hl+), a
      0006CB 13                    2374 	inc	de
      0006CC 1A                    2375 	ld	a, (de)
      0006CD 77                    2376 	ld	(hl), a
                                   2377 ;src/mushroompie.c:102: collision_buf[0] = __temp_coll_row[tile_pos_x]; collision_buf[1] = __temp_coll_row[tile_pos_x + 1];
      0006CE 01r3Er02              2378 	ld	bc, #_collision_buf+0
      0006D1 FAr41r02              2379 	ld	a, (#___temp_coll_row)
      0006D4 21r3Ar02              2380 	ld	hl, #_tile_pos_x
      0006D7 86                    2381 	add	a, (hl)
      0006D8 5F                    2382 	ld	e, a
      0006D9 FAr42r02              2383 	ld	a, (#___temp_coll_row + 1)
      0006DC CE 00                 2384 	adc	a, #0x00
      0006DE 57                    2385 	ld	d, a
      0006DF 1A                    2386 	ld	a, (de)
      0006E0 02                    2387 	ld	(bc), a
      0006E1 21r3Ar02              2388 	ld	hl, #_tile_pos_x
      0006E4 5E                    2389 	ld	e, (hl)
      0006E5 16 00                 2390 	ld	d, #0x00
      0006E7 13                    2391 	inc	de
      0006E8 7B                    2392 	ld	a, e
      0006E9 21r41r02              2393 	ld	hl, #___temp_coll_row
      0006EC 86                    2394 	add	a, (hl)
      0006ED 23                    2395 	inc	hl
      0006EE 5F                    2396 	ld	e, a
      0006EF 7A                    2397 	ld	a, d
      0006F0 8E                    2398 	adc	a, (hl)
      0006F1 57                    2399 	ld	d, a
      0006F2 1A                    2400 	ld	a, (de)
      0006F3 EAr3Fr02              2401 	ld	(#(_collision_buf + 1)),a
                                   2402 ;src/mushroompie.c:103: if ((tile_pos_ox) && (tile_pos_x < room_width - 2)) collision_buf[2] = __temp_coll_row[tile_pos_x + 2]; else collision_buf[2] = 0x00;
      0006F6 03                    2403 	inc	bc
      0006F7 03                    2404 	inc	bc
      0006F8 FAr3Cr02              2405 	ld	a, (#_tile_pos_ox)
      0006FB B7                    2406 	or	a, a
      0006FC 28 1A                 2407 	jr	Z, 00102$
      0006FE 21r3Ar02              2408 	ld	hl, #_tile_pos_x
      000701 7E                    2409 	ld	a, (hl)
      000702 D6 1C                 2410 	sub	a, #0x1c
      000704 30 12                 2411 	jr	NC, 00102$
      000706 5E                    2412 	ld	e, (hl)
      000707 16 00                 2413 	ld	d, #0x00
      000709 13                    2414 	inc	de
      00070A 13                    2415 	inc	de
      00070B 7B                    2416 	ld	a, e
      00070C 21r41r02              2417 	ld	hl, #___temp_coll_row
      00070F 86                    2418 	add	a, (hl)
      000710 23                    2419 	inc	hl
      000711 5F                    2420 	ld	e, a
      000712 7A                    2421 	ld	a, d
      000713 8E                    2422 	adc	a, (hl)
      000714 57                    2423 	ld	d, a
      000715 1A                    2424 	ld	a, (de)
      000716 02                    2425 	ld	(bc), a
      000717 C9                    2426 	ret
      000718                       2427 00102$:
      000718 AF                    2428 	xor	a, a
      000719 02                    2429 	ld	(bc), a
      00071A C9                    2430 	ret
      00071B                       2431 00106$:
                                   2432 ;src/mushroompie.c:104: } else { collision_buf[0] = 0x00; collision_buf[1] = 0x00; collision_buf[2] = 0x00; }
      00071B 01r3Er02              2433 	ld	bc, #_collision_buf+0
      00071E AF                    2434 	xor	a, a
      00071F 02                    2435 	ld	(bc), a
      000720 21r3Fr02              2436 	ld	hl, #(_collision_buf + 1)
      000723 36 00                 2437 	ld	(hl), #0x00
      000725 03                    2438 	inc	bc
      000726 03                    2439 	inc	bc
      000727 AF                    2440 	xor	a, a
      000728 02                    2441 	ld	(bc), a
                                   2442 ;src/mushroompie.c:105: }
      000729 C9                    2443 	ret
                                   2444 ;src/mushroompie.c:106: void get_v_coll(WORD x, WORD y) {
                                   2445 ;	---------------------------------
                                   2446 ; Function get_v_coll
                                   2447 ; ---------------------------------
      00072A                       2448 _get_v_coll::
                                   2449 ;src/mushroompie.c:107: tile_pos_x = x >> 3; 
      00072A F8 02                 2450 	ldhl	sp,#2
      00072C 2A                    2451 	ld	a, (hl+)
      00072D 4F                    2452 	ld	c, a
      00072E 46                    2453 	ld	b, (hl)
      00072F CB 28                 2454 	sra	b
      000731 CB 19                 2455 	rr	c
      000733 CB 28                 2456 	sra	b
      000735 CB 19                 2457 	rr	c
      000737 CB 28                 2458 	sra	b
      000739 CB 19                 2459 	rr	c
      00073B 21r3Ar02              2460 	ld	hl, #_tile_pos_x
      00073E 71                    2461 	ld	(hl), c
                                   2462 ;src/mushroompie.c:108: if (tile_pos_x < room_width) {
      00073F 7E                    2463 	ld	a, (hl)
      000740 D6 1E                 2464 	sub	a, #0x1e
      000742 30 66                 2465 	jr	NC, 00108$
                                   2466 ;src/mushroompie.c:109: tile_pos_y = y >> 3;
      000744 F8 04                 2467 	ldhl	sp,#4
      000746 2A                    2468 	ld	a, (hl+)
      000747 4F                    2469 	ld	c, a
      000748 46                    2470 	ld	b, (hl)
      000749 CB 28                 2471 	sra	b
      00074B CB 19                 2472 	rr	c
      00074D CB 28                 2473 	sra	b
      00074F CB 19                 2474 	rr	c
      000751 CB 28                 2475 	sra	b
      000753 CB 19                 2476 	rr	c
      000755 21r3Br02              2477 	ld	hl, #_tile_pos_y
      000758 71                    2478 	ld	(hl), c
                                   2479 ;src/mushroompie.c:110: if (tile_pos_y < room_height) { 
      000759 7E                    2480 	ld	a, (hl)
      00075A D6 11                 2481 	sub	a, #0x11
      00075C 30 1A                 2482 	jr	NC, 00102$
                                   2483 ;src/mushroompie.c:111: collision_buf[0] = current_coll_idx[tile_pos_y][tile_pos_x]; 
      00075E 6E                    2484 	ld	l, (hl)
                                   2485 ;	spillPairReg hl
                                   2486 ;	spillPairReg hl
      00075F 26 00                 2487 	ld	h, #0x00
                                   2488 ;	spillPairReg hl
                                   2489 ;	spillPairReg hl
      000761 29                    2490 	add	hl, hl
      000762 11rCAr03              2491 	ld	de, #_current_coll_idx
      000765 19                    2492 	add	hl, de
      000766 2A                    2493 	ld	a, (hl+)
      000767 4F                    2494 	ld	c, a
      000768 46                    2495 	ld	b, (hl)
      000769 79                    2496 	ld	a, c
      00076A 21r3Ar02              2497 	ld	hl, #_tile_pos_x
      00076D 86                    2498 	add	a, (hl)
      00076E 4F                    2499 	ld	c, a
      00076F 30 01                 2500 	jr	NC, 00127$
      000771 04                    2501 	inc	b
      000772                       2502 00127$:
      000772 0A                    2503 	ld	a, (bc)
      000773 EAr3Er02              2504 	ld	(#_collision_buf),a
      000776 18 0A                 2505 	jr	00103$
      000778                       2506 00102$:
                                   2507 ;src/mushroompie.c:113: collision_buf[0] = 0x00; 
      000778 21r3Er02              2508 	ld	hl, #_collision_buf
      00077B 36 00                 2509 	ld	(hl), #0x00
                                   2510 ;src/mushroompie.c:114: tile_pos_y = 0; 
      00077D 21r3Br02              2511 	ld	hl, #_tile_pos_y
      000780 36 00                 2512 	ld	(hl), #0x00
      000782                       2513 00103$:
                                   2514 ;src/mushroompie.c:116: if (tile_pos_y < room_height - 1) collision_buf[1] = current_coll_idx[tile_pos_y + 1][tile_pos_x]; else collision_buf[1] = 0x00;
      000782 FAr3Br02              2515 	ld	a, (#_tile_pos_y)
      000785 FE 10                 2516 	cp	a,#0x10
      000787 30 1B                 2517 	jr	NC, 00105$
      000789 3C                    2518 	inc	a
      00078A 6F                    2519 	ld	l, a
                                   2520 ;	spillPairReg hl
                                   2521 ;	spillPairReg hl
      00078B 07                    2522 	rlca
      00078C 9F                    2523 	sbc	a, a
      00078D 67                    2524 	ld	h, a
      00078E 29                    2525 	add	hl, hl
      00078F 11rCAr03              2526 	ld	de, #_current_coll_idx
      000792 19                    2527 	add	hl, de
      000793 2A                    2528 	ld	a, (hl+)
      000794 4F                    2529 	ld	c, a
      000795 46                    2530 	ld	b, (hl)
      000796 79                    2531 	ld	a, c
      000797 21r3Ar02              2532 	ld	hl, #_tile_pos_x
      00079A 86                    2533 	add	a, (hl)
      00079B 4F                    2534 	ld	c, a
      00079C 30 01                 2535 	jr	NC, 00128$
      00079E 04                    2536 	inc	b
      00079F                       2537 00128$:
      00079F 0A                    2538 	ld	a, (bc)
      0007A0 EAr3Fr02              2539 	ld	(#(_collision_buf + 1)),a
      0007A3 C9                    2540 	ret
      0007A4                       2541 00105$:
      0007A4 21r3Fr02              2542 	ld	hl, #(_collision_buf + 1)
      0007A7 36 00                 2543 	ld	(hl), #0x00
      0007A9 C9                    2544 	ret
      0007AA                       2545 00108$:
                                   2546 ;src/mushroompie.c:117: } else { collision_buf[0] = 0x00; collision_buf[1] = 0x00;}
      0007AA 01r3Er02              2547 	ld	bc, #_collision_buf+0
      0007AD AF                    2548 	xor	a, a
      0007AE 02                    2549 	ld	(bc), a
      0007AF 03                    2550 	inc	bc
      0007B0 AF                    2551 	xor	a, a
      0007B1 02                    2552 	ld	(bc), a
                                   2553 ;src/mushroompie.c:118: }
      0007B2 C9                    2554 	ret
                                   2555 ;src/mushroompie.c:119: void get_coll(WORD x, WORD y) {
                                   2556 ;	---------------------------------
                                   2557 ; Function get_coll
                                   2558 ; ---------------------------------
      0007B3                       2559 _get_coll::
                                   2560 ;src/mushroompie.c:120: __temp_i = ((x > 0)?(x >> 3):0);
      0007B3 F8 02                 2561 	ldhl	sp,	#2
      0007B5 AF                    2562 	xor	a, a
      0007B6 96                    2563 	sub	a, (hl)
      0007B7 23                    2564 	inc	hl
      0007B8 3E 00                 2565 	ld	a, #0x00
      0007BA 9E                    2566 	sbc	a, (hl)
      0007BB 3E 00                 2567 	ld	a, #0x00
      0007BD 57                    2568 	ld	d, a
      0007BE CB 7E                 2569 	bit	7, (hl)
      0007C0 28 07                 2570 	jr	Z, 00178$
      0007C2 CB 7A                 2571 	bit	7, d
      0007C4 20 08                 2572 	jr	NZ, 00179$
      0007C6 BF                    2573 	cp	a, a
      0007C7 18 05                 2574 	jr	00179$
      0007C9                       2575 00178$:
      0007C9 CB 7A                 2576 	bit	7, d
      0007CB 28 01                 2577 	jr	Z, 00179$
      0007CD 37                    2578 	scf
      0007CE                       2579 00179$:
      0007CE 30 13                 2580 	jr	NC, 00119$
      0007D0 F8 02                 2581 	ldhl	sp,#2
      0007D2 2A                    2582 	ld	a, (hl+)
      0007D3 4F                    2583 	ld	c, a
      0007D4 46                    2584 	ld	b, (hl)
      0007D5 CB 28                 2585 	sra	b
      0007D7 CB 19                 2586 	rr	c
      0007D9 CB 28                 2587 	sra	b
      0007DB CB 19                 2588 	rr	c
      0007DD CB 28                 2589 	sra	b
      0007DF CB 19                 2590 	rr	c
      0007E1 18 03                 2591 	jr	00120$
      0007E3                       2592 00119$:
      0007E3 01 00 00              2593 	ld	bc, #0x0000
      0007E6                       2594 00120$:
      0007E6 21r0Br02              2595 	ld	hl, #___temp_i
      0007E9 71                    2596 	ld	(hl), c
                                   2597 ;src/mushroompie.c:121: __temp_j = (x + 16) >> 3; if (__temp_j >= room_width) __temp_j = room_width - 1;
      0007EA F8 02                 2598 	ldhl	sp,#2
      0007EC 2A                    2599 	ld	a, (hl+)
      0007ED 5F                    2600 	ld	e, a
      0007EE 56                    2601 	ld	d, (hl)
      0007EF 21 10 00              2602 	ld	hl, #0x0010
      0007F2 19                    2603 	add	hl, de
      0007F3 4D                    2604 	ld	c, l
      0007F4 44                    2605 	ld	b, h
      0007F5 CB 28                 2606 	sra	b
      0007F7 CB 19                 2607 	rr	c
      0007F9 CB 28                 2608 	sra	b
      0007FB CB 19                 2609 	rr	c
      0007FD CB 28                 2610 	sra	b
      0007FF CB 19                 2611 	rr	c
      000801 21r0Cr02              2612 	ld	hl, #___temp_j
      000804 71                    2613 	ld	(hl), c
      000805 7E                    2614 	ld	a, (hl)
      000806 D6 1E                 2615 	sub	a, #0x1e
      000808 38 02                 2616 	jr	C, 00102$
      00080A 36 1D                 2617 	ld	(hl), #0x1d
      00080C                       2618 00102$:
                                   2619 ;src/mushroompie.c:122: __temp_k = ((y > 0)?(y >> 3):0);
      00080C F8 04                 2620 	ldhl	sp,	#4
      00080E AF                    2621 	xor	a, a
      00080F 96                    2622 	sub	a, (hl)
      000810 23                    2623 	inc	hl
      000811 3E 00                 2624 	ld	a, #0x00
      000813 9E                    2625 	sbc	a, (hl)
      000814 3E 00                 2626 	ld	a, #0x00
      000816 57                    2627 	ld	d, a
      000817 CB 7E                 2628 	bit	7, (hl)
      000819 28 07                 2629 	jr	Z, 00180$
      00081B CB 7A                 2630 	bit	7, d
      00081D 20 08                 2631 	jr	NZ, 00181$
      00081F BF                    2632 	cp	a, a
      000820 18 05                 2633 	jr	00181$
      000822                       2634 00180$:
      000822 CB 7A                 2635 	bit	7, d
      000824 28 01                 2636 	jr	Z, 00181$
      000826 37                    2637 	scf
      000827                       2638 00181$:
      000827 30 13                 2639 	jr	NC, 00121$
      000829 F8 04                 2640 	ldhl	sp,#4
      00082B 2A                    2641 	ld	a, (hl+)
      00082C 4F                    2642 	ld	c, a
      00082D 46                    2643 	ld	b, (hl)
      00082E CB 28                 2644 	sra	b
      000830 CB 19                 2645 	rr	c
      000832 CB 28                 2646 	sra	b
      000834 CB 19                 2647 	rr	c
      000836 CB 28                 2648 	sra	b
      000838 CB 19                 2649 	rr	c
      00083A 18 03                 2650 	jr	00122$
      00083C                       2651 00121$:
      00083C 01 00 00              2652 	ld	bc, #0x0000
      00083F                       2653 00122$:
      00083F 21r0Dr02              2654 	ld	hl, #___temp_k
      000842 71                    2655 	ld	(hl), c
                                   2656 ;src/mushroompie.c:123: __temp_l = (y + 16) >> 3; if (__temp_l >= room_height) __temp_l = room_height - 1;
      000843 F8 04                 2657 	ldhl	sp,#4
      000845 2A                    2658 	ld	a, (hl+)
      000846 5F                    2659 	ld	e, a
      000847 56                    2660 	ld	d, (hl)
      000848 21 10 00              2661 	ld	hl, #0x0010
      00084B 19                    2662 	add	hl, de
      00084C 4D                    2663 	ld	c, l
      00084D 44                    2664 	ld	b, h
      00084E CB 28                 2665 	sra	b
      000850 CB 19                 2666 	rr	c
      000852 CB 28                 2667 	sra	b
      000854 CB 19                 2668 	rr	c
      000856 CB 28                 2669 	sra	b
      000858 CB 19                 2670 	rr	c
      00085A 21r0Er02              2671 	ld	hl, #___temp_l
      00085D 71                    2672 	ld	(hl), c
      00085E 7E                    2673 	ld	a, (hl)
      00085F D6 11                 2674 	sub	a, #0x11
      000861 38 02                 2675 	jr	C, 00104$
      000863 36 10                 2676 	ld	(hl), #0x10
      000865                       2677 00104$:
                                   2678 ;src/mushroompie.c:125: collision_buf[0] = 0; collision_buf[1] = 0;
      000865 01r3Er02              2679 	ld	bc, #_collision_buf+0
      000868 AF                    2680 	xor	a, a
      000869 02                    2681 	ld	(bc), a
      00086A 21r3Fr02              2682 	ld	hl, #(_collision_buf + 1)
      00086D 36 00                 2683 	ld	(hl), #0x00
                                   2684 ;src/mushroompie.c:126: for (__temp_k = __temp_k; __temp_k <= __temp_l; __temp_k++) {
      00086F                       2685 00115$:
      00086F FAr0Er02              2686 	ld	a, (#___temp_l)
      000872 21r0Dr02              2687 	ld	hl, #___temp_k
      000875 96                    2688 	sub	a, (hl)
      000876 D8                    2689 	ret	C
                                   2690 ;src/mushroompie.c:127: __temp_coll_row = current_coll_idx[__temp_k];
      000877 6E                    2691 	ld	l, (hl)
                                   2692 ;	spillPairReg hl
                                   2693 ;	spillPairReg hl
      000878 26 00                 2694 	ld	h, #0x00
                                   2695 ;	spillPairReg hl
                                   2696 ;	spillPairReg hl
      00087A 29                    2697 	add	hl, hl
      00087B 11rCAr03              2698 	ld	de, #_current_coll_idx
      00087E 19                    2699 	add	hl, de
      00087F 5D                    2700 	ld	e, l
      000880 54                    2701 	ld	d, h
      000881 1A                    2702 	ld	a, (de)
      000882 21r41r02              2703 	ld	hl, #___temp_coll_row
      000885 22                    2704 	ld	(hl+), a
      000886 13                    2705 	inc	de
      000887 1A                    2706 	ld	a, (de)
      000888 77                    2707 	ld	(hl), a
                                   2708 ;src/mushroompie.c:128: for (__temp_m = __temp_i; __temp_m <= __temp_j; __temp_m++) {
      000889 FAr0Br02              2709 	ld	a, (#___temp_i)
      00088C EAr0Fr02              2710 	ld	(#___temp_m),a
      00088F                       2711 00112$:
      00088F FAr0Cr02              2712 	ld	a, (#___temp_j)
      000892 21r0Fr02              2713 	ld	hl, #___temp_m
      000895 96                    2714 	sub	a, (hl)
      000896 38 33                 2715 	jr	C, 00116$
                                   2716 ;src/mushroompie.c:129: switch (__temp_coll_row[__temp_m]) {
      000898 FAr41r02              2717 	ld	a, (#___temp_coll_row)
      00089B 21r0Fr02              2718 	ld	hl, #___temp_m
      00089E 86                    2719 	add	a, (hl)
      00089F 5F                    2720 	ld	e, a
      0008A0 FAr42r02              2721 	ld	a, (#___temp_coll_row + 1)
      0008A3 CE 00                 2722 	adc	a, #0x00
      0008A5 57                    2723 	ld	d, a
      0008A6 1A                    2724 	ld	a, (de)
      0008A7 FE 04                 2725 	cp	a, #0x04
      0008A9 28 0A                 2726 	jr	Z, 00105$
      0008AB FE 06                 2727 	cp	a, #0x06
      0008AD 28 0D                 2728 	jr	Z, 00106$
      0008AF D6 07                 2729 	sub	a, #0x07
      0008B1 28 0E                 2730 	jr	Z, 00107$
      0008B3 18 10                 2731 	jr	00113$
                                   2732 ;src/mushroompie.c:130: case 4 : collision_buf[1] = 4; break;
      0008B5                       2733 00105$:
      0008B5 21r3Fr02              2734 	ld	hl, #(_collision_buf + 1)
      0008B8 36 04                 2735 	ld	(hl), #0x04
      0008BA 18 09                 2736 	jr	00113$
                                   2737 ;src/mushroompie.c:131: case 6 : collision_buf[0] = 6; break;
      0008BC                       2738 00106$:
      0008BC 3E 06                 2739 	ld	a, #0x06
      0008BE 02                    2740 	ld	(bc), a
      0008BF 18 04                 2741 	jr	00113$
                                   2742 ;src/mushroompie.c:132: case 7 : collision_buf[0] = 7; return;
      0008C1                       2743 00107$:
      0008C1 3E 07                 2744 	ld	a, #0x07
      0008C3 02                    2745 	ld	(bc), a
      0008C4 C9                    2746 	ret
                                   2747 ;src/mushroompie.c:133: }
      0008C5                       2748 00113$:
                                   2749 ;src/mushroompie.c:128: for (__temp_m = __temp_i; __temp_m <= __temp_j; __temp_m++) {
      0008C5 21r0Fr02              2750 	ld	hl, #___temp_m
      0008C8 34                    2751 	inc	(hl)
      0008C9 18 C4                 2752 	jr	00112$
      0008CB                       2753 00116$:
                                   2754 ;src/mushroompie.c:126: for (__temp_k = __temp_k; __temp_k <= __temp_l; __temp_k++) {
      0008CB 21r0Dr02              2755 	ld	hl, #___temp_k
      0008CE 34                    2756 	inc	(hl)
                                   2757 ;src/mushroompie.c:136: }
      0008CF 18 9E                 2758 	jr	00115$
                                   2759 ;src/mushroompie.c:138: void set_enemies_position() {
                                   2760 ;	---------------------------------
                                   2761 ; Function set_enemies_position
                                   2762 ; ---------------------------------
      0008D1                       2763 _set_enemies_position::
                                   2764 ;src/mushroompie.c:139: if (current_room) {
      0008D1 21r0Fr00              2765 	ld	hl, #_current_room + 1
      0008D4 3A                    2766 	ld	a, (hl-)
      0008D5 B6                    2767 	or	a, (hl)
      0008D6 C8                    2768 	ret	Z
                                   2769 ;src/mushroompie.c:140: if (current_room->room_actions) current_room->room_actions();
      0008D7 2A                    2770 	ld	a, (hl+)
      0008D8 4F                    2771 	ld	c, a
      0008D9 46                    2772 	ld	b, (hl)
      0008DA 21 0B 00              2773 	ld	hl, #0x000b
      0008DD 09                    2774 	add	hl, bc
      0008DE 2A                    2775 	ld	a, (hl+)
      0008DF 4F                    2776 	ld	c, a
      0008E0 66                    2777 	ld	h, (hl)
                                   2778 ;	spillPairReg hl
      0008E1 7C                    2779 	ld	a, h
      0008E2 B1                    2780 	or	a, c
      0008E3 28 04                 2781 	jr	Z, 00102$
      0008E5 69                    2782 	ld	l, c
                                   2783 ;	spillPairReg hl
                                   2784 ;	spillPairReg hl
      0008E6 CDr00r00              2785 	call	___sdcc_call_hl
      0008E9                       2786 00102$:
      0008E9 21r0Er00              2787 	ld	hl, #_current_room
      0008EC 2A                    2788 	ld	a, (hl+)
      0008ED 4F                    2789 	ld	c, a
      0008EE 46                    2790 	ld	b, (hl)
                                   2791 ;src/mushroompie.c:141: if (current_room->room_animations) current_room->room_animations();
      0008EF 21 0D 00              2792 	ld	hl, #0x000d
      0008F2 09                    2793 	add	hl, bc
      0008F3 2A                    2794 	ld	a, (hl+)
      0008F4 4F                    2795 	ld	c, a
      0008F5 66                    2796 	ld	h, (hl)
                                   2797 ;	spillPairReg hl
      0008F6 7C                    2798 	ld	a, h
      0008F7 B1                    2799 	or	a, c
      0008F8 C8                    2800 	ret	Z
      0008F9 69                    2801 	ld	l, c
                                   2802 ;	spillPairReg hl
                                   2803 ;	spillPairReg hl
                                   2804 ;src/mushroompie.c:143: }
      0008FA E9                    2805 	jp	(hl)
                                   2806 ;src/mushroompie.c:146: void init_dizzy() {
                                   2807 ;	---------------------------------
                                   2808 ; Function init_dizzy
                                   2809 ; ---------------------------------
      0008FB                       2810 _init_dizzy::
                                   2811 ;src/mushroompie.c:147: for(__temp_i = 0; __temp_i < dizzy_sprite_count; __temp_i++)
      0008FB 21r0Br02              2812 	ld	hl, #___temp_i
      0008FE 36 00                 2813 	ld	(hl), #0x00
      000900                       2814 00103$:
                                   2815 ;src/mushroompie.c:148: set_sprite_tile(__temp_i, dizzy_sprites_tileoffset + __temp_i);
      000900 21r0Br02              2816 	ld	hl, #___temp_i
      000903 4E                    2817 	ld	c, (hl)
                                   2818 ;c:/gb/gbdk/include/gb/gb.h:1185: shadow_OAM[nb].tile=tile;
      000904 11r00r00              2819 	ld	de, #_shadow_OAM+0
      000907 69                    2820 	ld	l, c
                                   2821 ;	spillPairReg hl
                                   2822 ;	spillPairReg hl
      000908 26 00                 2823 	ld	h, #0x00
                                   2824 ;	spillPairReg hl
                                   2825 ;	spillPairReg hl
      00090A 29                    2826 	add	hl, hl
      00090B 29                    2827 	add	hl, hl
      00090C 19                    2828 	add	hl, de
      00090D 23                    2829 	inc	hl
      00090E 23                    2830 	inc	hl
      00090F 71                    2831 	ld	(hl), c
                                   2832 ;src/mushroompie.c:147: for(__temp_i = 0; __temp_i < dizzy_sprite_count; __temp_i++)
      000910 21r0Br02              2833 	ld	hl, #___temp_i
      000913 34                    2834 	inc	(hl)
      000914 7E                    2835 	ld	a, (hl)
      000915 D6 09                 2836 	sub	a, #0x09
      000917 38 E7                 2837 	jr	C, 00103$
                                   2838 ;src/mushroompie.c:149: }
      000919 C9                    2839 	ret
                                   2840 ;src/mushroompie.c:150: void set_dizzy_animdata(const s_data * sprite) {
                                   2841 ;	---------------------------------
                                   2842 ; Function set_dizzy_animdata
                                   2843 ; ---------------------------------
      00091A                       2844 _set_dizzy_animdata::
                                   2845 ;src/mushroompie.c:151: push_bank(2); 
      00091A 3E 02                 2846 	ld	a, #0x02
      00091C F5                    2847 	push	af
      00091D 33                    2848 	inc	sp
      00091E CDr00r00              2849 	call	_push_bank
      000921 33                    2850 	inc	sp
                                   2851 ;src/mushroompie.c:152: set_sprite_data(dizzy_sprites_tileoffset, dizzy_sprite_count, sprite->data); 
      000922 F8 02                 2852 	ldhl	sp,	#2
      000924 2A                    2853 	ld	a, (hl+)
      000925 4F                    2854 	ld	c, a
      000926 46                    2855 	ld	b, (hl)
      000927 03                    2856 	inc	bc
      000928 C5                    2857 	push	bc
      000929 3E 09                 2858 	ld	a, #0x09
      00092B F5                    2859 	push	af
      00092C 33                    2860 	inc	sp
      00092D AF                    2861 	xor	a, a
      00092E F5                    2862 	push	af
      00092F 33                    2863 	inc	sp
      000930 CDr00r00              2864 	call	_set_sprite_data
      000933 E8 04                 2865 	add	sp, #4
                                   2866 ;src/mushroompie.c:153: pop_bank();
                                   2867 ;src/mushroompie.c:154: }
      000935 C3r00r00              2868 	jp	_pop_bank
                                   2869 ;src/mushroompie.c:156: void set_dizzy_position() {
                                   2870 ;	---------------------------------
                                   2871 ; Function set_dizzy_position
                                   2872 ; ---------------------------------
      000938                       2873 _set_dizzy_position::
                                   2874 ;src/mushroompie.c:157: if ((dizzy_old_pos_x != dizzy_x) || (dizzy_old_pos_y != dizzy_y)) {
      000938 FAr22r00              2875 	ld	a, (#_dizzy_old_pos_x)
      00093B 21r10r00              2876 	ld	hl, #_dizzy_x
      00093E 96                    2877 	sub	a, (hl)
      00093F 20 1A                 2878 	jr	NZ, 00101$
      000941 FAr23r00              2879 	ld	a, (#_dizzy_old_pos_x + 1)
      000944 21r11r00              2880 	ld	hl, #_dizzy_x + 1
      000947 96                    2881 	sub	a, (hl)
      000948 20 11                 2882 	jr	NZ, 00101$
      00094A FAr24r00              2883 	ld	a, (#_dizzy_old_pos_y)
      00094D 21r12r00              2884 	ld	hl, #_dizzy_y
      000950 96                    2885 	sub	a, (hl)
      000951 20 08                 2886 	jr	NZ, 00113$
      000953 FAr25r00              2887 	ld	a, (#_dizzy_old_pos_y + 1)
      000956 21r13r00              2888 	ld	hl, #_dizzy_y + 1
      000959 96                    2889 	sub	a, (hl)
      00095A C8                    2890 	ret	Z
      00095B                       2891 00113$:
      00095B                       2892 00101$:
                                   2893 ;src/mushroompie.c:158: bkg_scroll_x_target = get_x_scroll_value(dizzy_x); 
      00095B 21r10r00              2894 	ld	hl, #_dizzy_x
      00095E 2A                    2895 	ld	a, (hl+)
      00095F 5F                    2896 	ld	e, a
      000960 56                    2897 	ld	d, (hl)
      000961 D5                    2898 	push	de
      000962 CDrF0r05              2899 	call	_get_x_scroll_value
      000965 E1                    2900 	pop	hl
      000966 21r36r02              2901 	ld	hl, #_bkg_scroll_x_target
      000969 73                    2902 	ld	(hl), e
                                   2903 ;src/mushroompie.c:159: bkg_scroll_y_target = get_y_scroll_value(dizzy_y);
      00096A 21r12r00              2904 	ld	hl, #_dizzy_y
      00096D 2A                    2905 	ld	a, (hl+)
      00096E 5F                    2906 	ld	e, a
      00096F 56                    2907 	ld	d, (hl)
      000970 D5                    2908 	push	de
      000971 CDr35r06              2909 	call	_get_y_scroll_value
      000974 E1                    2910 	pop	hl
      000975 21r37r02              2911 	ld	hl, #_bkg_scroll_y_target
      000978 73                    2912 	ld	(hl), e
                                   2913 ;src/mushroompie.c:160: multiple_move_sprites(0, dizzy_sprite_count, dizzy_x - bkg_scroll_x_target, dizzy_y - bkg_scroll_y_target, (unsigned char *)dizzy_offsets);
      000979 FAr12r00              2914 	ld	a, (#_dizzy_y)
      00097C 21r37r02              2915 	ld	hl, #_bkg_scroll_y_target
      00097F 4E                    2916 	ld	c, (hl)
      000980 91                    2917 	sub	a, c
      000981 47                    2918 	ld	b, a
      000982 FAr10r00              2919 	ld	a, (#_dizzy_x)
      000985 21r36r02              2920 	ld	hl, #_bkg_scroll_x_target
      000988 4E                    2921 	ld	c, (hl)
      000989 91                    2922 	sub	a, c
      00098A 11r52r00              2923 	ld	de, #_dizzy_offsets
      00098D D5                    2924 	push	de
      00098E C5                    2925 	push	bc
      00098F 33                    2926 	inc	sp
      000990 67                    2927 	ld	h, a
      000991 2E 09                 2928 	ld	l, #0x09
      000993 E5                    2929 	push	hl
      000994 AF                    2930 	xor	a, a
      000995 F5                    2931 	push	af
      000996 33                    2932 	inc	sp
      000997 CDr00r00              2933 	call	_multiple_move_sprites
      00099A E8 06                 2934 	add	sp, #6
                                   2935 ;src/mushroompie.c:161: dizzy_old_pos_x = dizzy_x; dizzy_old_pos_y = dizzy_y;
      00099C FAr10r00              2936 	ld	a, (#_dizzy_x)
      00099F EAr22r00              2937 	ld	(#_dizzy_old_pos_x),a
      0009A2 FAr11r00              2938 	ld	a, (#_dizzy_x + 1)
      0009A5 EAr23r00              2939 	ld	(#_dizzy_old_pos_x + 1),a
      0009A8 FAr12r00              2940 	ld	a, (#_dizzy_y)
      0009AB EAr24r00              2941 	ld	(#_dizzy_old_pos_y),a
      0009AE FAr13r00              2942 	ld	a, (#_dizzy_y + 1)
      0009B1 EAr25r00              2943 	ld	(#_dizzy_old_pos_y + 1),a
                                   2944 ;src/mushroompie.c:163: }    
      0009B4 C9                    2945 	ret
                                   2946 ;src/mushroompie.c:165: void check_dizzy_collisions() {
                                   2947 ;	---------------------------------
                                   2948 ; Function check_dizzy_collisions
                                   2949 ; ---------------------------------
      0009B5                       2950 _check_dizzy_collisions::
      0009B5 E8 FC                 2951 	add	sp, #-4
                                   2952 ;src/mushroompie.c:167: if (current_room->room_h_coll) current_room->room_h_coll(dizzy_x, dizzy_y + 21); else get_h_coll(dizzy_x, dizzy_y + 21);
      0009B7 21r0Er00              2953 	ld	hl, #_current_room
      0009BA 2A                    2954 	ld	a, (hl+)
      0009BB 4F                    2955 	ld	c, a
      0009BC 46                    2956 	ld	b, (hl)
      0009BD 21 0F 00              2957 	ld	hl, #0x000f
      0009C0 09                    2958 	add	hl, bc
      0009C1 2A                    2959 	ld	a, (hl+)
      0009C2 4F                    2960 	ld	c, a
      0009C3 46                    2961 	ld	b, (hl)
                                   2962 ;src/mushroompie.c:166: if (delta_y >= 0) {
      0009C4 FAr19r00              2963 	ld	a, (#_delta_y + 1)
      0009C7 CB 7F                 2964 	bit	7, a
      0009C9 C2r70r0B              2965 	jp	NZ, 00161$
                                   2966 ;src/mushroompie.c:167: if (current_room->room_h_coll) current_room->room_h_coll(dizzy_x, dizzy_y + 21); else get_h_coll(dizzy_x, dizzy_y + 21);
      0009CC 21r12r00              2967 	ld	hl, #_dizzy_y
      0009CF 2A                    2968 	ld	a, (hl+)
      0009D0 C6 15                 2969 	add	a, #0x15
      0009D2 5F                    2970 	ld	e, a
      0009D3 7E                    2971 	ld	a, (hl)
      0009D4 CE 00                 2972 	adc	a, #0x00
      0009D6 57                    2973 	ld	d, a
      0009D7 78                    2974 	ld	a, b
      0009D8 B1                    2975 	or	a, c
      0009D9 28 11                 2976 	jr	Z, 00102$
      0009DB D5                    2977 	push	de
      0009DC 21r10r00              2978 	ld	hl, #_dizzy_x
      0009DF 2A                    2979 	ld	a, (hl+)
      0009E0 5F                    2980 	ld	e, a
      0009E1 56                    2981 	ld	d, (hl)
      0009E2 D5                    2982 	push	de
      0009E3 69                    2983 	ld	l, c
                                   2984 ;	spillPairReg hl
                                   2985 ;	spillPairReg hl
      0009E4 60                    2986 	ld	h, b
                                   2987 ;	spillPairReg hl
                                   2988 ;	spillPairReg hl
      0009E5 CDr00r00              2989 	call	___sdcc_call_hl
      0009E8 E8 04                 2990 	add	sp, #4
      0009EA 18 0D                 2991 	jr	00103$
      0009EC                       2992 00102$:
      0009EC D5                    2993 	push	de
      0009ED 21r10r00              2994 	ld	hl, #_dizzy_x
      0009F0 2A                    2995 	ld	a, (hl+)
      0009F1 5F                    2996 	ld	e, a
      0009F2 56                    2997 	ld	d, (hl)
      0009F3 D5                    2998 	push	de
      0009F4 CDr7Ar06              2999 	call	_get_h_coll
      0009F7 E8 04                 3000 	add	sp, #4
      0009F9                       3001 00103$:
                                   3002 ;src/mushroompie.c:169: if ((collision_buf[0] == 1) || (collision_buf[1] == 1) || (collision_buf[2] == 1)) {
      0009F9 21r3Er02              3003 	ld	hl, #_collision_buf
      0009FC 4E                    3004 	ld	c, (hl)
      0009FD 79                    3005 	ld	a, c
      0009FE 3D                    3006 	dec	a
      0009FF 28 10                 3007 	jr	Z, 00118$
      000A01 21r3Fr02              3008 	ld	hl, #(_collision_buf + 1)
      000A04 46                    3009 	ld	b, (hl)
      000A05 78                    3010 	ld	a, b
      000A06 3D                    3011 	dec	a
      000A07 28 08                 3012 	jr	Z, 00118$
      000A09 21r40r02              3013 	ld	hl, #(_collision_buf + 2)
      000A0C 6E                    3014 	ld	l, (hl)
                                   3015 ;	spillPairReg hl
      000A0D 7D                    3016 	ld	a, l
      000A0E 3D                    3017 	dec	a
      000A0F 20 11                 3018 	jr	NZ, 00119$
      000A11                       3019 00118$:
                                   3020 ;src/mushroompie.c:170: if (tile_pos_oy < 7) delta_y = -1;
      000A11 FAr3Dr02              3021 	ld	a, (#_tile_pos_oy)
      000A14 D6 07                 3022 	sub	a, #0x07
      000A16 30 4B                 3023 	jr	NC, 00120$
      000A18 21r18r00              3024 	ld	hl, #_delta_y
      000A1B 3E FF                 3025 	ld	a, #0xff
      000A1D 22                    3026 	ld	(hl+), a
      000A1E 36 FF                 3027 	ld	(hl), #0xff
      000A20 18 41                 3028 	jr	00120$
      000A22                       3029 00119$:
                                   3030 ;src/mushroompie.c:171: } else if ((collision_buf[0] == 2) || (collision_buf[1] == 2) || (collision_buf[2] == 2)) {
      000A22 79                    3031 	ld	a, c
      000A23 D6 02                 3032 	sub	a, #0x02
      000A25 28 0A                 3033 	jr	Z, 00113$
      000A27 78                    3034 	ld	a, b
      000A28 D6 02                 3035 	sub	a, #0x02
      000A2A 28 05                 3036 	jr	Z, 00113$
      000A2C 7D                    3037 	ld	a, l
      000A2D D6 02                 3038 	sub	a, #0x02
      000A2F 20 23                 3039 	jr	NZ, 00114$
      000A31                       3040 00113$:
                                   3041 ;src/mushroompie.c:172: if (tile_pos_oy > 4) delta_y = -1; else if (tile_pos_oy < 4) delta_y = 1;
      000A31 3E 04                 3042 	ld	a, #0x04
      000A33 21r3Dr02              3043 	ld	hl, #_tile_pos_oy
      000A36 96                    3044 	sub	a, (hl)
      000A37 30 0A                 3045 	jr	NC, 00109$
      000A39 21r18r00              3046 	ld	hl, #_delta_y
      000A3C 3E FF                 3047 	ld	a, #0xff
      000A3E 22                    3048 	ld	(hl+), a
      000A3F 36 FF                 3049 	ld	(hl), #0xff
      000A41 18 20                 3050 	jr	00120$
      000A43                       3051 00109$:
      000A43 FAr3Dr02              3052 	ld	a, (#_tile_pos_oy)
      000A46 D6 04                 3053 	sub	a, #0x04
      000A48 30 19                 3054 	jr	NC, 00120$
      000A4A 21r18r00              3055 	ld	hl, #_delta_y
      000A4D 3E 01                 3056 	ld	a, #0x01
      000A4F 22                    3057 	ld	(hl+), a
      000A50 AF                    3058 	xor	a, a
      000A51 77                    3059 	ld	(hl), a
      000A52 18 0F                 3060 	jr	00120$
      000A54                       3061 00114$:
                                   3062 ;src/mushroompie.c:173: } else if (!current_dyn) {
      000A54 21r05r00              3063 	ld	hl, #_current_dyn + 1
      000A57 3A                    3064 	ld	a, (hl-)
      000A58 B6                    3065 	or	a, (hl)
      000A59 20 08                 3066 	jr	NZ, 00120$
                                   3067 ;src/mushroompie.c:174: delta_y = 1;
      000A5B 21r18r00              3068 	ld	hl, #_delta_y
      000A5E 3E 01                 3069 	ld	a, #0x01
      000A60 22                    3070 	ld	(hl+), a
      000A61 AF                    3071 	xor	a, a
      000A62 77                    3072 	ld	(hl), a
      000A63                       3073 00120$:
                                   3074 ;src/mushroompie.c:176: if (delta_y > 0) {            
      000A63 21r18r00              3075 	ld	hl, #_delta_y
      000A66 AF                    3076 	xor	a, a
      000A67 96                    3077 	sub	a, (hl)
      000A68 23                    3078 	inc	hl
      000A69 3E 00                 3079 	ld	a, #0x00
      000A6B 9E                    3080 	sbc	a, (hl)
      000A6C 3E 00                 3081 	ld	a, #0x00
      000A6E 57                    3082 	ld	d, a
      000A6F CB 7E                 3083 	bit	7, (hl)
      000A71 28 07                 3084 	jr	Z, 00362$
      000A73 CB 7A                 3085 	bit	7, d
      000A75 20 08                 3086 	jr	NZ, 00363$
      000A77 BF                    3087 	cp	a, a
      000A78 18 05                 3088 	jr	00363$
      000A7A                       3089 00362$:
      000A7A CB 7A                 3090 	bit	7, d
      000A7C 28 01                 3091 	jr	Z, 00363$
      000A7E 37                    3092 	scf
      000A7F                       3093 00363$:
      000A7F D2r69r0B              3094 	jp	NC, 00151$
                                   3095 ;src/mushroompie.c:177: get_h_coll(dizzy_x, dizzy_y + 21 + delta_y);
      000A82 21r12r00              3096 	ld	hl, #_dizzy_y
      000A85 2A                    3097 	ld	a, (hl+)
      000A86 C6 15                 3098 	add	a, #0x15
      000A88 4F                    3099 	ld	c, a
      000A89 7E                    3100 	ld	a, (hl)
      000A8A CE 00                 3101 	adc	a, #0x00
      000A8C 47                    3102 	ld	b, a
      000A8D 79                    3103 	ld	a, c
      000A8E 21r18r00              3104 	ld	hl, #_delta_y
      000A91 86                    3105 	add	a, (hl)
      000A92 23                    3106 	inc	hl
      000A93 4F                    3107 	ld	c, a
      000A94 78                    3108 	ld	a, b
      000A95 8E                    3109 	adc	a, (hl)
      000A96 47                    3110 	ld	b, a
      000A97 C5                    3111 	push	bc
      000A98 21r10r00              3112 	ld	hl, #_dizzy_x
      000A9B 2A                    3113 	ld	a, (hl+)
      000A9C 5F                    3114 	ld	e, a
      000A9D 56                    3115 	ld	d, (hl)
      000A9E D5                    3116 	push	de
      000A9F CDr7Ar06              3117 	call	_get_h_coll
      000AA2 E8 04                 3118 	add	sp, #4
                                   3119 ;src/mushroompie.c:179: if ((collision_buf[0] == 1) || (collision_buf[1] == 1) || (collision_buf[2] == 1)) {
      000AA4 21r3Er02              3120 	ld	hl, #_collision_buf
      000AA7 46                    3121 	ld	b, (hl)
      000AA8 78                    3122 	ld	a, b
      000AA9 3D                    3123 	dec	a
      000AAA 28 10                 3124 	jr	Z, 00145$
      000AAC 21r3Fr02              3125 	ld	hl, #(_collision_buf + 1)
      000AAF 4E                    3126 	ld	c, (hl)
      000AB0 79                    3127 	ld	a, c
      000AB1 3D                    3128 	dec	a
      000AB2 28 08                 3129 	jr	Z, 00145$
      000AB4 21r40r02              3130 	ld	hl, #(_collision_buf + 2)
      000AB7 6E                    3131 	ld	l, (hl)
                                   3132 ;	spillPairReg hl
      000AB8 7D                    3133 	ld	a, l
      000AB9 3D                    3134 	dec	a
      000ABA 20 29                 3135 	jr	NZ, 00146$
      000ABC                       3136 00145$:
                                   3137 ;src/mushroompie.c:180: delta_y = 0; 
      000ABC AF                    3138 	xor	a, a
      000ABD 21r18r00              3139 	ld	hl, #_delta_y
      000AC0 22                    3140 	ld	(hl+), a
      000AC1 77                    3141 	ld	(hl), a
                                   3142 ;src/mushroompie.c:181: if (dizzy_falling) SND_TAP;
      000AC2 FAr20r00              3143 	ld	a, (#_dizzy_falling)
      000AC5 B7                    3144 	or	a, a
      000AC6 CArB5r0B              3145 	jp	Z, 00162$
      000AC9 AF                    3146 	xor	a, a
      000ACA F5                    3147 	push	af
      000ACB 11 10 00              3148 	ld	de, #0x0010
      000ACE D5                    3149 	push	de
      000ACF 11 41 00              3150 	ld	de, #0x0041
      000AD2 D5                    3151 	push	de
      000AD3 AF                    3152 	xor	a, a
      000AD4 F5                    3153 	push	af
      000AD5 11 00 00              3154 	ld	de, #0x0000
      000AD8 D5                    3155 	push	de
      000AD9 21 00 04              3156 	ld	hl, #0x400
      000ADC E5                    3157 	push	hl
      000ADD CDr00r00              3158 	call	_PlayFx
      000AE0 E8 0C                 3159 	add	sp, #12
      000AE2 C3rB5r0B              3160 	jp	00162$
      000AE5                       3161 00146$:
                                   3162 ;src/mushroompie.c:182: } else if ((collision_buf[0] == 2) || (collision_buf[1] == 2) || (collision_buf[2] == 2)) {
      000AE5 78                    3163 	ld	a, b
      000AE6 D6 02                 3164 	sub	a, #0x02
      000AE8 28 0A                 3165 	jr	Z, 00140$
      000AEA 79                    3166 	ld	a, c
      000AEB D6 02                 3167 	sub	a, #0x02
      000AED 28 05                 3168 	jr	Z, 00140$
      000AEF 7D                    3169 	ld	a, l
      000AF0 D6 02                 3170 	sub	a, #0x02
      000AF2 20 32                 3171 	jr	NZ, 00141$
      000AF4                       3172 00140$:
                                   3173 ;src/mushroompie.c:183: if (tile_pos_oy > 4) { 
      000AF4 3E 04                 3174 	ld	a, #0x04
      000AF6 21r3Dr02              3175 	ld	hl, #_tile_pos_oy
      000AF9 96                    3176 	sub	a, (hl)
      000AFA D2rB5r0B              3177 	jp	NC, 00162$
                                   3178 ;src/mushroompie.c:184: delta_y = 0; 
      000AFD AF                    3179 	xor	a, a
      000AFE 21r18r00              3180 	ld	hl, #_delta_y
      000B01 22                    3181 	ld	(hl+), a
      000B02 77                    3182 	ld	(hl), a
                                   3183 ;src/mushroompie.c:185: if (dizzy_falling) SND_TAP;
      000B03 FAr20r00              3184 	ld	a, (#_dizzy_falling)
      000B06 B7                    3185 	or	a, a
      000B07 CArB5r0B              3186 	jp	Z, 00162$
      000B0A AF                    3187 	xor	a, a
      000B0B F5                    3188 	push	af
      000B0C 11 10 00              3189 	ld	de, #0x0010
      000B0F D5                    3190 	push	de
      000B10 11 41 00              3191 	ld	de, #0x0041
      000B13 D5                    3192 	push	de
      000B14 AF                    3193 	xor	a, a
      000B15 F5                    3194 	push	af
      000B16 11 00 00              3195 	ld	de, #0x0000
      000B19 D5                    3196 	push	de
      000B1A 21 00 04              3197 	ld	hl, #0x400
      000B1D E5                    3198 	push	hl
      000B1E CDr00r00              3199 	call	_PlayFx
      000B21 E8 0C                 3200 	add	sp, #12
      000B23 C3rB5r0B              3201 	jp	00162$
      000B26                       3202 00141$:
                                   3203 ;src/mushroompie.c:187: } else if ((collision_buf[0] == 5) || (collision_buf[1] == 5) || (collision_buf[2] == 5)) {
      000B26 78                    3204 	ld	a, b
      000B27 D6 05                 3205 	sub	a, #0x05
      000B29 28 0A                 3206 	jr	Z, 00135$
      000B2B 79                    3207 	ld	a, c
      000B2C D6 05                 3208 	sub	a, #0x05
      000B2E 28 05                 3209 	jr	Z, 00135$
      000B30 7D                    3210 	ld	a, l
      000B31 D6 05                 3211 	sub	a, #0x05
      000B33 20 1D                 3212 	jr	NZ, 00136$
      000B35                       3213 00135$:
                                   3214 ;src/mushroompie.c:188: cloud_timer++; cloud_timer &= 3;
      000B35 21r0Br00              3215 	ld	hl, #_cloud_timer
      000B38 34                    3216 	inc	(hl)
      000B39 7E                    3217 	ld	a, (hl)
      000B3A E6 03                 3218 	and	a, #0x03
                                   3219 ;src/mushroompie.c:189: if (cloud_timer) { delta_y = 0; dizzy_falling = 0; dizzy_stun = 0; } // clouds are really soft and fluffy
      000B3C 77                    3220 	ld	(hl), a
      000B3D B7                    3221 	or	a, a
      000B3E 28 75                 3222 	jr	Z, 00162$
      000B40 AF                    3223 	xor	a, a
      000B41 21r18r00              3224 	ld	hl, #_delta_y
      000B44 22                    3225 	ld	(hl+), a
      000B45 77                    3226 	ld	(hl), a
      000B46 21r20r00              3227 	ld	hl, #_dizzy_falling
      000B49 36 00                 3228 	ld	(hl), #0x00
      000B4B 21r21r00              3229 	ld	hl, #_dizzy_stun
      000B4E 36 00                 3230 	ld	(hl), #0x00
      000B50 18 63                 3231 	jr	00162$
      000B52                       3232 00136$:
                                   3233 ;src/mushroompie.c:191: is_position_safe = 0;
      000B52 21r1Cr00              3234 	ld	hl, #_is_position_safe
      000B55 36 00                 3235 	ld	(hl), #0x00
                                   3236 ;src/mushroompie.c:192: if (!current_dyn) {
      000B57 21r05r00              3237 	ld	hl, #_current_dyn + 1
      000B5A 3A                    3238 	ld	a, (hl-)
      000B5B B6                    3239 	or	a, (hl)
      000B5C 20 57                 3240 	jr	NZ, 00162$
                                   3241 ;src/mushroompie.c:193: if (dizzy_falling < MAX_STUN_HEIGHT) dizzy_falling++;
      000B5E 21r20r00              3242 	ld	hl, #_dizzy_falling
      000B61 7E                    3243 	ld	a, (hl)
      000B62 D6 20                 3244 	sub	a, #0x20
      000B64 30 4F                 3245 	jr	NC, 00162$
      000B66 34                    3246 	inc	(hl)
      000B67 18 4C                 3247 	jr	00162$
      000B69                       3248 00151$:
                                   3249 ;src/mushroompie.c:196: } else dizzy_falling = 0;
      000B69 21r20r00              3250 	ld	hl, #_dizzy_falling
      000B6C 36 00                 3251 	ld	(hl), #0x00
      000B6E 18 45                 3252 	jr	00162$
      000B70                       3253 00161$:
                                   3254 ;src/mushroompie.c:198: if (current_room->room_h_coll) current_room->room_h_coll(dizzy_x, dizzy_y + 4); else get_h_coll(dizzy_x, dizzy_y + 4);
      000B70 21r12r00              3255 	ld	hl, #_dizzy_y
      000B73 2A                    3256 	ld	a, (hl+)
      000B74 C6 04                 3257 	add	a, #0x04
      000B76 5F                    3258 	ld	e, a
      000B77 7E                    3259 	ld	a, (hl)
      000B78 CE 00                 3260 	adc	a, #0x00
      000B7A 57                    3261 	ld	d, a
      000B7B 78                    3262 	ld	a, b
      000B7C B1                    3263 	or	a, c
      000B7D 28 11                 3264 	jr	Z, 00154$
      000B7F D5                    3265 	push	de
      000B80 21r10r00              3266 	ld	hl, #_dizzy_x
      000B83 2A                    3267 	ld	a, (hl+)
      000B84 5F                    3268 	ld	e, a
      000B85 56                    3269 	ld	d, (hl)
      000B86 D5                    3270 	push	de
      000B87 69                    3271 	ld	l, c
                                   3272 ;	spillPairReg hl
                                   3273 ;	spillPairReg hl
      000B88 60                    3274 	ld	h, b
                                   3275 ;	spillPairReg hl
                                   3276 ;	spillPairReg hl
      000B89 CDr00r00              3277 	call	___sdcc_call_hl
      000B8C E8 04                 3278 	add	sp, #4
      000B8E 18 0D                 3279 	jr	00155$
      000B90                       3280 00154$:
      000B90 D5                    3281 	push	de
      000B91 21r10r00              3282 	ld	hl, #_dizzy_x
      000B94 2A                    3283 	ld	a, (hl+)
      000B95 5F                    3284 	ld	e, a
      000B96 56                    3285 	ld	d, (hl)
      000B97 D5                    3286 	push	de
      000B98 CDr7Ar06              3287 	call	_get_h_coll
      000B9B E8 04                 3288 	add	sp, #4
      000B9D                       3289 00155$:
                                   3290 ;src/mushroompie.c:200: if ((collision_buf[0] == 1) || (collision_buf[1] == 1) || (collision_buf[2] == 1)) {
      000B9D FAr3Er02              3291 	ld	a, (#_collision_buf + 0)
      000BA0 3D                    3292 	dec	a
      000BA1 28 0C                 3293 	jr	Z, 00156$
      000BA3 FAr3Fr02              3294 	ld	a, (#(_collision_buf + 1) + 0)
      000BA6 3D                    3295 	dec	a
      000BA7 28 06                 3296 	jr	Z, 00156$
      000BA9 FAr40r02              3297 	ld	a, (#(_collision_buf + 2) + 0)
      000BAC 3D                    3298 	dec	a
      000BAD 20 06                 3299 	jr	NZ, 00162$
      000BAF                       3300 00156$:
                                   3301 ;src/mushroompie.c:201: delta_y = 0;
      000BAF AF                    3302 	xor	a, a
      000BB0 21r18r00              3303 	ld	hl, #_delta_y
      000BB3 22                    3304 	ld	(hl+), a
      000BB4 77                    3305 	ld	(hl), a
      000BB5                       3306 00162$:
                                   3307 ;src/mushroompie.c:205: if (!delta_y) {
      000BB5 21r19r00              3308 	ld	hl, #_delta_y + 1
      000BB8 3A                    3309 	ld	a, (hl-)
      000BB9 B6                    3310 	or	a, (hl)
      000BBA 20 11                 3311 	jr	NZ, 00166$
                                   3312 ;src/mushroompie.c:206: if (dizzy_falling == MAX_STUN_HEIGHT) dizzy_stun = 1;
      000BBC FAr20r00              3313 	ld	a, (#_dizzy_falling)
      000BBF D6 20                 3314 	sub	a, #0x20
      000BC1 20 05                 3315 	jr	NZ, 00164$
      000BC3 21r21r00              3316 	ld	hl, #_dizzy_stun
      000BC6 36 01                 3317 	ld	(hl), #0x01
      000BC8                       3318 00164$:
                                   3319 ;src/mushroompie.c:207: dizzy_falling = 0;
      000BC8 21r20r00              3320 	ld	hl, #_dizzy_falling
      000BCB 36 00                 3321 	ld	(hl), #0x00
      000BCD                       3322 00166$:
                                   3323 ;src/mushroompie.c:210: if (delta_x) {
      000BCD 21r17r00              3324 	ld	hl, #_delta_x + 1
      000BD0 3A                    3325 	ld	a, (hl-)
      000BD1 B6                    3326 	or	a, (hl)
      000BD2 CAr6Dr0C              3327 	jp	Z, 00182$
                                   3328 ;src/mushroompie.c:167: if (current_room->room_h_coll) current_room->room_h_coll(dizzy_x, dizzy_y + 21); else get_h_coll(dizzy_x, dizzy_y + 21);
      000BD5 21r0Er00              3329 	ld	hl, #_current_room
      000BD8 2A                    3330 	ld	a, (hl+)
      000BD9 5F                    3331 	ld	e, a
      000BDA 56                    3332 	ld	d, (hl)
                                   3333 ;src/mushroompie.c:212: if (current_room->room_v_coll) current_room->room_v_coll(dizzy_x + delta_x, dizzy_y + 8); else get_v_coll(dizzy_x + delta_x, dizzy_y + 8); 
      000BDB 21r12r00              3334 	ld	hl, #_dizzy_y
      000BDE 2A                    3335 	ld	a, (hl+)
      000BDF C6 08                 3336 	add	a, #0x08
      000BE1 4F                    3337 	ld	c, a
      000BE2 7E                    3338 	ld	a, (hl)
      000BE3 CE 00                 3339 	adc	a, #0x00
      000BE5 47                    3340 	ld	b, a
      000BE6 D5                    3341 	push	de
      000BE7 21r10r00              3342 	ld	hl, #_dizzy_x
      000BEA 2A                    3343 	ld	a, (hl+)
      000BEB 5F                    3344 	ld	e, a
      000BEC 56                    3345 	ld	d, (hl)
      000BED 21r16r00              3346 	ld	hl, #_delta_x
      000BF0 2A                    3347 	ld	a,	(hl+)
      000BF1 66                    3348 	ld	h, (hl)
      000BF2 6F                    3349 	ld	l, a
      000BF3 19                    3350 	add	hl, de
      000BF4 D1                    3351 	pop	de
      000BF5 33                    3352 	inc	sp
      000BF6 33                    3353 	inc	sp
      000BF7 E5                    3354 	push	hl
      000BF8 21 11 00              3355 	ld	hl, #0x0011
      000BFB 19                    3356 	add	hl, de
      000BFC 5D                    3357 	ld	e, l
      000BFD 54                    3358 	ld	d, h
      000BFE 1A                    3359 	ld	a, (de)
      000BFF F8 02                 3360 	ldhl	sp,	#2
      000C01 22                    3361 	ld	(hl+), a
      000C02 13                    3362 	inc	de
      000C03 1A                    3363 	ld	a, (de)
      000C04 77                    3364 	ld	(hl), a
                                   3365 ;src/mushroompie.c:211: if (delta_x < 0) {
      000C05 FAr17r00              3366 	ld	a, (#_delta_x + 1)
      000C08 CB 7F                 3367 	bit	7, a
      000C0A 28 27                 3368 	jr	Z, 00174$
                                   3369 ;src/mushroompie.c:212: if (current_room->room_v_coll) current_room->room_v_coll(dizzy_x + delta_x, dizzy_y + 8); else get_v_coll(dizzy_x + delta_x, dizzy_y + 8); 
      000C0C F8 03                 3370 	ldhl	sp,	#3
      000C0E 3A                    3371 	ld	a, (hl-)
      000C0F B6                    3372 	or	a, (hl)
      000C10 28 13                 3373 	jr	Z, 00168$
      000C12 2B                    3374 	dec	hl
      000C13 2B                    3375 	dec	hl
      000C14 C5                    3376 	push	bc
      000C15 2A                    3377 	ld	a, (hl+)
      000C16 5F                    3378 	ld	e, a
      000C17 56                    3379 	ld	d, (hl)
      000C18 D5                    3380 	push	de
      000C19 F8 06                 3381 	ldhl	sp,	#6
      000C1B 2A                    3382 	ld	a, (hl+)
      000C1C 66                    3383 	ld	h, (hl)
                                   3384 ;	spillPairReg hl
                                   3385 ;	spillPairReg hl
      000C1D 6F                    3386 	ld	l, a
                                   3387 ;	spillPairReg hl
                                   3388 ;	spillPairReg hl
      000C1E CDr00r00              3389 	call	___sdcc_call_hl
      000C21 E8 04                 3390 	add	sp, #4
      000C23 18 31                 3391 	jr	00175$
      000C25                       3392 00168$:
      000C25 C5                    3393 	push	bc
      000C26 F8 02                 3394 	ldhl	sp,	#2
      000C28 2A                    3395 	ld	a, (hl+)
      000C29 5F                    3396 	ld	e, a
      000C2A 56                    3397 	ld	d, (hl)
      000C2B D5                    3398 	push	de
      000C2C CDr2Ar07              3399 	call	_get_v_coll
      000C2F E8 04                 3400 	add	sp, #4
      000C31 18 23                 3401 	jr	00175$
      000C33                       3402 00174$:
                                   3403 ;src/mushroompie.c:214: if (current_room->room_v_coll) current_room->room_v_coll(dizzy_x + delta_x + 16, dizzy_y + 8); else get_v_coll(dizzy_x + delta_x + 16, dizzy_y + 8);
      000C33 D1                    3404 	pop	de
      000C34 D5                    3405 	push	de
      000C35 21 10 00              3406 	ld	hl, #0x0010
      000C38 19                    3407 	add	hl, de
      000C39 5D                    3408 	ld	e, l
      000C3A 54                    3409 	ld	d, h
      000C3B F8 03                 3410 	ldhl	sp,	#3
      000C3D 3A                    3411 	ld	a, (hl-)
      000C3E B6                    3412 	or	a, (hl)
      000C3F 28 0E                 3413 	jr	Z, 00171$
      000C41 C5                    3414 	push	bc
      000C42 D5                    3415 	push	de
      000C43 F8 06                 3416 	ldhl	sp,	#6
      000C45 2A                    3417 	ld	a, (hl+)
      000C46 66                    3418 	ld	h, (hl)
                                   3419 ;	spillPairReg hl
                                   3420 ;	spillPairReg hl
      000C47 6F                    3421 	ld	l, a
                                   3422 ;	spillPairReg hl
                                   3423 ;	spillPairReg hl
      000C48 CDr00r00              3424 	call	___sdcc_call_hl
      000C4B E8 04                 3425 	add	sp, #4
      000C4D 18 07                 3426 	jr	00175$
      000C4F                       3427 00171$:
      000C4F C5                    3428 	push	bc
      000C50 D5                    3429 	push	de
      000C51 CDr2Ar07              3430 	call	_get_v_coll
      000C54 E8 04                 3431 	add	sp, #4
      000C56                       3432 00175$:
                                   3433 ;src/mushroompie.c:217: if ((collision_buf[0] == 1) || (collision_buf[0] == 2) || (collision_buf[1] == 1)) {
      000C56 FAr3Er02              3434 	ld	a, (#_collision_buf + 0)
      000C59 FE 01                 3435 	cp	a, #0x01
      000C5B 28 0A                 3436 	jr	Z, 00176$
      000C5D D6 02                 3437 	sub	a, #0x02
      000C5F 28 06                 3438 	jr	Z, 00176$
      000C61 FAr3Fr02              3439 	ld	a, (#(_collision_buf + 1) + 0)
      000C64 3D                    3440 	dec	a
      000C65 20 06                 3441 	jr	NZ, 00182$
      000C67                       3442 00176$:
                                   3443 ;src/mushroompie.c:218: delta_x = 0;
      000C67 AF                    3444 	xor	a, a
      000C68 21r16r00              3445 	ld	hl, #_delta_x
      000C6B 22                    3446 	ld	(hl+), a
      000C6C 77                    3447 	ld	(hl), a
      000C6D                       3448 00182$:
                                   3449 ;src/mushroompie.c:221: }
      000C6D E8 04                 3450 	add	sp, #4
      000C6F C9                    3451 	ret
                                   3452 ;src/mushroompie.c:223: void check_dizzy_evil_collisions() {
                                   3453 ;	---------------------------------
                                   3454 ; Function check_dizzy_evil_collisions
                                   3455 ; ---------------------------------
      000C70                       3456 _check_dizzy_evil_collisions::
                                   3457 ;src/mushroompie.c:224: if (ani_type != ANI_DEAD) {
      000C70 FAr02r00              3458 	ld	a, (#_ani_type)
      000C73 D6 07                 3459 	sub	a, #0x07
      000C75 C8                    3460 	ret	Z
                                   3461 ;src/mushroompie.c:225: if (current_room->room_evil_coll) current_room->room_evil_coll(dizzy_x, dizzy_y + 4);
      000C76 21r0Er00              3462 	ld	hl, #_current_room
      000C79 2A                    3463 	ld	a, (hl+)
      000C7A 4F                    3464 	ld	c, a
      000C7B 46                    3465 	ld	b, (hl)
      000C7C 21 13 00              3466 	ld	hl, #0x0013
      000C7F 09                    3467 	add	hl, bc
      000C80 2A                    3468 	ld	a, (hl+)
      000C81 4F                    3469 	ld	c, a
      000C82 46                    3470 	ld	b, (hl)
      000C83 78                    3471 	ld	a, b
      000C84 B1                    3472 	or	a, c
      000C85 28 1A                 3473 	jr	Z, 00102$
      000C87 21r12r00              3474 	ld	hl, #_dizzy_y
      000C8A 2A                    3475 	ld	a, (hl+)
      000C8B C6 04                 3476 	add	a, #0x04
      000C8D 5F                    3477 	ld	e, a
      000C8E 7E                    3478 	ld	a, (hl)
      000C8F CE 00                 3479 	adc	a, #0x00
      000C91 57                    3480 	ld	d, a
      000C92 D5                    3481 	push	de
      000C93 21r10r00              3482 	ld	hl, #_dizzy_x
      000C96 2A                    3483 	ld	a, (hl+)
      000C97 5F                    3484 	ld	e, a
      000C98 56                    3485 	ld	d, (hl)
      000C99 D5                    3486 	push	de
      000C9A 69                    3487 	ld	l, c
                                   3488 ;	spillPairReg hl
                                   3489 ;	spillPairReg hl
      000C9B 60                    3490 	ld	h, b
                                   3491 ;	spillPairReg hl
                                   3492 ;	spillPairReg hl
      000C9C CDr00r00              3493 	call	___sdcc_call_hl
      000C9F E8 04                 3494 	add	sp, #4
      000CA1                       3495 00102$:
                                   3496 ;src/mushroompie.c:226: get_coll(dizzy_x, dizzy_y + 4);
      000CA1 21r12r00              3497 	ld	hl, #_dizzy_y
      000CA4 2A                    3498 	ld	a, (hl+)
      000CA5 C6 04                 3499 	add	a, #0x04
      000CA7 4F                    3500 	ld	c, a
      000CA8 7E                    3501 	ld	a, (hl)
      000CA9 CE 00                 3502 	adc	a, #0x00
      000CAB 47                    3503 	ld	b, a
      000CAC C5                    3504 	push	bc
      000CAD 21r10r00              3505 	ld	hl, #_dizzy_x
      000CB0 2A                    3506 	ld	a, (hl+)
      000CB1 5F                    3507 	ld	e, a
      000CB2 56                    3508 	ld	d, (hl)
      000CB3 D5                    3509 	push	de
      000CB4 CDrB3r07              3510 	call	_get_coll
      000CB7 E8 04                 3511 	add	sp, #4
                                   3512 ;src/mushroompie.c:228: if (collision_buf[0] == 6) {
      000CB9 FAr3Er02              3513 	ld	a, (#_collision_buf + 0)
      000CBC FE 06                 3514 	cp	a, #0x06
      000CBE 20 0B                 3515 	jr	NZ, 00108$
                                   3516 ;src/mushroompie.c:229: if (dec_energy < 64) dec_energy += 2;
      000CC0 21r35r02              3517 	ld	hl, #_dec_energy
      000CC3 7E                    3518 	ld	a,(hl)
      000CC4 FE 40                 3519 	cp	a,#0x40
      000CC6 D0                    3520 	ret	NC
      000CC7 C6 02                 3521 	add	a, #0x02
      000CC9 77                    3522 	ld	(hl), a
      000CCA C9                    3523 	ret
      000CCB                       3524 00108$:
                                   3525 ;src/mushroompie.c:230: } else if (collision_buf[0] == 7) {
      000CCB D6 07                 3526 	sub	a, #0x07
      000CCD C0                    3527 	ret	NZ
                                   3528 ;src/mushroompie.c:231: dizzy_energy = 1; dec_energy = 1;
      000CCE 21r32r02              3529 	ld	hl, #_dizzy_energy
      000CD1 36 01                 3530 	ld	(hl), #0x01
      000CD3 21r35r02              3531 	ld	hl, #_dec_energy
      000CD6 36 01                 3532 	ld	(hl), #0x01
                                   3533 ;src/mushroompie.c:234: }
      000CD8 C9                    3534 	ret
                                   3535 ;src/mushroompie.c:242: void set_room(const UBYTE row, const UBYTE col, const UBYTE fade) {
                                   3536 ;	---------------------------------
                                   3537 ; Function set_room
                                   3538 ; ---------------------------------
      000CD9                       3539 _set_room::
                                   3540 ;src/mushroompie.c:243: if (fade) FADE_OUT;
      000CD9 F8 04                 3541 	ldhl	sp,	#4
      000CDB 7E                    3542 	ld	a, (hl)
      000CDC B7                    3543 	or	a, a
      000CDD 28 18                 3544 	jr	Z, 00102$
      000CDF 3E 01                 3545 	ld	a, #0x01
      000CE1 F5                    3546 	push	af
      000CE2 33                    3547 	inc	sp
      000CE3 CDr00r00              3548 	call	_push_bank
      000CE6 33                    3549 	inc	sp
      000CE7 21 2C 2C              3550 	ld	hl, #0x2c2c
      000CEA E5                    3551 	push	hl
      000CEB 21 00 93              3552 	ld	hl, #0x9300
      000CEE E5                    3553 	push	hl
      000CEF CDr00r00              3554 	call	_FadeDMG
      000CF2 E8 04                 3555 	add	sp, #4
      000CF4 CDr00r00              3556 	call	_pop_bank
      000CF7                       3557 00102$:
                                   3558 ;src/mushroompie.c:244: HIDE_SPRITES; HIDE_BKG;
      000CF7 F0r00                 3559 	ldh	a, (_LCDC_REG + 0)
      000CF9 E6 FD                 3560 	and	a, #0xfd
      000CFB E0r00                 3561 	ldh	(_LCDC_REG + 0), a
      000CFD F0r00                 3562 	ldh	a, (_LCDC_REG + 0)
      000CFF E6 FE                 3563 	and	a, #0xfe
      000D01 E0r00                 3564 	ldh	(_LCDC_REG + 0), a
                                   3565 ;src/mushroompie.c:246: current_room = dizzy_world[row]->rooms[col];
      000D03 01r36r02              3566 	ld	bc, #_dizzy_world+0
      000D06 F8 02                 3567 	ldhl	sp,	#2
      000D08 6E                    3568 	ld	l, (hl)
      000D09 26 00                 3569 	ld	h, #0x00
      000D0B 29                    3570 	add	hl, hl
      000D0C 09                    3571 	add	hl, bc
      000D0D 2A                    3572 	ld	a, (hl+)
      000D0E 4F                    3573 	ld	c, a
      000D0F 46                    3574 	ld	b, (hl)
      000D10 03                    3575 	inc	bc
      000D11 F8 03                 3576 	ldhl	sp,	#3
      000D13 6E                    3577 	ld	l, (hl)
      000D14 26 00                 3578 	ld	h, #0x00
      000D16 29                    3579 	add	hl, hl
      000D17 09                    3580 	add	hl, bc
      000D18 5D                    3581 	ld	e, l
      000D19 54                    3582 	ld	d, h
      000D1A 1A                    3583 	ld	a, (de)
      000D1B 21r0Er00              3584 	ld	hl, #_current_room
      000D1E 22                    3585 	ld	(hl+), a
      000D1F 13                    3586 	inc	de
      000D20 1A                    3587 	ld	a, (de)
      000D21 77                    3588 	ld	(hl), a
                                   3589 ;src/mushroompie.c:247: set_bank(current_room->bank);
      000D22 21r0Er00              3590 	ld	hl, #_current_room
      000D25 2A                    3591 	ld	a, (hl+)
      000D26 4F                    3592 	ld	c, a
      000D27 46                    3593 	ld	b, (hl)
      000D28 0A                    3594 	ld	a, (bc)
      000D29 F5                    3595 	push	af
      000D2A 33                    3596 	inc	sp
      000D2B CDr00r00              3597 	call	_set_bank
      000D2E 33                    3598 	inc	sp
                                   3599 ;src/mushroompie.c:250: multiple_move_sprites(evil_sprite_offset, evil_sprite_total_count, 0, 0, (unsigned char *)evil_hide);
      000D2F 11rAAr03              3600 	ld	de, #_evil_hide
      000D32 D5                    3601 	push	de
      000D33 AF                    3602 	xor	a, a
      000D34 0F                    3603 	rrca
      000D35 F5                    3604 	push	af
      000D36 21 09 10              3605 	ld	hl, #0x1009
      000D39 E5                    3606 	push	hl
      000D3A CDr00r00              3607 	call	_multiple_move_sprites
      000D3D E8 06                 3608 	add	sp, #6
                                   3609 ;src/mushroompie.c:247: set_bank(current_room->bank);
      000D3F 21r0Er00              3610 	ld	hl, #_current_room
      000D42 2A                    3611 	ld	a, (hl+)
      000D43 4F                    3612 	ld	c, a
      000D44 46                    3613 	ld	b, (hl)
                                   3614 ;src/mushroompie.c:253: unshrink_tiles(0x00, current_room->room_tiles->count, current_room->room_tiles->data); 
      000D45 21 05 00              3615 	ld	hl, #0x0005
      000D48 09                    3616 	add	hl, bc
      000D49 2A                    3617 	ld	a, (hl+)
      000D4A 4F                    3618 	ld	c, a
      000D4B 46                    3619 	ld	b, (hl)
      000D4C 59                    3620 	ld	e, c
      000D4D 50                    3621 	ld	d, b
      000D4E 13                    3622 	inc	de
      000D4F 0A                    3623 	ld	a, (bc)
      000D50 D5                    3624 	push	de
      000D51 67                    3625 	ld	h, a
      000D52 2E 00                 3626 	ld	l, #0x00
      000D54 E5                    3627 	push	hl
      000D55 CDr00r00              3628 	call	_unshrink_tiles
      000D58 E8 04                 3629 	add	sp, #4
                                   3630 ;src/mushroompie.c:247: set_bank(current_room->bank);
      000D5A 21r0Er00              3631 	ld	hl, #_current_room
      000D5D 2A                    3632 	ld	a, (hl+)
      000D5E 4F                    3633 	ld	c, a
      000D5F 46                    3634 	ld	b, (hl)
                                   3635 ;src/mushroompie.c:255: if (current_room->room_init) current_room->room_init();
      000D60 21 09 00              3636 	ld	hl, #0x0009
      000D63 09                    3637 	add	hl, bc
      000D64 2A                    3638 	ld	a, (hl+)
      000D65 4F                    3639 	ld	c, a
      000D66 66                    3640 	ld	h, (hl)
                                   3641 ;	spillPairReg hl
      000D67 7C                    3642 	ld	a, h
      000D68 B1                    3643 	or	a, c
      000D69 28 04                 3644 	jr	Z, 00104$
      000D6B 69                    3645 	ld	l, c
                                   3646 ;	spillPairReg hl
                                   3647 ;	spillPairReg hl
      000D6C CDr00r00              3648 	call	___sdcc_call_hl
      000D6F                       3649 00104$:
                                   3650 ;src/mushroompie.c:247: set_bank(current_room->bank);
      000D6F 21r0Er00              3651 	ld	hl, #_current_room
      000D72 2A                    3652 	ld	a, (hl+)
      000D73 4F                    3653 	ld	c, a
      000D74 46                    3654 	ld	b, (hl)
                                   3655 ;src/mushroompie.c:257: if (current_room->room_customdraw) current_room->room_customdraw(); else default_draw();
      000D75 21 19 00              3656 	ld	hl, #0x0019
      000D78 09                    3657 	add	hl, bc
      000D79 2A                    3658 	ld	a, (hl+)
      000D7A 4F                    3659 	ld	c, a
      000D7B 66                    3660 	ld	h, (hl)
                                   3661 ;	spillPairReg hl
      000D7C 7C                    3662 	ld	a, h
      000D7D B1                    3663 	or	a, c
      000D7E 28 06                 3664 	jr	Z, 00106$
      000D80 69                    3665 	ld	l, c
                                   3666 ;	spillPairReg hl
                                   3667 ;	spillPairReg hl
      000D81 CDr00r00              3668 	call	___sdcc_call_hl
      000D84 18 03                 3669 	jr	00107$
      000D86                       3670 00106$:
      000D86 CDr84r12              3671 	call	_default_draw
      000D89                       3672 00107$:
                                   3673 ;src/mushroompie.c:259: rle_decompress_data(current_room->room_coll_map->rle_data, (UWORD)current_room->room_coll_map->size, coll_buf);
                                   3674 ;src/mushroompie.c:247: set_bank(current_room->bank);
      000D89 21r0Er00              3675 	ld	hl, #_current_room
      000D8C 6E                    3676 	ld	l, (hl)
                                   3677 ;	spillPairReg hl
                                   3678 ;	spillPairReg hl
      000D8D FAr0Fr00              3679 	ld	a, (_current_room + 1)
      000D90 67                    3680 	ld	h, a
                                   3681 ;	spillPairReg hl
                                   3682 ;	spillPairReg hl
                                   3683 ;src/mushroompie.c:259: rle_decompress_data(current_room->room_coll_map->rle_data, (UWORD)current_room->room_coll_map->size, coll_buf);
      000D91 23                    3684 	inc	hl
      000D92 23                    3685 	inc	hl
      000D93 23                    3686 	inc	hl
      000D94 2A                    3687 	ld	a, (hl+)
      000D95 4F                    3688 	ld	c, a
      000D96 46                    3689 	ld	b, (hl)
      000D97 69                    3690 	ld	l, c
      000D98 60                    3691 	ld	h, b
      000D99 2A                    3692 	ld	a,	(hl+)
      000D9A 66                    3693 	ld	h, (hl)
                                   3694 ;	spillPairReg hl
      000D9B 6F                    3695 	ld	l, a
                                   3696 ;	spillPairReg hl
                                   3697 ;	spillPairReg hl
      000D9C 03                    3698 	inc	bc
      000D9D 03                    3699 	inc	bc
      000D9E 11r00r00              3700 	ld	de, #_coll_buf
      000DA1 D5                    3701 	push	de
      000DA2 E5                    3702 	push	hl
      000DA3 C5                    3703 	push	bc
      000DA4 CDr00r00              3704 	call	_rle_decompress_data
      000DA7 E8 06                 3705 	add	sp, #6
                                   3706 ;src/mushroompie.c:261: set_dizzy_position();
      000DA9 CDr38r09              3707 	call	_set_dizzy_position
                                   3708 ;src/mushroompie.c:263: SCX_REG = bkg_scroll_x_target = get_x_scroll_value(dizzy_x);
      000DAC 21r10r00              3709 	ld	hl, #_dizzy_x
      000DAF 2A                    3710 	ld	a, (hl+)
      000DB0 5F                    3711 	ld	e, a
      000DB1 56                    3712 	ld	d, (hl)
      000DB2 D5                    3713 	push	de
      000DB3 CDrF0r05              3714 	call	_get_x_scroll_value
      000DB6 E1                    3715 	pop	hl
      000DB7 7B                    3716 	ld	a, e
      000DB8 EAr36r02              3717 	ld	(#_bkg_scroll_x_target),a
      000DBB E0r00                 3718 	ldh	(_SCX_REG + 0), a
                                   3719 ;src/mushroompie.c:264: SCY_REG = bkg_scroll_y_target = get_y_scroll_value(dizzy_y);
      000DBD 21r12r00              3720 	ld	hl, #_dizzy_y
      000DC0 2A                    3721 	ld	a, (hl+)
      000DC1 5F                    3722 	ld	e, a
      000DC2 56                    3723 	ld	d, (hl)
      000DC3 D5                    3724 	push	de
      000DC4 CDr35r06              3725 	call	_get_y_scroll_value
      000DC7 E1                    3726 	pop	hl
      000DC8 7B                    3727 	ld	a, e
      000DC9 EAr37r02              3728 	ld	(#_bkg_scroll_y_target),a
      000DCC E0r00                 3729 	ldh	(_SCY_REG + 0), a
                                   3730 ;src/mushroompie.c:266: SHOW_BKG; SHOW_SPRITES;
      000DCE F0r00                 3731 	ldh	a, (_LCDC_REG + 0)
      000DD0 F6 01                 3732 	or	a, #0x01
      000DD2 E0r00                 3733 	ldh	(_LCDC_REG + 0), a
      000DD4 F0r00                 3734 	ldh	a, (_LCDC_REG + 0)
      000DD6 F6 02                 3735 	or	a, #0x02
      000DD8 E0r00                 3736 	ldh	(_LCDC_REG + 0), a
                                   3737 ;src/mushroompie.c:267: if (fade) FADE_IN;
      000DDA F8 04                 3738 	ldhl	sp,	#4
      000DDC 7E                    3739 	ld	a, (hl)
      000DDD B7                    3740 	or	a, a
      000DDE C8                    3741 	ret	Z
      000DDF 3E 01                 3742 	ld	a, #0x01
      000DE1 F5                    3743 	push	af
      000DE2 33                    3744 	inc	sp
      000DE3 CDr00r00              3745 	call	_push_bank
      000DE6 33                    3746 	inc	sp
      000DE7 21 2C 2C              3747 	ld	hl, #0x2c2c
      000DEA E5                    3748 	push	hl
      000DEB 3E 93                 3749 	ld	a, #0x93
      000DED F5                    3750 	push	af
      000DEE 33                    3751 	inc	sp
      000DEF 3E 01                 3752 	ld	a, #0x01
      000DF1 F5                    3753 	push	af
      000DF2 33                    3754 	inc	sp
      000DF3 CDr00r00              3755 	call	_FadeDMG
      000DF6 E8 04                 3756 	add	sp, #4
                                   3757 ;src/mushroompie.c:268: }
      000DF8 C3r00r00              3758 	jp	_pop_bank
                                   3759 ;src/mushroompie.c:269: void check_change_room() {
                                   3760 ;	---------------------------------
                                   3761 ; Function check_change_room
                                   3762 ; ---------------------------------
      000DFB                       3763 _check_change_room::
                                   3764 ;src/mushroompie.c:270: dizzy_tmp_xy = dizzy_x + delta_x;
      000DFB FAr10r00              3765 	ld	a, (#_dizzy_x)
      000DFE 21r16r00              3766 	ld	hl, #_delta_x
      000E01 86                    3767 	add	a, (hl)
      000E02 EAr14r00              3768 	ld	(#_dizzy_tmp_xy),a
      000E05 FAr11r00              3769 	ld	a, (#_dizzy_x + 1)
      000E08 21r17r00              3770 	ld	hl, #_delta_x + 1
      000E0B 8E                    3771 	adc	a, (hl)
      000E0C 21r15r00              3772 	ld	hl, #_dizzy_tmp_xy + 1
      000E0F 77                    3773 	ld	(hl), a
                                   3774 ;src/mushroompie.c:271: if (dizzy_tmp_xy < MIN_DIZZY_X) {
      000E10 CB 7E                 3775 	bit	7, (hl)
      000E12 28 2A                 3776 	jr	Z, 00109$
                                   3777 ;src/mushroompie.c:272: if (current_room_x) { current_room_x--; dizzy_x = MAX_DIZZY_X; set_room(current_room_y, current_room_x, 1); }
      000E14 21r0Cr00              3778 	ld	hl, #_current_room_x
      000E17 7E                    3779 	ld	a, (hl)
      000E18 B7                    3780 	or	a, a
      000E19 28 1B                 3781 	jr	Z, 00102$
      000E1B 35                    3782 	dec	(hl)
      000E1C 21r10r00              3783 	ld	hl, #_dizzy_x
      000E1F 3E E0                 3784 	ld	a, #0xe0
      000E21 22                    3785 	ld	(hl+), a
      000E22 AF                    3786 	xor	a, a
      000E23 77                    3787 	ld	(hl), a
      000E24 3E 01                 3788 	ld	a, #0x01
      000E26 F5                    3789 	push	af
      000E27 33                    3790 	inc	sp
      000E28 FAr0Cr00              3791 	ld	a, (#_current_room_x)
      000E2B 67                    3792 	ld	h, a
      000E2C FAr0Dr00              3793 	ld	a, (#_current_room_y)
      000E2F 6F                    3794 	ld	l, a
      000E30 E5                    3795 	push	hl
      000E31 CDrD9r0C              3796 	call	_set_room
      000E34 E8 03                 3797 	add	sp, #3
      000E36                       3798 00102$:
                                   3799 ;src/mushroompie.c:273: delta_x = 0;
      000E36 AF                    3800 	xor	a, a
      000E37 21r16r00              3801 	ld	hl, #_delta_x
      000E3A 22                    3802 	ld	(hl+), a
      000E3B 77                    3803 	ld	(hl), a
      000E3C 18 4D                 3804 	jr	00110$
      000E3E                       3805 00109$:
                                   3806 ;src/mushroompie.c:274: } else if (dizzy_tmp_xy > MAX_DIZZY_X) { 
      000E3E 21r14r00              3807 	ld	hl, #_dizzy_tmp_xy
      000E41 3E E0                 3808 	ld	a, #0xe0
      000E43 96                    3809 	sub	a, (hl)
      000E44 23                    3810 	inc	hl
      000E45 3E 00                 3811 	ld	a, #0x00
      000E47 9E                    3812 	sbc	a, (hl)
      000E48 3E 00                 3813 	ld	a, #0x00
      000E4A 57                    3814 	ld	d, a
      000E4B CB 7E                 3815 	bit	7, (hl)
      000E4D 28 07                 3816 	jr	Z, 00163$
      000E4F CB 7A                 3817 	bit	7, d
      000E51 20 08                 3818 	jr	NZ, 00164$
      000E53 BF                    3819 	cp	a, a
      000E54 18 05                 3820 	jr	00164$
      000E56                       3821 00163$:
      000E56 CB 7A                 3822 	bit	7, d
      000E58 28 01                 3823 	jr	Z, 00164$
      000E5A 37                    3824 	scf
      000E5B                       3825 00164$:
      000E5B 30 2E                 3826 	jr	NC, 00110$
                                   3827 ;src/mushroompie.c:275: current_room_x++; 
      000E5D 21r0Cr00              3828 	ld	hl, #_current_room_x
      000E60 34                    3829 	inc	(hl)
                                   3830 ;src/mushroompie.c:276: if (current_room_x < WORLD_WIDTH) { dizzy_x = MIN_DIZZY_X; set_room(current_room_y, current_room_x, 1); } else current_room_x = WORLD_WIDTH - 1;
      000E61 7E                    3831 	ld	a, (hl)
      000E62 D6 06                 3832 	sub	a, #0x06
      000E64 30 1A                 3833 	jr	NC, 00104$
      000E66 AF                    3834 	xor	a, a
      000E67 21r10r00              3835 	ld	hl, #_dizzy_x
      000E6A 22                    3836 	ld	(hl+), a
      000E6B 77                    3837 	ld	(hl), a
      000E6C 3E 01                 3838 	ld	a, #0x01
      000E6E F5                    3839 	push	af
      000E6F 33                    3840 	inc	sp
      000E70 FAr0Cr00              3841 	ld	a, (#_current_room_x)
      000E73 67                    3842 	ld	h, a
      000E74 FAr0Dr00              3843 	ld	a, (#_current_room_y)
      000E77 6F                    3844 	ld	l, a
      000E78 E5                    3845 	push	hl
      000E79 CDrD9r0C              3846 	call	_set_room
      000E7C E8 03                 3847 	add	sp, #3
      000E7E 18 05                 3848 	jr	00105$
      000E80                       3849 00104$:
      000E80 21r0Cr00              3850 	ld	hl, #_current_room_x
      000E83 36 05                 3851 	ld	(hl), #0x05
      000E85                       3852 00105$:
                                   3853 ;src/mushroompie.c:277: delta_x = 0;
      000E85 AF                    3854 	xor	a, a
      000E86 21r16r00              3855 	ld	hl, #_delta_x
      000E89 22                    3856 	ld	(hl+), a
      000E8A 77                    3857 	ld	(hl), a
      000E8B                       3858 00110$:
                                   3859 ;src/mushroompie.c:280: dizzy_tmp_xy = dizzy_y + delta_y;
      000E8B FAr12r00              3860 	ld	a, (#_dizzy_y)
      000E8E 21r18r00              3861 	ld	hl, #_delta_y
      000E91 86                    3862 	add	a, (hl)
      000E92 EAr14r00              3863 	ld	(#_dizzy_tmp_xy),a
      000E95 FAr13r00              3864 	ld	a, (#_dizzy_y + 1)
      000E98 21r19r00              3865 	ld	hl, #_delta_y + 1
      000E9B 8E                    3866 	adc	a, (hl)
      000E9C 21r15r00              3867 	ld	hl, #_dizzy_tmp_xy + 1
      000E9F 77                    3868 	ld	(hl), a
                                   3869 ;src/mushroompie.c:281: if (dizzy_tmp_xy < MIN_DIZZY_Y) {
      000EA0 CB 7E                 3870 	bit	7, (hl)
      000EA2 28 22                 3871 	jr	Z, 00119$
                                   3872 ;src/mushroompie.c:282: if (current_room_y) { current_room_y--; dizzy_y = MAX_DIZZY_Y; set_room(current_room_y, current_room_x, 1); }
      000EA4 21r0Dr00              3873 	ld	hl, #_current_room_y
      000EA7 7E                    3874 	ld	a, (hl)
      000EA8 B7                    3875 	or	a, a
      000EA9 C8                    3876 	ret	Z
      000EAA 35                    3877 	dec	(hl)
      000EAB 21r12r00              3878 	ld	hl, #_dizzy_y
      000EAE 3E 78                 3879 	ld	a, #0x78
      000EB0 22                    3880 	ld	(hl+), a
      000EB1 AF                    3881 	xor	a, a
      000EB2 77                    3882 	ld	(hl), a
      000EB3 3E 01                 3883 	ld	a, #0x01
      000EB5 F5                    3884 	push	af
      000EB6 33                    3885 	inc	sp
      000EB7 FAr0Cr00              3886 	ld	a, (#_current_room_x)
      000EBA 67                    3887 	ld	h, a
      000EBB FAr0Dr00              3888 	ld	a, (#_current_room_y)
      000EBE 6F                    3889 	ld	l, a
      000EBF E5                    3890 	push	hl
      000EC0 CDrD9r0C              3891 	call	_set_room
      000EC3 E8 03                 3892 	add	sp, #3
      000EC5 C9                    3893 	ret
      000EC6                       3894 00119$:
                                   3895 ;src/mushroompie.c:283: } else if (dizzy_tmp_xy > MAX_DIZZY_Y) {
      000EC6 21r14r00              3896 	ld	hl, #_dizzy_tmp_xy
      000EC9 3E 78                 3897 	ld	a, #0x78
      000ECB 96                    3898 	sub	a, (hl)
      000ECC 23                    3899 	inc	hl
      000ECD 3E 00                 3900 	ld	a, #0x00
      000ECF 9E                    3901 	sbc	a, (hl)
      000ED0 3E 00                 3902 	ld	a, #0x00
      000ED2 57                    3903 	ld	d, a
      000ED3 CB 7E                 3904 	bit	7, (hl)
      000ED5 28 07                 3905 	jr	Z, 00165$
      000ED7 CB 7A                 3906 	bit	7, d
      000ED9 20 08                 3907 	jr	NZ, 00166$
      000EDB BF                    3908 	cp	a, a
      000EDC 18 05                 3909 	jr	00166$
      000EDE                       3910 00165$:
      000EDE CB 7A                 3911 	bit	7, d
      000EE0 28 01                 3912 	jr	Z, 00166$
      000EE2 37                    3913 	scf
      000EE3                       3914 00166$:
      000EE3 D0                    3915 	ret	NC
                                   3916 ;src/mushroompie.c:284: current_room_y++; 
      000EE4 21r0Dr00              3917 	ld	hl, #_current_room_y
      000EE7 34                    3918 	inc	(hl)
                                   3919 ;src/mushroompie.c:285: if (current_room_y < WORLD_HEIGHT) { dizzy_y = MIN_DIZZY_Y; set_room(current_room_y, current_room_x, 1); } else current_room_y = WORLD_HEIGHT - 1;
      000EE8 7E                    3920 	ld	a, (hl)
      000EE9 D6 02                 3921 	sub	a, #0x02
      000EEB 30 19                 3922 	jr	NC, 00114$
      000EED AF                    3923 	xor	a, a
      000EEE 21r12r00              3924 	ld	hl, #_dizzy_y
      000EF1 22                    3925 	ld	(hl+), a
      000EF2 77                    3926 	ld	(hl), a
      000EF3 3E 01                 3927 	ld	a, #0x01
      000EF5 F5                    3928 	push	af
      000EF6 33                    3929 	inc	sp
      000EF7 FAr0Cr00              3930 	ld	a, (#_current_room_x)
      000EFA 67                    3931 	ld	h, a
      000EFB FAr0Dr00              3932 	ld	a, (#_current_room_y)
      000EFE 6F                    3933 	ld	l, a
      000EFF E5                    3934 	push	hl
      000F00 CDrD9r0C              3935 	call	_set_room
      000F03 E8 03                 3936 	add	sp, #3
      000F05 C9                    3937 	ret
      000F06                       3938 00114$:
      000F06 21r0Dr00              3939 	ld	hl, #_current_room_y
      000F09 36 01                 3940 	ld	(hl), #0x01
                                   3941 ;src/mushroompie.c:287: }
      000F0B C9                    3942 	ret
                                   3943 ;src/misc/inventory.c:88: void push_last(items_list * list, game_item * item) {
                                   3944 ;	---------------------------------
                                   3945 ; Function push_last
                                   3946 ; ---------------------------------
      000F0C                       3947 _push_last::
      000F0C E8 FA                 3948 	add	sp, #-6
                                   3949 ;src/misc/inventory.c:89: if ((!item) || (!list)) return;
      000F0E F8 0B                 3950 	ldhl	sp,	#11
      000F10 3A                    3951 	ld	a, (hl-)
      000F11 B6                    3952 	or	a, (hl)
      000F12 28 60                 3953 	jr	Z, 00107$
      000F14 2B                    3954 	dec	hl
      000F15 3A                    3955 	ld	a, (hl-)
      000F16 B6                    3956 	or	a, (hl)
      000F17 28 5B                 3957 	jr	Z, 00107$
                                   3958 ;src/misc/inventory.c:90: list->size++;
      000F19 F8 08                 3959 	ldhl	sp,	#8
      000F1B 7E                    3960 	ld	a, (hl)
      000F1C F8 00                 3961 	ldhl	sp,	#0
      000F1E 77                    3962 	ld	(hl), a
      000F1F F8 09                 3963 	ldhl	sp,	#9
      000F21 7E                    3964 	ld	a, (hl)
      000F22 F8 01                 3965 	ldhl	sp,	#1
      000F24 77                    3966 	ld	(hl), a
      000F25 D1                    3967 	pop	de
      000F26 D5                    3968 	push	de
      000F27 1A                    3969 	ld	a, (de)
      000F28 4F                    3970 	ld	c, a
      000F29 0C                    3971 	inc	c
      000F2A E1                    3972 	pop	hl
      000F2B E5                    3973 	push	hl
      000F2C 71                    3974 	ld	(hl), c
                                   3975 ;src/misc/inventory.c:91: item->next = 0;
      000F2D F8 0A                 3976 	ldhl	sp,	#10
      000F2F 2A                    3977 	ld	a, (hl+)
      000F30 4F                    3978 	ld	c, a
      000F31 46                    3979 	ld	b, (hl)
      000F32 21 07 00              3980 	ld	hl, #0x0007
      000F35 09                    3981 	add	hl, bc
      000F36 AF                    3982 	xor	a, a
      000F37 22                    3983 	ld	(hl+), a
      000F38 77                    3984 	ld	(hl), a
                                   3985 ;src/misc/inventory.c:92: if (list->last) list->last->next = item; else list->first = item;
      000F39 D1                    3986 	pop	de
      000F3A D5                    3987 	push	de
      000F3B 21 03 00              3988 	ld	hl, #0x0003
      000F3E 19                    3989 	add	hl, de
      000F3F E5                    3990 	push	hl
      000F40 7D                    3991 	ld	a, l
      000F41 F8 04                 3992 	ldhl	sp,	#4
      000F43 77                    3993 	ld	(hl), a
      000F44 E1                    3994 	pop	hl
      000F45 7C                    3995 	ld	a, h
      000F46 F8 03                 3996 	ldhl	sp,	#3
      000F48 32                    3997 	ld	(hl-), a
      000F49 2A                    3998 	ld	a, (hl+)
      000F4A 5F                    3999 	ld	e, a
      000F4B 2A                    4000 	ld	a, (hl+)
      000F4C 57                    4001 	ld	d, a
      000F4D 1A                    4002 	ld	a, (de)
      000F4E 22                    4003 	ld	(hl+), a
      000F4F 13                    4004 	inc	de
      000F50 1A                    4005 	ld	a, (de)
      000F51 77                    4006 	ld	(hl), a
      000F52 3A                    4007 	ld	a, (hl-)
      000F53 B6                    4008 	or	a, (hl)
      000F54 28 10                 4009 	jr	Z, 00105$
      000F56 2A                    4010 	ld	a, (hl+)
      000F57 5F                    4011 	ld	e, a
      000F58 56                    4012 	ld	d, (hl)
      000F59 21 07 00              4013 	ld	hl, #0x0007
      000F5C 19                    4014 	add	hl, de
      000F5D 5D                    4015 	ld	e, l
      000F5E 54                    4016 	ld	d, h
      000F5F 79                    4017 	ld	a, c
      000F60 12                    4018 	ld	(de), a
      000F61 13                    4019 	inc	de
      000F62 78                    4020 	ld	a, b
      000F63 12                    4021 	ld	(de), a
      000F64 18 06                 4022 	jr	00106$
      000F66                       4023 00105$:
      000F66 E1                    4024 	pop	hl
      000F67 E5                    4025 	push	hl
      000F68 23                    4026 	inc	hl
      000F69 79                    4027 	ld	a, c
      000F6A 22                    4028 	ld	(hl+), a
      000F6B 70                    4029 	ld	(hl), b
      000F6C                       4030 00106$:
                                   4031 ;src/misc/inventory.c:93: list->last = item;
      000F6C F8 02                 4032 	ldhl	sp,	#2
      000F6E 2A                    4033 	ld	a,	(hl+)
      000F6F 66                    4034 	ld	h, (hl)
      000F70 6F                    4035 	ld	l, a
      000F71 79                    4036 	ld	a, c
      000F72 22                    4037 	ld	(hl+), a
      000F73 70                    4038 	ld	(hl), b
      000F74                       4039 00107$:
                                   4040 ;src/misc/inventory.c:94: }
      000F74 E8 06                 4041 	add	sp, #6
      000F76 C9                    4042 	ret
                                   4043 ;src/misc/inventory.c:95: game_item * pop_by_id(items_list * list, const UBYTE id) {
                                   4044 ;	---------------------------------
                                   4045 ; Function pop_by_id
                                   4046 ; ---------------------------------
      000F77                       4047 _pop_by_id::
      000F77 E8 FB                 4048 	add	sp, #-5
                                   4049 ;src/misc/inventory.c:96: if (!list) return 0;
      000F79 F8 08                 4050 	ldhl	sp,	#8
      000F7B 3A                    4051 	ld	a, (hl-)
      000F7C B6                    4052 	or	a, (hl)
      000F7D 20 06                 4053 	jr	NZ, 00102$
      000F7F 11 00 00              4054 	ld	de, #0x0000
      000F82 C3r3Dr10              4055 	jp	00113$
      000F85                       4056 00102$:
                                   4057 ;src/misc/inventory.c:97: __temp_game_item2 = 0;
      000F85 AF                    4058 	xor	a, a
      000F86 21rCCr02              4059 	ld	hl, #___temp_game_item2
      000F89 22                    4060 	ld	(hl+), a
      000F8A 77                    4061 	ld	(hl), a
                                   4062 ;src/misc/inventory.c:98: __temp_game_item = list->first;
      000F8B F8 07                 4063 	ldhl	sp,	#7
      000F8D 2A                    4064 	ld	a, (hl+)
      000F8E 4F                    4065 	ld	c, a
      000F8F 46                    4066 	ld	b, (hl)
      000F90 69                    4067 	ld	l, c
      000F91 60                    4068 	ld	h, b
      000F92 23                    4069 	inc	hl
      000F93 E5                    4070 	push	hl
      000F94 7D                    4071 	ld	a, l
      000F95 F8 03                 4072 	ldhl	sp,	#3
      000F97 77                    4073 	ld	(hl), a
      000F98 E1                    4074 	pop	hl
      000F99 7C                    4075 	ld	a, h
      000F9A F8 02                 4076 	ldhl	sp,	#2
      000F9C 32                    4077 	ld	(hl-), a
      000F9D 2A                    4078 	ld	a, (hl+)
      000F9E 5F                    4079 	ld	e, a
      000F9F 56                    4080 	ld	d, (hl)
      000FA0 1A                    4081 	ld	a, (de)
      000FA1 21rCAr02              4082 	ld	hl, #___temp_game_item
      000FA4 22                    4083 	ld	(hl+), a
      000FA5 13                    4084 	inc	de
      000FA6 1A                    4085 	ld	a, (de)
      000FA7 77                    4086 	ld	(hl), a
                                   4087 ;src/misc/inventory.c:99: while (__temp_game_item) {
      000FA8                       4088 00110$:
      000FA8 21rCBr02              4089 	ld	hl, #___temp_game_item + 1
      000FAB 3A                    4090 	ld	a, (hl-)
      000FAC B6                    4091 	or	a, (hl)
      000FAD CAr3Ar10              4092 	jp	Z, 00112$
                                   4093 ;src/misc/inventory.c:100: if (__temp_game_item->id == id) {
      000FB0 2A                    4094 	ld	a, (hl+)
      000FB1 5F                    4095 	ld	e, a
      000FB2 56                    4096 	ld	d, (hl)
      000FB3 1A                    4097 	ld	a, (de)
      000FB4 F8 00                 4098 	ldhl	sp,	#0
      000FB6 77                    4099 	ld	(hl), a
                                   4100 ;src/misc/inventory.c:101: if (__temp_game_item2) __temp_game_item2->next = __temp_game_item->next; else list->first = __temp_game_item->next;
      000FB7 D5                    4101 	push	de
      000FB8 21 07 00              4102 	ld	hl, #0x0007
      000FBB 19                    4103 	add	hl, de
      000FBC D1                    4104 	pop	de
      000FBD E5                    4105 	push	hl
      000FBE 7D                    4106 	ld	a, l
      000FBF F8 05                 4107 	ldhl	sp,	#5
      000FC1 77                    4108 	ld	(hl), a
      000FC2 E1                    4109 	pop	hl
      000FC3 7C                    4110 	ld	a, h
      000FC4 F8 04                 4111 	ldhl	sp,	#4
      000FC6 77                    4112 	ld	(hl), a
                                   4113 ;src/misc/inventory.c:100: if (__temp_game_item->id == id) {
      000FC7 F8 09                 4114 	ldhl	sp,	#9
      000FC9 7E                    4115 	ld	a, (hl)
      000FCA F8 00                 4116 	ldhl	sp,	#0
      000FCC 96                    4117 	sub	a, (hl)
      000FCD 20 55                 4118 	jr	NZ, 00109$
                                   4119 ;src/misc/inventory.c:101: if (__temp_game_item2) __temp_game_item2->next = __temp_game_item->next; else list->first = __temp_game_item->next;
      000FCF F8 03                 4120 	ldhl	sp,#3
      000FD1 2A                    4121 	ld	a, (hl+)
      000FD2 5F                    4122 	ld	e, a
      000FD3 3A                    4123 	ld	a, (hl-)
      000FD4 57                    4124 	ld	d, a
      000FD5 1A                    4125 	ld	a, (de)
      000FD6 22                    4126 	ld	(hl+), a
      000FD7 13                    4127 	inc	de
      000FD8 1A                    4128 	ld	a, (de)
      000FD9 77                    4129 	ld	(hl), a
      000FDA 21rCDr02              4130 	ld	hl, #___temp_game_item2 + 1
      000FDD 3A                    4131 	ld	a, (hl-)
      000FDE B6                    4132 	or	a, (hl)
      000FDF 28 11                 4133 	jr	Z, 00104$
      000FE1 2A                    4134 	ld	a, (hl+)
      000FE2 56                    4135 	ld	d, (hl)
      000FE3 C6 07                 4136 	add	a, #0x07
      000FE5 5F                    4137 	ld	e, a
      000FE6 30 01                 4138 	jr	NC, 00147$
      000FE8 14                    4139 	inc	d
      000FE9                       4140 00147$:
      000FE9 F8 03                 4141 	ldhl	sp,	#3
      000FEB 2A                    4142 	ld	a, (hl+)
      000FEC 12                    4143 	ld	(de), a
      000FED 13                    4144 	inc	de
      000FEE 7E                    4145 	ld	a, (hl)
      000FEF 12                    4146 	ld	(de), a
      000FF0 18 0B                 4147 	jr	00105$
      000FF2                       4148 00104$:
      000FF2 F8 01                 4149 	ldhl	sp,#1
      000FF4 2A                    4150 	ld	a, (hl+)
      000FF5 5F                    4151 	ld	e, a
      000FF6 2A                    4152 	ld	a, (hl+)
      000FF7 57                    4153 	ld	d, a
      000FF8 2A                    4154 	ld	a, (hl+)
      000FF9 12                    4155 	ld	(de), a
      000FFA 13                    4156 	inc	de
      000FFB 7E                    4157 	ld	a, (hl)
      000FFC 12                    4158 	ld	(de), a
      000FFD                       4159 00105$:
                                   4160 ;src/misc/inventory.c:102: if (!__temp_game_item->next) list->last = __temp_game_item2;
      000FFD 21rCAr02              4161 	ld	hl, #___temp_game_item
      001000 2A                    4162 	ld	a, (hl+)
      001001 5F                    4163 	ld	e, a
      001002 56                    4164 	ld	d, (hl)
      001003 21 07 00              4165 	ld	hl, #0x0007
      001006 19                    4166 	add	hl, de
      001007 2A                    4167 	ld	a, (hl+)
      001008 6E                    4168 	ld	l, (hl)
                                   4169 ;	spillPairReg hl
      001009 B5                    4170 	or	a, l
      00100A 20 0D                 4171 	jr	NZ, 00107$
      00100C 59                    4172 	ld	e, c
      00100D 50                    4173 	ld	d, b
      00100E 13                    4174 	inc	de
      00100F 13                    4175 	inc	de
      001010 13                    4176 	inc	de
      001011 21rCCr02              4177 	ld	hl, #___temp_game_item2
      001014 2A                    4178 	ld	a, (hl+)
      001015 12                    4179 	ld	(de), a
      001016 13                    4180 	inc	de
      001017 7E                    4181 	ld	a, (hl)
      001018 12                    4182 	ld	(de), a
      001019                       4183 00107$:
                                   4184 ;src/misc/inventory.c:103: list->size--;
      001019 0A                    4185 	ld	a, (bc)
      00101A 3D                    4186 	dec	a
      00101B 02                    4187 	ld	(bc), a
                                   4188 ;src/misc/inventory.c:104: return __temp_game_item;
      00101C 21rCAr02              4189 	ld	hl, #___temp_game_item
      00101F 2A                    4190 	ld	a, (hl+)
      001020 5F                    4191 	ld	e, a
      001021 56                    4192 	ld	d, (hl)
      001022 18 19                 4193 	jr	00113$
      001024                       4194 00109$:
                                   4195 ;src/misc/inventory.c:106: __temp_game_item2 = __temp_game_item;
      001024 21rCCr02              4196 	ld	hl, #___temp_game_item2
      001027 7B                    4197 	ld	a, e
      001028 22                    4198 	ld	(hl+), a
      001029 72                    4199 	ld	(hl), d
                                   4200 ;src/misc/inventory.c:107: __temp_game_item = __temp_game_item->next;
      00102A F8 03                 4201 	ldhl	sp,#3
      00102C 2A                    4202 	ld	a, (hl+)
      00102D 5F                    4203 	ld	e, a
      00102E 56                    4204 	ld	d, (hl)
      00102F 1A                    4205 	ld	a, (de)
      001030 21rCAr02              4206 	ld	hl, #___temp_game_item
      001033 22                    4207 	ld	(hl+), a
      001034 13                    4208 	inc	de
      001035 1A                    4209 	ld	a, (de)
      001036 77                    4210 	ld	(hl), a
      001037 C3rA8r0F              4211 	jp	00110$
      00103A                       4212 00112$:
                                   4213 ;src/misc/inventory.c:109: return 0;
      00103A 11 00 00              4214 	ld	de, #0x0000
      00103D                       4215 00113$:
                                   4216 ;src/misc/inventory.c:110: }
      00103D E8 05                 4217 	add	sp, #5
      00103F C9                    4218 	ret
                                   4219 ;src/misc/inventory.c:111: game_item * find_by_id(items_list * list, const UBYTE id) {
                                   4220 ;	---------------------------------
                                   4221 ; Function find_by_id
                                   4222 ; ---------------------------------
      001040                       4223 _find_by_id::
                                   4224 ;src/misc/inventory.c:112: if (!list) return 0;
      001040 F8 03                 4225 	ldhl	sp,	#3
      001042 3A                    4226 	ld	a, (hl-)
      001043 B6                    4227 	or	a, (hl)
      001044 20 04                 4228 	jr	NZ, 00102$
      001046 11 00 00              4229 	ld	de, #0x0000
      001049 C9                    4230 	ret
      00104A                       4231 00102$:
                                   4232 ;src/misc/inventory.c:113: __temp_game_item = list->first;
      00104A F8 02                 4233 	ldhl	sp,	#2
      00104C 2A                    4234 	ld	a, (hl+)
      00104D 4F                    4235 	ld	c, a
      00104E 46                    4236 	ld	b, (hl)
      00104F 03                    4237 	inc	bc
      001050 59                    4238 	ld	e, c
      001051 50                    4239 	ld	d, b
      001052 1A                    4240 	ld	a, (de)
      001053 21rCAr02              4241 	ld	hl, #___temp_game_item
      001056 22                    4242 	ld	(hl+), a
      001057 13                    4243 	inc	de
      001058 1A                    4244 	ld	a, (de)
      001059 77                    4245 	ld	(hl), a
                                   4246 ;src/misc/inventory.c:114: while (__temp_game_item) {
      00105A                       4247 00105$:
      00105A 21rCBr02              4248 	ld	hl, #___temp_game_item + 1
      00105D 3A                    4249 	ld	a, (hl-)
      00105E B6                    4250 	or	a, (hl)
      00105F 28 22                 4251 	jr	Z, 00107$
                                   4252 ;src/misc/inventory.c:115: if (__temp_game_item->id == id) return __temp_game_item;
      001061 2A                    4253 	ld	a, (hl+)
      001062 4F                    4254 	ld	c, a
      001063 46                    4255 	ld	b, (hl)
      001064 0A                    4256 	ld	a, (bc)
      001065 5F                    4257 	ld	e, a
      001066 F8 04                 4258 	ldhl	sp,	#4
      001068 7E                    4259 	ld	a, (hl)
      001069 93                    4260 	sub	a, e
      00106A 20 07                 4261 	jr	NZ, 00104$
      00106C 21rCAr02              4262 	ld	hl, #___temp_game_item
      00106F 2A                    4263 	ld	a, (hl+)
      001070 5F                    4264 	ld	e, a
      001071 56                    4265 	ld	d, (hl)
      001072 C9                    4266 	ret
      001073                       4267 00104$:
                                   4268 ;src/misc/inventory.c:116: __temp_game_item = __temp_game_item->next;
      001073 21 07 00              4269 	ld	hl, #0x0007
      001076 09                    4270 	add	hl, bc
      001077 5D                    4271 	ld	e, l
      001078 54                    4272 	ld	d, h
      001079 1A                    4273 	ld	a, (de)
      00107A 21rCAr02              4274 	ld	hl, #___temp_game_item
      00107D 22                    4275 	ld	(hl+), a
      00107E 13                    4276 	inc	de
      00107F 1A                    4277 	ld	a, (de)
      001080 77                    4278 	ld	(hl), a
      001081 18 D7                 4279 	jr	00105$
      001083                       4280 00107$:
                                   4281 ;src/misc/inventory.c:118: return 0;
      001083 11 00 00              4282 	ld	de, #0x0000
                                   4283 ;src/misc/inventory.c:119: }
      001086 C9                    4284 	ret
                                   4285 ;src/misc/inventory.c:120: game_item * find_by_room_xy(items_list * list, const UBYTE row, const UBYTE col, const UBYTE x, const UBYTE y) {
                                   4286 ;	---------------------------------
                                   4287 ; Function find_by_room_xy
                                   4288 ; ---------------------------------
      001087                       4289 _find_by_room_xy::
      001087 E8 FC                 4290 	add	sp, #-4
                                   4291 ;src/misc/inventory.c:121: if (!list) return 0;
      001089 F8 07                 4292 	ldhl	sp,	#7
      00108B 3A                    4293 	ld	a, (hl-)
      00108C B6                    4294 	or	a, (hl)
      00108D 20 06                 4295 	jr	NZ, 00102$
      00108F 11 00 00              4296 	ld	de, #0x0000
      001092 C3r94r11              4297 	jp	00114$
      001095                       4298 00102$:
                                   4299 ;src/misc/inventory.c:122: __temp_game_item2 = 0;
      001095 AF                    4300 	xor	a, a
      001096 21rCCr02              4301 	ld	hl, #___temp_game_item2
      001099 22                    4302 	ld	(hl+), a
      00109A 77                    4303 	ld	(hl), a
                                   4304 ;src/misc/inventory.c:123: __temp_game_item = list->first;
      00109B F8 06                 4305 	ldhl	sp,	#6
      00109D 2A                    4306 	ld	a, (hl+)
      00109E 4F                    4307 	ld	c, a
      00109F 46                    4308 	ld	b, (hl)
      0010A0 03                    4309 	inc	bc
      0010A1 59                    4310 	ld	e, c
      0010A2 50                    4311 	ld	d, b
      0010A3 1A                    4312 	ld	a, (de)
      0010A4 21rCAr02              4313 	ld	hl, #___temp_game_item
      0010A7 22                    4314 	ld	(hl+), a
      0010A8 13                    4315 	inc	de
      0010A9 1A                    4316 	ld	a, (de)
      0010AA 77                    4317 	ld	(hl), a
                                   4318 ;src/misc/inventory.c:124: while (__temp_game_item) {
      0010AB                       4319 00111$:
      0010AB 21rCBr02              4320 	ld	hl, #___temp_game_item + 1
      0010AE 3A                    4321 	ld	a, (hl-)
      0010AF B6                    4322 	or	a, (hl)
      0010B0 CAr8Er11              4323 	jp	Z, 00113$
                                   4324 ;src/misc/inventory.c:125: if ((__temp_game_item->room_row == row) && (__temp_game_item->room_col == col)) {
      0010B3 7E                    4325 	ld	a, (hl)
      0010B4 F8 00                 4326 	ldhl	sp,	#0
      0010B6 77                    4327 	ld	(hl), a
      0010B7 FArCBr02              4328 	ld	a, (#___temp_game_item + 1)
      0010BA F8 01                 4329 	ldhl	sp,	#1
      0010BC 77                    4330 	ld	(hl), a
      0010BD C1                    4331 	pop	bc
      0010BE C5                    4332 	push	bc
      0010BF 03                    4333 	inc	bc
      0010C0 0A                    4334 	ld	a, (bc)
      0010C1 4F                    4335 	ld	c, a
      0010C2 F8 08                 4336 	ldhl	sp,	#8
      0010C4 7E                    4337 	ld	a, (hl)
      0010C5 91                    4338 	sub	a, c
      0010C6 C2r79r11              4339 	jp	NZ,00109$
      0010C9 C1                    4340 	pop	bc
      0010CA C5                    4341 	push	bc
      0010CB 03                    4342 	inc	bc
      0010CC 03                    4343 	inc	bc
      0010CD 0A                    4344 	ld	a, (bc)
      0010CE 4F                    4345 	ld	c, a
      0010CF F8 09                 4346 	ldhl	sp,	#9
      0010D1 7E                    4347 	ld	a, (hl)
      0010D2 91                    4348 	sub	a, c
      0010D3 C2r79r11              4349 	jp	NZ,00109$
                                   4350 ;src/misc/inventory.c:126: if ((__temp_game_item->x <= (x + 2)) && ((__temp_game_item->x + 1) >= x) &&
      0010D6 C1                    4351 	pop	bc
      0010D7 C5                    4352 	push	bc
      0010D8 03                    4353 	inc	bc
      0010D9 03                    4354 	inc	bc
      0010DA 03                    4355 	inc	bc
      0010DB 0A                    4356 	ld	a, (bc)
      0010DC 4F                    4357 	ld	c, a
      0010DD F8 0A                 4358 	ldhl	sp,	#10
      0010DF 7E                    4359 	ld	a, (hl)
      0010E0 F8 02                 4360 	ldhl	sp,	#2
      0010E2 22                    4361 	ld	(hl+), a
      0010E3 AF                    4362 	xor	a, a
      0010E4 32                    4363 	ld	(hl-), a
      0010E5 2A                    4364 	ld	a, (hl+)
      0010E6 66                    4365 	ld	h, (hl)
                                   4366 ;	spillPairReg hl
                                   4367 ;	spillPairReg hl
      0010E7 6F                    4368 	ld	l, a
                                   4369 ;	spillPairReg hl
                                   4370 ;	spillPairReg hl
      0010E8 23                    4371 	inc	hl
      0010E9 23                    4372 	inc	hl
      0010EA 06 00                 4373 	ld	b, #0x00
      0010EC 58                    4374 	ld	e, b
      0010ED 54                    4375 	ld	d, h
      0010EE 7D                    4376 	ld	a, l
      0010EF 91                    4377 	sub	a, c
      0010F0 7C                    4378 	ld	a, h
      0010F1 98                    4379 	sbc	a, b
      0010F2 CB 7B                 4380 	bit	7, e
      0010F4 28 07                 4381 	jr	Z, 00165$
      0010F6 CB 7A                 4382 	bit	7, d
      0010F8 20 08                 4383 	jr	NZ, 00166$
      0010FA BF                    4384 	cp	a, a
      0010FB 18 05                 4385 	jr	00166$
      0010FD                       4386 00165$:
      0010FD CB 7A                 4387 	bit	7, d
      0010FF 28 01                 4388 	jr	Z, 00166$
      001101 37                    4389 	scf
      001102                       4390 00166$:
      001102 38 75                 4391 	jr	C, 00109$
      001104 03                    4392 	inc	bc
      001105 F8 02                 4393 	ldhl	sp,	#2
      001107 79                    4394 	ld	a, c
      001108 96                    4395 	sub	a, (hl)
      001109 23                    4396 	inc	hl
      00110A 78                    4397 	ld	a, b
      00110B 9E                    4398 	sbc	a, (hl)
      00110C 78                    4399 	ld	a, b
      00110D 57                    4400 	ld	d, a
      00110E CB 7E                 4401 	bit	7, (hl)
      001110 28 07                 4402 	jr	Z, 00167$
      001112 CB 7A                 4403 	bit	7, d
      001114 20 08                 4404 	jr	NZ, 00168$
      001116 BF                    4405 	cp	a, a
      001117 18 05                 4406 	jr	00168$
      001119                       4407 00167$:
      001119 CB 7A                 4408 	bit	7, d
      00111B 28 01                 4409 	jr	Z, 00168$
      00111D 37                    4410 	scf
      00111E                       4411 00168$:
      00111E 38 59                 4412 	jr	C, 00109$
                                   4413 ;src/misc/inventory.c:127: (__temp_game_item->y <= (y + 2)) && ((__temp_game_item->y + 1) >= y)) {
      001120 D1                    4414 	pop	de
      001121 D5                    4415 	push	de
      001122 21 04 00              4416 	ld	hl, #0x0004
      001125 19                    4417 	add	hl, de
      001126 4D                    4418 	ld	c, l
      001127 44                    4419 	ld	b, h
      001128 0A                    4420 	ld	a, (bc)
      001129 4F                    4421 	ld	c, a
      00112A F8 0B                 4422 	ldhl	sp,	#11
      00112C 7E                    4423 	ld	a, (hl)
      00112D F8 02                 4424 	ldhl	sp,	#2
      00112F 22                    4425 	ld	(hl+), a
      001130 AF                    4426 	xor	a, a
      001131 32                    4427 	ld	(hl-), a
      001132 2A                    4428 	ld	a, (hl+)
      001133 66                    4429 	ld	h, (hl)
                                   4430 ;	spillPairReg hl
                                   4431 ;	spillPairReg hl
      001134 6F                    4432 	ld	l, a
                                   4433 ;	spillPairReg hl
                                   4434 ;	spillPairReg hl
      001135 23                    4435 	inc	hl
      001136 23                    4436 	inc	hl
      001137 06 00                 4437 	ld	b, #0x00
      001139 58                    4438 	ld	e, b
      00113A 54                    4439 	ld	d, h
      00113B 7D                    4440 	ld	a, l
      00113C 91                    4441 	sub	a, c
      00113D 7C                    4442 	ld	a, h
      00113E 98                    4443 	sbc	a, b
      00113F CB 7B                 4444 	bit	7, e
      001141 28 07                 4445 	jr	Z, 00169$
      001143 CB 7A                 4446 	bit	7, d
      001145 20 08                 4447 	jr	NZ, 00170$
      001147 BF                    4448 	cp	a, a
      001148 18 05                 4449 	jr	00170$
      00114A                       4450 00169$:
      00114A CB 7A                 4451 	bit	7, d
      00114C 28 01                 4452 	jr	Z, 00170$
      00114E 37                    4453 	scf
      00114F                       4454 00170$:
      00114F 38 28                 4455 	jr	C, 00109$
      001151 03                    4456 	inc	bc
      001152 F8 02                 4457 	ldhl	sp,	#2
      001154 79                    4458 	ld	a, c
      001155 96                    4459 	sub	a, (hl)
      001156 23                    4460 	inc	hl
      001157 78                    4461 	ld	a, b
      001158 9E                    4462 	sbc	a, (hl)
      001159 78                    4463 	ld	a, b
      00115A 57                    4464 	ld	d, a
      00115B CB 7E                 4465 	bit	7, (hl)
      00115D 28 07                 4466 	jr	Z, 00171$
      00115F CB 7A                 4467 	bit	7, d
      001161 20 08                 4468 	jr	NZ, 00172$
      001163 BF                    4469 	cp	a, a
      001164 18 05                 4470 	jr	00172$
      001166                       4471 00171$:
      001166 CB 7A                 4472 	bit	7, d
      001168 28 01                 4473 	jr	Z, 00172$
      00116A 37                    4474 	scf
      00116B                       4475 00172$:
      00116B 38 0C                 4476 	jr	C, 00109$
                                   4477 ;src/misc/inventory.c:128: __temp_game_item2 = __temp_game_item;
      00116D F8 00                 4478 	ldhl	sp,	#0
      00116F 7E                    4479 	ld	a, (hl)
      001170 EArCCr02              4480 	ld	(#___temp_game_item2),a
      001173 F8 01                 4481 	ldhl	sp,	#1
      001175 7E                    4482 	ld	a, (hl)
      001176 EArCDr02              4483 	ld	(#___temp_game_item2 + 1),a
      001179                       4484 00109$:
                                   4485 ;src/misc/inventory.c:131: __temp_game_item = __temp_game_item->next;
      001179 D1                    4486 	pop	de
      00117A D5                    4487 	push	de
      00117B 21 07 00              4488 	ld	hl, #0x0007
      00117E 19                    4489 	add	hl, de
      00117F 4D                    4490 	ld	c, l
      001180 44                    4491 	ld	b, h
      001181 59                    4492 	ld	e, c
      001182 50                    4493 	ld	d, b
      001183 1A                    4494 	ld	a, (de)
      001184 21rCAr02              4495 	ld	hl, #___temp_game_item
      001187 22                    4496 	ld	(hl+), a
      001188 13                    4497 	inc	de
      001189 1A                    4498 	ld	a, (de)
      00118A 77                    4499 	ld	(hl), a
      00118B C3rABr10              4500 	jp	00111$
      00118E                       4501 00113$:
                                   4502 ;src/misc/inventory.c:133: return __temp_game_item2;
      00118E 21rCCr02              4503 	ld	hl, #___temp_game_item2
      001191 2A                    4504 	ld	a, (hl+)
      001192 5F                    4505 	ld	e, a
      001193 56                    4506 	ld	d, (hl)
      001194                       4507 00114$:
                                   4508 ;src/misc/inventory.c:134: }
      001194 E8 04                 4509 	add	sp, #4
      001196 C9                    4510 	ret
                                   4511 ;src/misc/inventory.c:137: void init_game_items() {
                                   4512 ;	---------------------------------
                                   4513 ; Function init_game_items
                                   4514 ; ---------------------------------
      001197                       4515 _init_game_items::
                                   4516 ;src/misc/inventory.c:138: game_item_list.first = game_item_list.last = game_item_list.size = 0;
      001197 21rC5r02              4517 	ld	hl, #_game_item_list
      00119A 36 00                 4518 	ld	(hl), #0x00
      00119C 21rC8r02              4519 	ld	hl, #(_game_item_list + 3)
      00119F AF                    4520 	xor	a, a
      0011A0 22                    4521 	ld	(hl+), a
      0011A1 77                    4522 	ld	(hl), a
      0011A2 21rC6r02              4523 	ld	hl, #(_game_item_list + 1)
      0011A5 AF                    4524 	xor	a, a
      0011A6 22                    4525 	ld	(hl+), a
      0011A7 77                    4526 	ld	(hl), a
                                   4527 ;src/misc/inventory.c:139: for (__temp_i = 0; __temp_i < GAME_ITEMS_COUNT; __temp_i++) {
      0011A8 21r0Br02              4528 	ld	hl, #___temp_i
      0011AB 36 00                 4529 	ld	(hl), #0x00
      0011AD                       4530 00102$:
                                   4531 ;src/misc/inventory.c:140: __temp_game_item = &game_items[__temp_i];
      0011AD 21r0Br02              4532 	ld	hl, #___temp_i
      0011B0 4E                    4533 	ld	c, (hl)
      0011B1 06 00                 4534 	ld	b, #0x00
      0011B3 69                    4535 	ld	l, c
      0011B4 60                    4536 	ld	h, b
      0011B5 29                    4537 	add	hl, hl
      0011B6 29                    4538 	add	hl, hl
      0011B7 29                    4539 	add	hl, hl
      0011B8 09                    4540 	add	hl, bc
      0011B9 01r47r02              4541 	ld	bc,#_game_items
      0011BC 09                    4542 	add	hl,bc
      0011BD 4D                    4543 	ld	c, l
      0011BE 7C                    4544 	ld	a, h
      0011BF 21rCAr02              4545 	ld	hl, #___temp_game_item
      0011C2 71                    4546 	ld	(hl), c
      0011C3 23                    4547 	inc	hl
      0011C4 77                    4548 	ld	(hl), a
                                   4549 ;src/misc/inventory.c:141: __temp_game_item_desc = all_items_desc[__temp_i];
      0011C5 21r0Br02              4550 	ld	hl, #___temp_i
      0011C8 6E                    4551 	ld	l, (hl)
                                   4552 ;	spillPairReg hl
                                   4553 ;	spillPairReg hl
      0011C9 26 00                 4554 	ld	h, #0x00
                                   4555 ;	spillPairReg hl
                                   4556 ;	spillPairReg hl
      0011CB 29                    4557 	add	hl, hl
      0011CC 11r26r01              4558 	ld	de, #_all_items_desc
      0011CF 19                    4559 	add	hl, de
      0011D0 5D                    4560 	ld	e, l
      0011D1 54                    4561 	ld	d, h
      0011D2 1A                    4562 	ld	a, (de)
      0011D3 21rD0r02              4563 	ld	hl, #___temp_game_item_desc
      0011D6 22                    4564 	ld	(hl+), a
      0011D7 13                    4565 	inc	de
      0011D8 1A                    4566 	ld	a, (de)
      0011D9 77                    4567 	ld	(hl), a
                                   4568 ;src/misc/inventory.c:143: __temp_game_item->id = __temp_game_item_desc->id;
      0011DA 21rCAr02              4569 	ld	hl, #___temp_game_item
      0011DD 2A                    4570 	ld	a, (hl+)
      0011DE 4F                    4571 	ld	c, a
      0011DF 46                    4572 	ld	b, (hl)
      0011E0 21rD0r02              4573 	ld	hl, #___temp_game_item_desc
      0011E3 2A                    4574 	ld	a, (hl+)
      0011E4 5F                    4575 	ld	e, a
      0011E5 56                    4576 	ld	d, (hl)
      0011E6 1A                    4577 	ld	a, (de)
      0011E7 02                    4578 	ld	(bc), a
                                   4579 ;src/misc/inventory.c:145: __temp_game_item->room_row = __temp_game_item_desc->room_row; 
      0011E8 21rCAr02              4580 	ld	hl, #___temp_game_item
      0011EB 2A                    4581 	ld	a, (hl+)
      0011EC 4F                    4582 	ld	c, a
      0011ED 46                    4583 	ld	b, (hl)
      0011EE 03                    4584 	inc	bc
      0011EF 21rD0r02              4585 	ld	hl, #___temp_game_item_desc
      0011F2 2A                    4586 	ld	a, (hl+)
      0011F3 5F                    4587 	ld	e, a
      0011F4 56                    4588 	ld	d, (hl)
      0011F5 13                    4589 	inc	de
      0011F6 1A                    4590 	ld	a, (de)
      0011F7 02                    4591 	ld	(bc), a
                                   4592 ;src/misc/inventory.c:146: __temp_game_item->room_col = __temp_game_item_desc->room_col; 
      0011F8 21rCAr02              4593 	ld	hl, #___temp_game_item
      0011FB 2A                    4594 	ld	a, (hl+)
      0011FC 4F                    4595 	ld	c, a
      0011FD 46                    4596 	ld	b, (hl)
      0011FE 03                    4597 	inc	bc
      0011FF 03                    4598 	inc	bc
      001200 21rD0r02              4599 	ld	hl, #___temp_game_item_desc
      001203 2A                    4600 	ld	a, (hl+)
      001204 5F                    4601 	ld	e, a
      001205 56                    4602 	ld	d, (hl)
      001206 13                    4603 	inc	de
      001207 13                    4604 	inc	de
      001208 1A                    4605 	ld	a, (de)
      001209 02                    4606 	ld	(bc), a
                                   4607 ;src/misc/inventory.c:147: __temp_game_item->x = __temp_game_item_desc->x;
      00120A 21rCAr02              4608 	ld	hl, #___temp_game_item
      00120D 2A                    4609 	ld	a, (hl+)
      00120E 4F                    4610 	ld	c, a
      00120F 46                    4611 	ld	b, (hl)
      001210 03                    4612 	inc	bc
      001211 03                    4613 	inc	bc
      001212 03                    4614 	inc	bc
      001213 21rD0r02              4615 	ld	hl, #___temp_game_item_desc
      001216 2A                    4616 	ld	a, (hl+)
      001217 5F                    4617 	ld	e, a
      001218 56                    4618 	ld	d, (hl)
      001219 13                    4619 	inc	de
      00121A 13                    4620 	inc	de
      00121B 13                    4621 	inc	de
      00121C 1A                    4622 	ld	a, (de)
      00121D 02                    4623 	ld	(bc), a
                                   4624 ;src/misc/inventory.c:148: __temp_game_item->y = __temp_game_item_desc->y;
      00121E 21rCAr02              4625 	ld	hl, #___temp_game_item
      001221 2A                    4626 	ld	a, (hl+)
      001222 4F                    4627 	ld	c, a
      001223 46                    4628 	ld	b, (hl)
      001224 03                    4629 	inc	bc
      001225 03                    4630 	inc	bc
      001226 03                    4631 	inc	bc
      001227 03                    4632 	inc	bc
      001228 21rD0r02              4633 	ld	hl, #___temp_game_item_desc
      00122B 2A                    4634 	ld	a, (hl+)
      00122C 5F                    4635 	ld	e, a
      00122D 56                    4636 	ld	d, (hl)
      00122E 13                    4637 	inc	de
      00122F 13                    4638 	inc	de
      001230 13                    4639 	inc	de
      001231 13                    4640 	inc	de
      001232 1A                    4641 	ld	a, (de)
      001233 02                    4642 	ld	(bc), a
                                   4643 ;src/misc/inventory.c:149: __temp_game_item->desc = __temp_game_item_desc;
      001234 21rCAr02              4644 	ld	hl, #___temp_game_item
      001237 2A                    4645 	ld	a, (hl+)
      001238 4F                    4646 	ld	c, a
      001239 46                    4647 	ld	b, (hl)
      00123A 03                    4648 	inc	bc
      00123B 03                    4649 	inc	bc
      00123C 03                    4650 	inc	bc
      00123D 03                    4651 	inc	bc
      00123E 03                    4652 	inc	bc
      00123F 21rD0r02              4653 	ld	hl, #___temp_game_item_desc
      001242 2A                    4654 	ld	a, (hl+)
      001243 02                    4655 	ld	(bc), a
      001244 03                    4656 	inc	bc
      001245 7E                    4657 	ld	a, (hl)
      001246 02                    4658 	ld	(bc), a
                                   4659 ;src/misc/inventory.c:151: push_last((items_list *)&game_item_list, __temp_game_item);
      001247 21rCAr02              4660 	ld	hl, #___temp_game_item
      00124A 2A                    4661 	ld	a, (hl+)
      00124B 5F                    4662 	ld	e, a
      00124C 56                    4663 	ld	d, (hl)
      00124D D5                    4664 	push	de
      00124E 11rC5r02              4665 	ld	de, #_game_item_list
      001251 D5                    4666 	push	de
      001252 CDr0Cr0F              4667 	call	_push_last
      001255 E8 04                 4668 	add	sp, #4
                                   4669 ;src/misc/inventory.c:139: for (__temp_i = 0; __temp_i < GAME_ITEMS_COUNT; __temp_i++) {
      001257 21r0Br02              4670 	ld	hl, #___temp_i
      00125A 34                    4671 	inc	(hl)
      00125B 7E                    4672 	ld	a, (hl)
      00125C D6 0E                 4673 	sub	a, #0x0e
      00125E DArADr11              4674 	jp	C, 00102$
                                   4675 ;src/misc/inventory.c:153: inventory_item_list.first = inventory_item_list.last = inventory_item_list.size = 0;
      001261 21rB6r03              4676 	ld	hl, #_inventory_item_list
      001264 36 00                 4677 	ld	(hl), #0x00
      001266 21rB9r03              4678 	ld	hl, #(_inventory_item_list + 3)
      001269 AF                    4679 	xor	a, a
      00126A 22                    4680 	ld	(hl+), a
      00126B 77                    4681 	ld	(hl), a
      00126C 21rB7r03              4682 	ld	hl, #(_inventory_item_list + 1)
      00126F AF                    4683 	xor	a, a
      001270 22                    4684 	ld	(hl+), a
      001271 77                    4685 	ld	(hl), a
                                   4686 ;src/misc/inventory.c:154: item_stack.first = item_stack.last = item_stack.size = 0;
      001272 21rBBr03              4687 	ld	hl, #_item_stack
      001275 36 00                 4688 	ld	(hl), #0x00
      001277 21rBEr03              4689 	ld	hl, #(_item_stack + 3)
      00127A AF                    4690 	xor	a, a
      00127B 22                    4691 	ld	(hl+), a
      00127C 77                    4692 	ld	(hl), a
      00127D 21rBCr03              4693 	ld	hl, #(_item_stack + 1)
      001280 AF                    4694 	xor	a, a
      001281 22                    4695 	ld	(hl+), a
      001282 77                    4696 	ld	(hl), a
                                   4697 ;src/misc/inventory.c:155: }
      001283 C9                    4698 	ret
                                   4699 ;src/misc/room_defaults.c:3: void default_draw() {
                                   4700 ;	---------------------------------
                                   4701 ; Function default_draw
                                   4702 ; ---------------------------------
      001284                       4703 _default_draw::
                                   4704 ;src/misc/room_defaults.c:5: rle_decompress_data(current_room->room_map->rle_data, (UWORD)current_room->room_map->size, coll_buf);
      001284 21r0Er00              4705 	ld	hl, #_current_room
      001287 6E                    4706 	ld	l, (hl)
                                   4707 ;	spillPairReg hl
                                   4708 ;	spillPairReg hl
      001288 FAr0Fr00              4709 	ld	a, (_current_room + 1)
      00128B 67                    4710 	ld	h, a
                                   4711 ;	spillPairReg hl
                                   4712 ;	spillPairReg hl
      00128C 23                    4713 	inc	hl
      00128D 2A                    4714 	ld	a, (hl+)
      00128E 4F                    4715 	ld	c, a
      00128F 46                    4716 	ld	b, (hl)
      001290 69                    4717 	ld	l, c
      001291 60                    4718 	ld	h, b
      001292 2A                    4719 	ld	a,	(hl+)
      001293 66                    4720 	ld	h, (hl)
                                   4721 ;	spillPairReg hl
      001294 6F                    4722 	ld	l, a
                                   4723 ;	spillPairReg hl
                                   4724 ;	spillPairReg hl
      001295 03                    4725 	inc	bc
      001296 03                    4726 	inc	bc
      001297 11r00r00              4727 	ld	de, #_coll_buf
      00129A D5                    4728 	push	de
      00129B E5                    4729 	push	hl
      00129C C5                    4730 	push	bc
      00129D CDr00r00              4731 	call	_rle_decompress_data
      0012A0 E8 06                 4732 	add	sp, #6
                                   4733 ;src/misc/room_defaults.c:6: place_room_items(current_room_y, current_room_x, coll_buf);
      0012A2 11r00r00              4734 	ld	de, #_coll_buf
      0012A5 D5                    4735 	push	de
      0012A6 FAr0Cr00              4736 	ld	a, (#_current_room_x)
      0012A9 67                    4737 	ld	h, a
      0012AA FAr0Dr00              4738 	ld	a, (#_current_room_y)
      0012AD 6F                    4739 	ld	l, a
      0012AE E5                    4740 	push	hl
      0012AF CDrBEr01              4741 	call	_place_room_items
      0012B2 E8 04                 4742 	add	sp, #4
                                   4743 ;src/misc/room_defaults.c:8: set_bkg_tiles(0, 3, room_width, room_height, coll_buf);
      0012B4 11r00r00              4744 	ld	de, #_coll_buf
      0012B7 D5                    4745 	push	de
      0012B8 21 1E 11              4746 	ld	hl, #0x111e
      0012BB E5                    4747 	push	hl
      0012BC 21 00 03              4748 	ld	hl, #0x300
      0012BF E5                    4749 	push	hl
      0012C0 CDr00r00              4750 	call	_set_bkg_tiles
      0012C3 E8 06                 4751 	add	sp, #6
                                   4752 ;src/misc/room_defaults.c:9: }
      0012C5 C9                    4753 	ret
                                   4754 ;src/misc/room_defaults.c:11: UBYTE default_drop(UBYTE id) {
                                   4755 ;	---------------------------------
                                   4756 ; Function default_drop
                                   4757 ; ---------------------------------
      0012C6                       4758 _default_drop::
                                   4759 ;src/misc/room_defaults.c:13: if (id == ID_FIREFLY) {
      0012C6 F8 02                 4760 	ldhl	sp,	#2
      0012C8 7E                    4761 	ld	a, (hl)
      0012C9 D6 08                 4762 	sub	a, #0x08
      0012CB 20 2D                 4763 	jr	NZ, 00104$
                                   4764 ;src/misc/room_defaults.c:14: show_dialog_window(4, &firefly_out);
      0012CD 11r00r00              4765 	ld	de, #_firefly_out
      0012D0 D5                    4766 	push	de
      0012D1 3E 04                 4767 	ld	a, #0x04
      0012D3 F5                    4768 	push	af
      0012D4 33                    4769 	inc	sp
      0012D5 CDr71r00              4770 	call	_show_dialog_window
      0012D8 E8 03                 4771 	add	sp, #3
                                   4772 ;src/misc/room_defaults.c:16: temp_item = pop_by_id(&item_stack, ID_JAR);
      0012DA 3E 06                 4773 	ld	a, #0x06
      0012DC F5                    4774 	push	af
      0012DD 33                    4775 	inc	sp
      0012DE 11rBBr03              4776 	ld	de, #_item_stack
      0012E1 D5                    4777 	push	de
      0012E2 CDr77r0F              4778 	call	_pop_by_id
      0012E5 E8 03                 4779 	add	sp, #3
      0012E7 4B                    4780 	ld	c, e
                                   4781 ;src/misc/room_defaults.c:17: if (temp_item) push_last(&inventory_item_list, temp_item);
      0012E8 7A                    4782 	ld	a,d
      0012E9 47                    4783 	ld	b,a
      0012EA B3                    4784 	or	a, e
      0012EB 28 0A                 4785 	jr	Z, 00102$
      0012ED C5                    4786 	push	bc
      0012EE 11rB6r03              4787 	ld	de, #_inventory_item_list
      0012F1 D5                    4788 	push	de
      0012F2 CDr0Cr0F              4789 	call	_push_last
      0012F5 E8 04                 4790 	add	sp, #4
      0012F7                       4791 00102$:
                                   4792 ;src/misc/room_defaults.c:19: return ID_LID;
      0012F7 1E 07                 4793 	ld	e, #0x07
      0012F9 C9                    4794 	ret
      0012FA                       4795 00104$:
                                   4796 ;src/misc/room_defaults.c:21: return ID_ITEM_NONE;
      0012FA 1E 00                 4797 	ld	e, #0x00
                                   4798 ;src/misc/room_defaults.c:22: }
      0012FC C9                    4799 	ret
                                   4800 ;src/mushroompie.c:401: void reset_world() {
                                   4801 ;	---------------------------------
                                   4802 ; Function reset_world
                                   4803 ; ---------------------------------
      0012FD                       4804 _reset_world::
      0012FD E8 FC                 4805 	add	sp, #-4
                                   4806 ;src/mushroompie.c:402: for (UBYTE row = 0; row < WORLD_HEIGHT; row++) {
      0012FF 0E 00                 4807 	ld	c, #0x00
      001301                       4808 00110$:
      001301 79                    4809 	ld	a, c
      001302 D6 02                 4810 	sub	a, #0x02
      001304 30 65                 4811 	jr	NC, 00112$
                                   4812 ;src/mushroompie.c:403: for (UBYTE col = 0; col < WORLD_WIDTH; col++) {
      001306 06 00                 4813 	ld	b, #0x00
      001308                       4814 00107$:
      001308 78                    4815 	ld	a, b
      001309 D6 06                 4816 	sub	a, #0x06
      00130B 30 5B                 4817 	jr	NC, 00111$
                                   4818 ;src/mushroompie.c:404: const room_t * cur_room = dizzy_world[row]->rooms[col];
      00130D 69                    4819 	ld	l, c
                                   4820 ;	spillPairReg hl
                                   4821 ;	spillPairReg hl
      00130E 26 00                 4822 	ld	h, #0x00
                                   4823 ;	spillPairReg hl
                                   4824 ;	spillPairReg hl
      001310 29                    4825 	add	hl, hl
      001311 11r36r02              4826 	ld	de, #_dizzy_world
      001314 19                    4827 	add	hl, de
      001315 2A                    4828 	ld	a, (hl+)
      001316 6E                    4829 	ld	l, (hl)
                                   4830 ;	spillPairReg hl
      001317 5F                    4831 	ld	e, a
      001318 55                    4832 	ld	d, l
      001319 13                    4833 	inc	de
      00131A 68                    4834 	ld	l, b
                                   4835 ;	spillPairReg hl
                                   4836 ;	spillPairReg hl
      00131B 26 00                 4837 	ld	h, #0x00
                                   4838 ;	spillPairReg hl
                                   4839 ;	spillPairReg hl
      00131D 29                    4840 	add	hl, hl
      00131E 19                    4841 	add	hl, de
      00131F 5D                    4842 	ld	e, l
      001320 54                    4843 	ld	d, h
      001321 1A                    4844 	ld	a, (de)
      001322 F8 00                 4845 	ldhl	sp,	#0
      001324 22                    4846 	ld	(hl+), a
      001325 13                    4847 	inc	de
      001326 1A                    4848 	ld	a, (de)
      001327 77                    4849 	ld	(hl), a
                                   4850 ;src/mushroompie.c:405: if ((cur_room) && (cur_room->room_reset)) push_bank(cur_room->bank),cur_room->room_reset(),pop_bank();
      001328 F8 01                 4851 	ldhl	sp,	#1
      00132A 3A                    4852 	ld	a, (hl-)
      00132B B6                    4853 	or	a, (hl)
      00132C 28 37                 4854 	jr	Z, 00108$
      00132E D1                    4855 	pop	de
      00132F D5                    4856 	push	de
      001330 21 17 00              4857 	ld	hl, #0x0017
      001333 19                    4858 	add	hl, de
      001334 E5                    4859 	push	hl
      001335 7D                    4860 	ld	a, l
      001336 F8 04                 4861 	ldhl	sp,	#4
      001338 77                    4862 	ld	(hl), a
      001339 E1                    4863 	pop	hl
      00133A 7C                    4864 	ld	a, h
      00133B F8 03                 4865 	ldhl	sp,	#3
      00133D 32                    4866 	ld	(hl-), a
      00133E 2A                    4867 	ld	a, (hl+)
      00133F 5F                    4868 	ld	e, a
      001340 56                    4869 	ld	d, (hl)
      001341 1A                    4870 	ld	a, (de)
      001342 6F                    4871 	ld	l, a
                                   4872 ;	spillPairReg hl
                                   4873 ;	spillPairReg hl
      001343 13                    4874 	inc	de
      001344 1A                    4875 	ld	a, (de)
      001345 B5                    4876 	or	a, l
      001346 28 1D                 4877 	jr	Z, 00108$
      001348 D1                    4878 	pop	de
      001349 D5                    4879 	push	de
      00134A 1A                    4880 	ld	a, (de)
      00134B C5                    4881 	push	bc
      00134C F5                    4882 	push	af
      00134D 33                    4883 	inc	sp
      00134E CDr00r00              4884 	call	_push_bank
      001351 33                    4885 	inc	sp
      001352 C1                    4886 	pop	bc
      001353 F8 02                 4887 	ldhl	sp,#2
      001355 2A                    4888 	ld	a, (hl+)
      001356 5F                    4889 	ld	e, a
      001357 56                    4890 	ld	d, (hl)
      001358 1A                    4891 	ld	a, (de)
      001359 6F                    4892 	ld	l, a
                                   4893 ;	spillPairReg hl
                                   4894 ;	spillPairReg hl
      00135A 13                    4895 	inc	de
      00135B 1A                    4896 	ld	a, (de)
      00135C 67                    4897 	ld	h, a
                                   4898 ;	spillPairReg hl
                                   4899 ;	spillPairReg hl
      00135D C5                    4900 	push	bc
      00135E CDr00r00              4901 	call	___sdcc_call_hl
      001361 CDr00r00              4902 	call	_pop_bank
      001364 C1                    4903 	pop	bc
      001365                       4904 00108$:
                                   4905 ;src/mushroompie.c:403: for (UBYTE col = 0; col < WORLD_WIDTH; col++) {
      001365 04                    4906 	inc	b
      001366 18 A0                 4907 	jr	00107$
      001368                       4908 00111$:
                                   4909 ;src/mushroompie.c:402: for (UBYTE row = 0; row < WORLD_HEIGHT; row++) {
      001368 0C                    4910 	inc	c
      001369 18 96                 4911 	jr	00110$
      00136B                       4912 00112$:
                                   4913 ;src/mushroompie.c:408: }
      00136B E8 04                 4914 	add	sp, #4
      00136D C9                    4915 	ret
                                   4916 ;src/mushroompie.c:410: void init_game() {
                                   4917 ;	---------------------------------
                                   4918 ; Function init_game
                                   4919 ; ---------------------------------
      00136E                       4920 _init_game::
                                   4921 ;src/mushroompie.c:411: FADE_OUT;
      00136E 3E 01                 4922 	ld	a, #0x01
      001370 F5                    4923 	push	af
      001371 33                    4924 	inc	sp
      001372 CDr00r00              4925 	call	_push_bank
      001375 33                    4926 	inc	sp
      001376 21 2C 2C              4927 	ld	hl, #0x2c2c
      001379 E5                    4928 	push	hl
      00137A 21 00 93              4929 	ld	hl, #0x9300
      00137D E5                    4930 	push	hl
      00137E CDr00r00              4931 	call	_FadeDMG
      001381 E8 04                 4932 	add	sp, #4
      001383 CDr00r00              4933 	call	_pop_bank
                                   4934 ;src/mushroompie.c:413: reset_world();
      001386 CDrFDr12              4935 	call	_reset_world
                                   4936 ;src/mushroompie.c:415: init_game_items();
      001389 CDr97r11              4937 	call	_init_game_items
                                   4938 ;src/mushroompie.c:417: game_over = 0;
      00138C 21r1Er00              4939 	ld	hl, #_game_over
      00138F 36 00                 4940 	ld	(hl), #0x00
                                   4941 ;src/mushroompie.c:418: init_dizzy_coins(); show_coins();
      001391 CDrF7r03              4942 	call	_init_dizzy_coins
      001394 CDr7Fr04              4943 	call	_show_coins
                                   4944 ;src/mushroompie.c:419: init_dizzy_lives(); show_lives();
      001397 CDrFDr03              4945 	call	_init_dizzy_lives
      00139A CDr2Er04              4946 	call	_show_lives
                                   4947 ;src/mushroompie.c:420: init_dizzy_energy(); show_energy();
      00139D CDr03r04              4948 	call	_init_dizzy_energy
      0013A0 CDrA8r04              4949 	call	_show_energy
                                   4950 ;src/mushroompie.c:422: current_room_x = 1, current_room_y = 1; 
      0013A3 21r0Cr00              4951 	ld	hl, #_current_room_x
      0013A6 36 01                 4952 	ld	(hl), #0x01
      0013A8 21r0Dr00              4953 	ld	hl, #_current_room_y
      0013AB 36 01                 4954 	ld	(hl), #0x01
                                   4955 ;src/mushroompie.c:423: set_room(current_room_y, current_room_x, 0);    
      0013AD AF                    4956 	xor	a, a
      0013AE 67                    4957 	ld	h, a
      0013AF 2E 01                 4958 	ld	l, #0x01
      0013B1 E5                    4959 	push	hl
      0013B2 3E 01                 4960 	ld	a, #0x01
      0013B4 F5                    4961 	push	af
      0013B5 33                    4962 	inc	sp
      0013B6 CDrD9r0C              4963 	call	_set_room
      0013B9 E8 03                 4964 	add	sp, #3
                                   4965 ;src/mushroompie.c:425: set_dizzy_animdata(&m_stand_0);
      0013BB 11r00r00              4966 	ld	de, #_m_stand_0
      0013BE D5                    4967 	push	de
      0013BF CDr1Ar09              4968 	call	_set_dizzy_animdata
      0013C2 E1                    4969 	pop	hl
                                   4970 ;src/mushroompie.c:427: dizzy_x = 116, dizzy_y = 72;
      0013C3 21r10r00              4971 	ld	hl, #_dizzy_x
      0013C6 3E 74                 4972 	ld	a, #0x74
      0013C8 22                    4973 	ld	(hl+), a
      0013C9 AF                    4974 	xor	a, a
      0013CA 77                    4975 	ld	(hl), a
      0013CB 21r12r00              4976 	ld	hl, #_dizzy_y
      0013CE 3E 48                 4977 	ld	a, #0x48
      0013D0 22                    4978 	ld	(hl+), a
      0013D1 AF                    4979 	xor	a, a
      0013D2 77                    4980 	ld	(hl), a
                                   4981 ;src/mushroompie.c:428: ani_type = ANI_STAND; ani_phase = 0;
      0013D3 21r02r00              4982 	ld	hl, #_ani_type
      0013D6 36 00                 4983 	ld	(hl), #0x00
      0013D8 21r03r00              4984 	ld	hl, #_ani_phase
      0013DB 36 00                 4985 	ld	(hl), #0x00
                                   4986 ;src/mushroompie.c:429: set_dizzy_position();
      0013DD CDr38r09              4987 	call	_set_dizzy_position
                                   4988 ;src/mushroompie.c:431: delay(200);
      0013E0 11 C8 00              4989 	ld	de, #0x00c8
      0013E3 D5                    4990 	push	de
      0013E4 CDr00r00              4991 	call	_delay
      0013E7 E1                    4992 	pop	hl
                                   4993 ;src/mushroompie.c:432: FADE_IN;
      0013E8 3E 01                 4994 	ld	a, #0x01
      0013EA F5                    4995 	push	af
      0013EB 33                    4996 	inc	sp
      0013EC CDr00r00              4997 	call	_push_bank
      0013EF 33                    4998 	inc	sp
      0013F0 21 2C 2C              4999 	ld	hl, #0x2c2c
      0013F3 E5                    5000 	push	hl
      0013F4 3E 93                 5001 	ld	a, #0x93
      0013F6 F5                    5002 	push	af
      0013F7 33                    5003 	inc	sp
      0013F8 3E 01                 5004 	ld	a, #0x01
      0013FA F5                    5005 	push	af
      0013FB 33                    5006 	inc	sp
      0013FC CDr00r00              5007 	call	_FadeDMG
      0013FF E8 04                 5008 	add	sp, #4
                                   5009 ;src/mushroompie.c:433: }
      001401 C3r00r00              5010 	jp	_pop_bank
                                   5011 ;src/mushroompie.c:437: void main() {
                                   5012 ;	---------------------------------
                                   5013 ; Function main
                                   5014 ; ---------------------------------
      001404                       5015 _main::
      001404 3B                    5016 	dec	sp
      001405 3B                    5017 	dec	sp
                                   5018 ;src/mushroompie.c:438: DISPLAY_OFF;
      001406 CDr00r00              5019 	call	_display_off
                                   5020 ;src/mushroompie.c:440: set_bank(1);
      001409 3E 01                 5021 	ld	a, #0x01
      00140B F5                    5022 	push	af
      00140C 33                    5023 	inc	sp
      00140D CDr00r00              5024 	call	_set_bank
      001410 33                    5025 	inc	sp
                                   5026 ;src/mushroompie.c:443: NR52_REG = 0x80; // Enables sound, always set this first
      001411 3E 80                 5027 	ld	a, #0x80
      001413 E0r00                 5028 	ldh	(_NR52_REG + 0), a
                                   5029 ;src/mushroompie.c:444: NR51_REG = 0xFF; // Enables all channels (left and right)
      001415 3E FF                 5030 	ld	a, #0xff
      001417 E0r00                 5031 	ldh	(_NR51_REG + 0), a
                                   5032 ;src/mushroompie.c:445: NR50_REG = 0x77; // Max volume
      001419 3E 77                 5033 	ld	a, #0x77
      00141B E0r00                 5034 	ldh	(_NR50_REG + 0), a
                                   5035 ;src/mushroompie.c:447: hUGE_init(song);
      00141D 11r00r00              5036 	ld	de, #_song
      001420 D5                    5037 	push	de
      001421 CDr00r00              5038 	call	_hUGE_init
      001424 E1                    5039 	pop	hl
                                   5040 ;src/mushroompie.c:467: }
      001425 F3                    5041 	di
                                   5042 ;src/mushroompie.c:450: LCDC_REG = 0x44U;
      001426 3E 44                 5043 	ld	a, #0x44
      001428 E0r00                 5044 	ldh	(_LCDC_REG + 0), a
                                   5045 ;src/mushroompie.c:453: STAT_REG = 0x50;
      00142A 3E 50                 5046 	ld	a, #0x50
      00142C E0r00                 5047 	ldh	(_STAT_REG + 0), a
                                   5048 ;src/mushroompie.c:454: LYC_REG = 0;
      00142E AF                    5049 	xor	a, a
      00142F E0r00                 5050 	ldh	(_LYC_REG + 0), a
                                   5051 ;src/mushroompie.c:456: add_LCD(lcd_interrupt); 
      001431 11r00r00              5052 	ld	de, #_lcd_interrupt
      001434 D5                    5053 	push	de
      001435 CDr00r00              5054 	call	_add_LCD
      001438 E1                    5055 	pop	hl
                                   5056 ;src/mushroompie.c:457: add_VBL(vbl_interrupt); 
      001439 11r4Ar00              5057 	ld	de, #_vbl_interrupt
      00143C D5                    5058 	push	de
      00143D CDr00r00              5059 	call	_add_VBL
      001440 E1                    5060 	pop	hl
                                   5061 ;src/mushroompie.c:463: add_LCD(wait_int_handler);
      001441 11r00r00              5062 	ld	de, #_wait_int_handler
      001444 D5                    5063 	push	de
      001445 CDr00r00              5064 	call	_add_LCD
      001448 E1                    5065 	pop	hl
                                   5066 ;src/mushroompie.c:466: set_interrupts(VBL_IFLAG | LCD_IFLAG);
      001449 3E 03                 5067 	ld	a, #0x03
      00144B F5                    5068 	push	af
      00144C 33                    5069 	inc	sp
      00144D CDr00r00              5070 	call	_set_interrupts
      001450 33                    5071 	inc	sp
      001451 FB                    5072 	ei
                                   5073 ;src/mushroompie.c:470: BGP_REG = OBP0_REG = OBP1_REG = 0xFF;
      001452 3E FF                 5074 	ld	a, #0xff
      001454 E0r00                 5075 	ldh	(_OBP1_REG + 0), a
      001456 3E FF                 5076 	ld	a, #0xff
      001458 E0r00                 5077 	ldh	(_OBP0_REG + 0), a
      00145A 3E FF                 5078 	ld	a, #0xff
      00145C E0r00                 5079 	ldh	(_BGP_REG + 0), a
                                   5080 ;src/mushroompie.c:472: SPRITES_8x8;
      00145E F0r00                 5081 	ldh	a, (_LCDC_REG + 0)
      001460 E6 FB                 5082 	and	a, #0xfb
      001462 E0r00                 5083 	ldh	(_LCDC_REG + 0), a
                                   5084 ;src/mushroompie.c:473: init_dizzy();
      001464 CDrFBr08              5085 	call	_init_dizzy
                                   5086 ;src/mushroompie.c:474: SHOW_SPRITES;
      001467 F0r00                 5087 	ldh	a, (_LCDC_REG + 0)
      001469 F6 02                 5088 	or	a, #0x02
      00146B E0r00                 5089 	ldh	(_LCDC_REG + 0), a
                                   5090 ;src/mushroompie.c:476: WX_REG = 7; WY_REG = 0;
      00146D 3E 07                 5091 	ld	a, #0x07
      00146F E0r00                 5092 	ldh	(_WX_REG + 0), a
      001471 AF                    5093 	xor	a, a
      001472 E0r00                 5094 	ldh	(_WY_REG + 0), a
                                   5095 ;src/mushroompie.c:480: window_tiles_hiwater -= title_tiles.count;
      001474 21r00r00              5096 	ld	hl, #_title_tiles
      001477 4E                    5097 	ld	c, (hl)
      001478 AF                    5098 	xor	a, a
      001479 91                    5099 	sub	a, c
      00147A 21r43r02              5100 	ld	hl, #_window_tiles_hiwater
      00147D 77                    5101 	ld	(hl), a
                                   5102 ;src/mushroompie.c:481: unshrink_tiles(window_tiles_hiwater, title_tiles.count, title_tiles.data);
      00147E 01r01r00              5103 	ld	bc, #_title_tiles + 1
      001481 FAr00r00              5104 	ld	a, (#_title_tiles + 0)
      001484 C5                    5105 	push	bc
      001485 F5                    5106 	push	af
      001486 33                    5107 	inc	sp
      001487 7E                    5108 	ld	a, (hl)
      001488 F5                    5109 	push	af
      001489 33                    5110 	inc	sp
      00148A CDr00r00              5111 	call	_unshrink_tiles
      00148D E8 04                 5112 	add	sp, #4
                                   5113 ;src/mushroompie.c:483: inventoty_tiles_start = window_tiles_hiwater -= dialog_frame_tiles.count;
      00148F 21r00r00              5114 	ld	hl, #_dialog_frame_tiles
      001492 4E                    5115 	ld	c, (hl)
      001493 FAr43r02              5116 	ld	a, (#_window_tiles_hiwater)
      001496 91                    5117 	sub	a, c
      001497 EAr44r02              5118 	ld	(#_inventoty_tiles_start),a
      00149A 21r43r02              5119 	ld	hl, #_window_tiles_hiwater
      00149D 77                    5120 	ld	(hl), a
                                   5121 ;src/mushroompie.c:484: unshrink_tiles(window_tiles_hiwater, dialog_frame_tiles.count, dialog_frame_tiles.data);
      00149E 01r01r00              5122 	ld	bc, #_dialog_frame_tiles + 1
      0014A1 FAr00r00              5123 	ld	a, (#_dialog_frame_tiles + 0)
      0014A4 C5                    5124 	push	bc
      0014A5 F5                    5125 	push	af
      0014A6 33                    5126 	inc	sp
      0014A7 7E                    5127 	ld	a, (hl)
      0014A8 F5                    5128 	push	af
      0014A9 33                    5129 	inc	sp
      0014AA CDr00r00              5130 	call	_unshrink_tiles
      0014AD E8 04                 5131 	add	sp, #4
                                   5132 ;src/mushroompie.c:486: dizzy_energy_start = window_tiles_hiwater -= energy_tiles.count;
      0014AF 21r00r00              5133 	ld	hl, #_energy_tiles
      0014B2 4E                    5134 	ld	c, (hl)
      0014B3 FAr43r02              5135 	ld	a, (#_window_tiles_hiwater)
      0014B6 91                    5136 	sub	a, c
      0014B7 EAr11r02              5137 	ld	(#_dizzy_energy_start),a
      0014BA 21r43r02              5138 	ld	hl, #_window_tiles_hiwater
      0014BD 77                    5139 	ld	(hl), a
                                   5140 ;src/mushroompie.c:487: unshrink_tiles(window_tiles_hiwater, energy_tiles.count, energy_tiles.data);
      0014BE 01r01r00              5141 	ld	bc, #_energy_tiles + 1
      0014C1 FAr00r00              5142 	ld	a, (#_energy_tiles + 0)
      0014C4 C5                    5143 	push	bc
      0014C5 F5                    5144 	push	af
      0014C6 33                    5145 	inc	sp
      0014C7 7E                    5146 	ld	a, (hl)
      0014C8 F5                    5147 	push	af
      0014C9 33                    5148 	inc	sp
      0014CA CDr00r00              5149 	call	_unshrink_tiles
      0014CD E8 04                 5150 	add	sp, #4
                                   5151 ;src/mushroompie.c:489: font_tiles_start = window_tiles_hiwater -= font_tiles.count;
      0014CF 21r00r00              5152 	ld	hl, #_font_tiles
      0014D2 4E                    5153 	ld	c, (hl)
      0014D3 FAr43r02              5154 	ld	a, (#_window_tiles_hiwater)
      0014D6 91                    5155 	sub	a, c
      0014D7 EAr45r02              5156 	ld	(#_font_tiles_start),a
      0014DA EAr43r02              5157 	ld	(#_window_tiles_hiwater),a
                                   5158 ;src/mushroompie.c:490: digits_start = font_tiles_start + 0x0F;
      0014DD 21r45r02              5159 	ld	hl, #_font_tiles_start
      0014E0 4E                    5160 	ld	c, (hl)
      0014E1 79                    5161 	ld	a, c
      0014E2 C6 0F                 5162 	add	a, #0x0f
      0014E4 EAr12r02              5163 	ld	(#_digits_start),a
                                   5164 ;src/mushroompie.c:491: dizzy_live_symbol = font_tiles_start + 0x1F;
      0014E7 79                    5165 	ld	a, c
      0014E8 C6 1F                 5166 	add	a, #0x1f
      0014EA EAr10r02              5167 	ld	(#_dizzy_live_symbol),a
                                   5168 ;src/mushroompie.c:492: unshrink_tiles(window_tiles_hiwater, font_tiles.count, font_tiles.data);
      0014ED 01r01r00              5169 	ld	bc, #_font_tiles + 1
      0014F0 FAr00r00              5170 	ld	a, (#_font_tiles + 0)
      0014F3 C5                    5171 	push	bc
      0014F4 F5                    5172 	push	af
      0014F5 33                    5173 	inc	sp
      0014F6 FAr43r02              5174 	ld	a, (#_window_tiles_hiwater)
      0014F9 F5                    5175 	push	af
      0014FA 33                    5176 	inc	sp
      0014FB CDr00r00              5177 	call	_unshrink_tiles
      0014FE E8 04                 5178 	add	sp, #4
                                   5179 ;src/mushroompie.c:494: set_win_tiles(0, 0, 20, 3, title_map);
      001500 11r00r00              5180 	ld	de, #_title_map
      001503 D5                    5181 	push	de
      001504 21 14 03              5182 	ld	hl, #0x314
      001507 E5                    5183 	push	hl
      001508 AF                    5184 	xor	a, a
      001509 0F                    5185 	rrca
      00150A F5                    5186 	push	af
      00150B CDr00r00              5187 	call	_set_win_tiles
      00150E E8 06                 5188 	add	sp, #6
                                   5189 ;src/mushroompie.c:496: current_room_x = 1, current_room_y = 1; 
      001510 21r0Cr00              5190 	ld	hl, #_current_room_x
      001513 36 01                 5191 	ld	(hl), #0x01
      001515 21r0Dr00              5192 	ld	hl, #_current_room_y
      001518 36 01                 5193 	ld	(hl), #0x01
                                   5194 ;src/mushroompie.c:498: init_game_items();
      00151A CDr97r11              5195 	call	_init_game_items
                                   5196 ;src/mushroompie.c:499: set_room(current_room_y, current_room_x, 0);
      00151D AF                    5197 	xor	a, a
      00151E F5                    5198 	push	af
      00151F 33                    5199 	inc	sp
      001520 FAr0Cr00              5200 	ld	a, (#_current_room_x)
      001523 67                    5201 	ld	h, a
      001524 FAr0Dr00              5202 	ld	a, (#_current_room_y)
      001527 6F                    5203 	ld	l, a
      001528 E5                    5204 	push	hl
      001529 CDrD9r0C              5205 	call	_set_room
      00152C E8 03                 5206 	add	sp, #3
                                   5207 ;src/mushroompie.c:501: SHOW_BKG;
      00152E F0r00                 5208 	ldh	a, (_LCDC_REG + 0)
      001530 F6 01                 5209 	or	a, #0x01
      001532 E0r00                 5210 	ldh	(_LCDC_REG + 0), a
                                   5211 ;src/mushroompie.c:502: DISPLAY_ON;
      001534 F0r00                 5212 	ldh	a, (_LCDC_REG + 0)
      001536 F6 80                 5213 	or	a, #0x80
      001538 E0r00                 5214 	ldh	(_LCDC_REG + 0), a
                                   5215 ;src/mushroompie.c:505: FADE_IN;
      00153A 3E 01                 5216 	ld	a, #0x01
      00153C F5                    5217 	push	af
      00153D 33                    5218 	inc	sp
      00153E CDr00r00              5219 	call	_push_bank
      001541 33                    5220 	inc	sp
      001542 21 2C 2C              5221 	ld	hl, #0x2c2c
      001545 E5                    5222 	push	hl
      001546 21 01 93              5223 	ld	hl, #0x9301
      001549 E5                    5224 	push	hl
      00154A CDr00r00              5225 	call	_FadeDMG
      00154D E8 04                 5226 	add	sp, #4
      00154F CDr00r00              5227 	call	_pop_bank
                                   5228 ;src/mushroompie.c:507: show_dialog_window(6, &start_dialog);
      001552 11r00r00              5229 	ld	de, #_start_dialog
      001555 D5                    5230 	push	de
      001556 3E 06                 5231 	ld	a, #0x06
      001558 F5                    5232 	push	af
      001559 33                    5233 	inc	sp
      00155A CDr71r00              5234 	call	_show_dialog_window
      00155D E8 03                 5235 	add	sp, #3
                                   5236 ;src/mushroompie.c:509: init_game();
      00155F CDr6Er13              5237 	call	_init_game
                                   5238 ;src/mushroompie.c:517: while(1) {
      001562                       5239 00208$:
                                   5240 ;src/mushroompie.c:518: ani_type_old = ani_type;
      001562 FAr02r00              5241 	ld	a, (#_ani_type)
      001565 EAr00r02              5242 	ld	(#_ani_type_old),a
                                   5243 ;src/mushroompie.c:520: if (!death_pause) {
      001568 FAr1Fr00              5244 	ld	a, (#_death_pause)
      00156B B7                    5245 	or	a, a
      00156C C2rC9r18              5246 	jp	NZ, 00160$
                                   5247 ;src/mushroompie.c:521: joy = joypad();
      00156F CDr00r00              5248 	call	_joypad
      001572 21r1Dr00              5249 	ld	hl, #_joy
      001575 73                    5250 	ld	(hl), e
                                   5251 ;src/mushroompie.c:522: __temp_i = animation[ani_type]->interr;
      001576 01r52r01              5252 	ld	bc, #_animation+0
      001579 21r02r00              5253 	ld	hl, #_ani_type
      00157C 6E                    5254 	ld	l, (hl)
                                   5255 ;	spillPairReg hl
                                   5256 ;	spillPairReg hl
      00157D 26 00                 5257 	ld	h, #0x00
                                   5258 ;	spillPairReg hl
                                   5259 ;	spillPairReg hl
      00157F 29                    5260 	add	hl, hl
      001580 09                    5261 	add	hl, bc
      001581 2A                    5262 	ld	a, (hl+)
      001582 4F                    5263 	ld	c, a
      001583 46                    5264 	ld	b, (hl)
      001584 03                    5265 	inc	bc
      001585 03                    5266 	inc	bc
      001586 0A                    5267 	ld	a, (bc)
      001587 EAr0Br02              5268 	ld	(#___temp_i),a
                                   5269 ;src/mushroompie.c:523: if ((!current_dyn) && (!dizzy_falling) && ((__temp_i == 255) || (__temp_i == ani_phase))) {
      00158A 21r05r00              5270 	ld	hl, #_current_dyn + 1
      00158D 3A                    5271 	ld	a, (hl-)
      00158E B6                    5272 	or	a, (hl)
      00158F C2r64r16              5273 	jp	NZ, 00122$
      001592 FAr20r00              5274 	ld	a, (#_dizzy_falling)
      001595 B7                    5275 	or	a, a
      001596 C2r64r16              5276 	jp	NZ, 00122$
      001599 FAr0Br02              5277 	ld	a, (#___temp_i)
      00159C 3C                    5278 	inc	a
      00159D 28 0A                 5279 	jr	Z, 00121$
      00159F FAr0Br02              5280 	ld	a, (#___temp_i)
      0015A2 21r03r00              5281 	ld	hl, #_ani_phase
      0015A5 96                    5282 	sub	a, (hl)
      0015A6 C2r64r16              5283 	jp	NZ,00122$
      0015A9                       5284 00121$:
                                   5285 ;src/mushroompie.c:524: if (!joy) {
      0015A9 FAr1Dr00              5286 	ld	a, (#_joy)
      0015AC B7                    5287 	or	a, a
      0015AD 20 08                 5288 	jr	NZ, 00119$
                                   5289 ;src/mushroompie.c:525: ani_type = ANI_STAND;    
      0015AF 21r02r00              5290 	ld	hl, #_ani_type
      0015B2 36 00                 5291 	ld	(hl), #0x00
      0015B4 C3r64r16              5292 	jp	00122$
      0015B7                       5293 00119$:
                                   5294 ;src/mushroompie.c:526: } else if (joy & J_LEFT) {
      0015B7 21r1Dr00              5295 	ld	hl, #_joy
      0015BA 56                    5296 	ld	d, (hl)
                                   5297 ;src/mushroompie.c:527: if ((joy & J_UP) || (joy & J_A)) {
      0015BB 7A                    5298 	ld	a, d
      0015BC E6 04                 5299 	and	a, #0x04
      0015BE 1E 00                 5300 	ld	e, #0x00
      0015C0 F5                    5301 	push	af
      0015C1 7A                    5302 	ld	a, d
      0015C2 E6 10                 5303 	and	a, #0x10
      0015C4 4F                    5304 	ld	c, a
      0015C5 06 00                 5305 	ld	b, #0x00
      0015C7 F1                    5306 	pop	af
                                   5307 ;src/mushroompie.c:526: } else if (joy & J_LEFT) {
      0015C8 CB 4A                 5308 	bit	1, d
      0015CA 28 32                 5309 	jr	Z, 00116$
                                   5310 ;src/mushroompie.c:527: if ((joy & J_UP) || (joy & J_A)) {
      0015CC B3                    5311 	or	a, e
      0015CD 20 04                 5312 	jr	NZ, 00101$
      0015CF 78                    5313 	ld	a, b
      0015D0 B1                    5314 	or	a, c
      0015D1 28 24                 5315 	jr	Z, 00102$
      0015D3                       5316 00101$:
                                   5317 ;src/mushroompie.c:528: ani_type = ANI_JUMP_L;
      0015D3 21r02r00              5318 	ld	hl, #_ani_type
      0015D6 36 09                 5319 	ld	(hl), #0x09
                                   5320 ;src/mushroompie.c:529: SND_JUMP;
      0015D8 11 C5 00              5321 	ld	de, #0x00c5
      0015DB D5                    5322 	push	de
      0015DC 11 78 00              5323 	ld	de, #0x0078
      0015DF D5                    5324 	push	de
      0015E0 11 53 00              5325 	ld	de, #0x0053
      0015E3 D5                    5326 	push	de
      0015E4 11 84 00              5327 	ld	de, #0x0084
      0015E7 D5                    5328 	push	de
      0015E8 11 65 00              5329 	ld	de, #0x0065
      0015EB D5                    5330 	push	de
      0015EC 21 00 08              5331 	ld	hl, #0x800
      0015EF E5                    5332 	push	hl
      0015F0 CDr00r00              5333 	call	_PlayFx
      0015F3 E8 0C                 5334 	add	sp, #12
      0015F5 18 6D                 5335 	jr	00122$
      0015F7                       5336 00102$:
                                   5337 ;src/mushroompie.c:531: ani_type = ANI_WALK_L;
      0015F7 21r02r00              5338 	ld	hl, #_ani_type
      0015FA 36 03                 5339 	ld	(hl), #0x03
      0015FC 18 66                 5340 	jr	00122$
      0015FE                       5341 00116$:
                                   5342 ;src/mushroompie.c:533: } else if (joy & J_RIGHT) {
      0015FE CB 42                 5343 	bit	0, d
      001600 28 32                 5344 	jr	Z, 00113$
                                   5345 ;src/mushroompie.c:534: if ((joy & J_UP) || (joy & J_A)) {
      001602 B3                    5346 	or	a, e
      001603 20 04                 5347 	jr	NZ, 00105$
      001605 78                    5348 	ld	a, b
      001606 B1                    5349 	or	a, c
      001607 28 24                 5350 	jr	Z, 00106$
      001609                       5351 00105$:
                                   5352 ;src/mushroompie.c:535: ani_type = ANI_JUMP_R;
      001609 21r02r00              5353 	ld	hl, #_ani_type
      00160C 36 08                 5354 	ld	(hl), #0x08
                                   5355 ;src/mushroompie.c:536: SND_JUMP;
      00160E 11 C5 00              5356 	ld	de, #0x00c5
      001611 D5                    5357 	push	de
      001612 11 78 00              5358 	ld	de, #0x0078
      001615 D5                    5359 	push	de
      001616 11 53 00              5360 	ld	de, #0x0053
      001619 D5                    5361 	push	de
      00161A 11 84 00              5362 	ld	de, #0x0084
      00161D D5                    5363 	push	de
      00161E 11 65 00              5364 	ld	de, #0x0065
      001621 D5                    5365 	push	de
      001622 21 00 08              5366 	ld	hl, #0x800
      001625 E5                    5367 	push	hl
      001626 CDr00r00              5368 	call	_PlayFx
      001629 E8 0C                 5369 	add	sp, #12
      00162B 18 37                 5370 	jr	00122$
      00162D                       5371 00106$:
                                   5372 ;src/mushroompie.c:538: ani_type = ANI_WALK_R; 
      00162D 21r02r00              5373 	ld	hl, #_ani_type
      001630 36 02                 5374 	ld	(hl), #0x02
      001632 18 30                 5375 	jr	00122$
      001634                       5376 00113$:
                                   5377 ;src/mushroompie.c:540: } else if ((joy == J_UP) || (joy == J_A)) {
      001634 FAr1Dr00              5378 	ld	a, (#_joy)
      001637 D6 04                 5379 	sub	a, #0x04
      001639 28 07                 5380 	jr	Z, 00109$
      00163B FAr1Dr00              5381 	ld	a, (#_joy)
      00163E D6 10                 5382 	sub	a, #0x10
      001640 20 22                 5383 	jr	NZ, 00122$
      001642                       5384 00109$:
                                   5385 ;src/mushroompie.c:541: ani_type = ANI_UP;
      001642 21r02r00              5386 	ld	hl, #_ani_type
      001645 36 01                 5387 	ld	(hl), #0x01
                                   5388 ;src/mushroompie.c:542: SND_JUMP;
      001647 11 C5 00              5389 	ld	de, #0x00c5
      00164A D5                    5390 	push	de
      00164B 11 78 00              5391 	ld	de, #0x0078
      00164E D5                    5392 	push	de
      00164F 11 53 00              5393 	ld	de, #0x0053
      001652 D5                    5394 	push	de
      001653 11 84 00              5395 	ld	de, #0x0084
      001656 D5                    5396 	push	de
      001657 11 65 00              5397 	ld	de, #0x0065
      00165A D5                    5398 	push	de
      00165B 21 00 08              5399 	ld	hl, #0x800
      00165E E5                    5400 	push	hl
      00165F CDr00r00              5401 	call	_PlayFx
      001662 E8 0C                 5402 	add	sp, #12
      001664                       5403 00122$:
                                   5404 ;src/mushroompie.c:545: if (joy == J_B) {
      001664 FAr1Dr00              5405 	ld	a, (#_joy)
      001667 D6 20                 5406 	sub	a, #0x20
      001669 C2rC9r18              5407 	jp	NZ,00160$
                                   5408 ;src/mushroompie.c:546: if (is_position_safe) {
      00166C FAr1Cr00              5409 	ld	a, (#_is_position_safe)
      00166F B7                    5410 	or	a, a
      001670 CArC9r18              5411 	jp	Z, 00160$
                                   5412 ;src/mushroompie.c:547: waitpadup();
      001673 CDr00r00              5413 	call	_waitpadup
                                   5414 ;src/mushroompie.c:548: UBYTE redraw_room = 0, warning_shown = 0, current_item_id = 0;
      001676 01 00 00              5415 	ld	bc, #0x0
                                   5416 ;src/mushroompie.c:549: tile_pos_x = dizzy_x >> 3, tile_pos_y = dizzy_y >> 3;
      001679 21r10r00              5417 	ld	hl, #_dizzy_x
      00167C 2A                    5418 	ld	a, (hl+)
      00167D 5F                    5419 	ld	e, a
      00167E 56                    5420 	ld	d, (hl)
      00167F CB 2A                 5421 	sra	d
      001681 CB 1B                 5422 	rr	e
      001683 CB 2A                 5423 	sra	d
      001685 CB 1B                 5424 	rr	e
      001687 CB 2A                 5425 	sra	d
      001689 CB 1B                 5426 	rr	e
      00168B 21r3Ar02              5427 	ld	hl, #_tile_pos_x
      00168E 73                    5428 	ld	(hl), e
      00168F 21r12r00              5429 	ld	hl, #_dizzy_y
      001692 2A                    5430 	ld	a, (hl+)
      001693 5F                    5431 	ld	e, a
      001694 56                    5432 	ld	d, (hl)
      001695 CB 2A                 5433 	sra	d
      001697 CB 1B                 5434 	rr	e
      001699 CB 2A                 5435 	sra	d
      00169B CB 1B                 5436 	rr	e
      00169D CB 2A                 5437 	sra	d
      00169F CB 1B                 5438 	rr	e
      0016A1 21r3Br02              5439 	ld	hl, #_tile_pos_y
      0016A4 73                    5440 	ld	(hl), e
                                   5441 ;src/mushroompie.c:550: __temp_game_item3 = find_by_room_xy(&game_item_list, current_room_y, current_room_x, tile_pos_x, tile_pos_y);
      0016A5 C5                    5442 	push	bc
      0016A6 7E                    5443 	ld	a, (hl)
      0016A7 F5                    5444 	push	af
      0016A8 33                    5445 	inc	sp
      0016A9 FAr3Ar02              5446 	ld	a, (#_tile_pos_x)
      0016AC 67                    5447 	ld	h, a
      0016AD FAr0Cr00              5448 	ld	a, (#_current_room_x)
      0016B0 6F                    5449 	ld	l, a
      0016B1 E5                    5450 	push	hl
      0016B2 FAr0Dr00              5451 	ld	a, (#_current_room_y)
      0016B5 F5                    5452 	push	af
      0016B6 33                    5453 	inc	sp
      0016B7 11rC5r02              5454 	ld	de, #_game_item_list
      0016BA D5                    5455 	push	de
      0016BB CDr87r10              5456 	call	_find_by_room_xy
      0016BE E8 06                 5457 	add	sp, #6
      0016C0 C1                    5458 	pop	bc
      0016C1 21rCEr02              5459 	ld	hl, #___temp_game_item3
      0016C4 7B                    5460 	ld	a, e
      0016C5 22                    5461 	ld	(hl+), a
      0016C6 72                    5462 	ld	(hl), d
                                   5463 ;src/mushroompie.c:551: if (__temp_game_item3) {
      0016C7 3A                    5464 	ld	a, (hl-)
      0016C8 B6                    5465 	or	a, (hl)
      0016C9 CAr5Cr17              5466 	jp	Z, 00133$
                                   5467 ;src/mushroompie.c:552: current_item_id = __temp_game_item3->id;
      0016CC 2A                    5468 	ld	a, (hl+)
      0016CD 5F                    5469 	ld	e, a
      0016CE 56                    5470 	ld	d, (hl)
      0016CF 1A                    5471 	ld	a, (de)
      0016D0 F8 01                 5472 	ldhl	sp,	#1
      0016D2 77                    5473 	ld	(hl), a
                                   5474 ;src/mushroompie.c:553: if (current_item_id & ID_TREASURE) {
      0016D3 E5                    5475 	push	hl
      0016D4 CB 7E                 5476 	bit	7, (hl)
      0016D6 E1                    5477 	pop	hl
      0016D7 28 47                 5478 	jr	Z, 00130$
                                   5479 ;src/mushroompie.c:554: SND_COIN;
      0016D9 11 C7 00              5480 	ld	de, #0x00c7
      0016DC D5                    5481 	push	de
      0016DD AF                    5482 	xor	a, a
      0016DE 37                    5483 	scf
      0016DF F5                    5484 	push	af
      0016E0 11 44 00              5485 	ld	de, #0x0044
      0016E3 D5                    5486 	push	de
      0016E4 11 B7 00              5487 	ld	de, #0x00b7
      0016E7 D5                    5488 	push	de
      0016E8 11 00 00              5489 	ld	de, #0x0000
      0016EB D5                    5490 	push	de
      0016EC 21 00 04              5491 	ld	hl, #0x400
      0016EF E5                    5492 	push	hl
      0016F0 CDr00r00              5493 	call	_PlayFx
      0016F3 E8 0C                 5494 	add	sp, #12
                                   5495 ;src/mushroompie.c:555: pop_by_id(&game_item_list, current_item_id);
      0016F5 F8 01                 5496 	ldhl	sp,	#1
      0016F7 7E                    5497 	ld	a, (hl)
      0016F8 F5                    5498 	push	af
      0016F9 33                    5499 	inc	sp
      0016FA 11rC5r02              5500 	ld	de, #_game_item_list
      0016FD D5                    5501 	push	de
      0016FE CDr77r0F              5502 	call	_pop_by_id
      001701 E8 03                 5503 	add	sp, #3
                                   5504 ;src/mushroompie.c:556: show_dialog_window(2, &coin_found);
      001703 11r00r00              5505 	ld	de, #_coin_found
      001706 D5                    5506 	push	de
      001707 3E 02                 5507 	ld	a, #0x02
      001709 F5                    5508 	push	af
      00170A 33                    5509 	inc	sp
      00170B CDr71r00              5510 	call	_show_dialog_window
      00170E E8 03                 5511 	add	sp, #3
                                   5512 ;src/mushroompie.c:557: add_coins(1); 
      001710 3E 01                 5513 	ld	a, #0x01
      001712 F5                    5514 	push	af
      001713 33                    5515 	inc	sp
      001714 CDr69r04              5516 	call	_add_coins
      001717 33                    5517 	inc	sp
                                   5518 ;src/mushroompie.c:558: show_coins();
      001718 CDr7Fr04              5519 	call	_show_coins
                                   5520 ;src/mushroompie.c:559: redraw_room = 1;
                                   5521 ;src/mushroompie.c:560: warning_shown = 1;
      00171B 01 01 01              5522 	ld	bc, #0x101
      00171E 18 3C                 5523 	jr	00133$
      001720                       5524 00130$:
                                   5525 ;src/mushroompie.c:562: if (inventory_item_list.size < 3) {
      001720 FArB6r03              5526 	ld	a, (#_inventory_item_list + 0)
      001723 D6 03                 5527 	sub	a, #0x03
      001725 30 24                 5528 	jr	NC, 00127$
                                   5529 ;src/mushroompie.c:563: pop_by_id(&game_item_list, current_item_id);
      001727 C5                    5530 	push	bc
      001728 F8 03                 5531 	ldhl	sp,	#3
      00172A 7E                    5532 	ld	a, (hl)
      00172B F5                    5533 	push	af
      00172C 33                    5534 	inc	sp
      00172D 11rC5r02              5535 	ld	de, #_game_item_list
      001730 D5                    5536 	push	de
      001731 CDr77r0F              5537 	call	_pop_by_id
      001734 E8 03                 5538 	add	sp, #3
      001736 21rCEr02              5539 	ld	hl, #___temp_game_item3
      001739 2A                    5540 	ld	a, (hl+)
      00173A 5F                    5541 	ld	e, a
      00173B 56                    5542 	ld	d, (hl)
      00173C D5                    5543 	push	de
      00173D 11rB6r03              5544 	ld	de, #_inventory_item_list
      001740 D5                    5545 	push	de
      001741 CDr0Cr0F              5546 	call	_push_last
      001744 E8 04                 5547 	add	sp, #4
      001746 C1                    5548 	pop	bc
                                   5549 ;src/mushroompie.c:565: redraw_room = 1;
      001747 0E 01                 5550 	ld	c, #0x01
      001749 18 11                 5551 	jr	00133$
      00174B                       5552 00127$:
                                   5553 ;src/mushroompie.c:567: show_dialog_window(2, &too_much_items);
      00174B C5                    5554 	push	bc
      00174C 11r00r00              5555 	ld	de, #_too_much_items
      00174F D5                    5556 	push	de
      001750 3E 02                 5557 	ld	a, #0x02
      001752 F5                    5558 	push	af
      001753 33                    5559 	inc	sp
      001754 CDr71r00              5560 	call	_show_dialog_window
      001757 E8 03                 5561 	add	sp, #3
      001759 C1                    5562 	pop	bc
                                   5563 ;src/mushroompie.c:568: warning_shown = 1;
      00175A 06 01                 5564 	ld	b, #0x01
      00175C                       5565 00133$:
                                   5566 ;src/mushroompie.c:572: if (!warning_shown) {
      00175C 78                    5567 	ld	a, b
      00175D B7                    5568 	or	a, a
      00175E C2r5Br18              5569 	jp	NZ, 00149$
                                   5570 ;src/mushroompie.c:573: __temp_game_item3 = show_inventory();
      001761 C5                    5571 	push	bc
      001762 CDrADr01              5572 	call	_show_inventory
      001765 C1                    5573 	pop	bc
      001766 21rCEr02              5574 	ld	hl, #___temp_game_item3
      001769 7B                    5575 	ld	a, e
      00176A 22                    5576 	ld	(hl+), a
      00176B 72                    5577 	ld	(hl), d
                                   5578 ;src/mushroompie.c:574: if (__temp_game_item3) {
      00176C 3A                    5579 	ld	a, (hl-)
      00176D B6                    5580 	or	a, (hl)
      00176E CAr5Br18              5581 	jp	Z, 00149$
                                   5582 ;src/mushroompie.c:575: current_item_id = __temp_game_item3->id;
      001771 6E                    5583 	ld	l, (hl)
                                   5584 ;	spillPairReg hl
                                   5585 ;	spillPairReg hl
      001772 FArCFr02              5586 	ld	a, (___temp_game_item3 + 1)
      001775 67                    5587 	ld	h, a
                                   5588 ;	spillPairReg hl
                                   5589 ;	spillPairReg hl
      001776 46                    5590 	ld	b, (hl)
                                   5591 ;src/mushroompie.c:576: pop_by_id(&inventory_item_list, current_item_id);
      001777 C5                    5592 	push	bc
      001778 C5                    5593 	push	bc
      001779 33                    5594 	inc	sp
      00177A 11rB6r03              5595 	ld	de, #_inventory_item_list
      00177D D5                    5596 	push	de
      00177E CDr77r0F              5597 	call	_pop_by_id
      001781 E8 03                 5598 	add	sp, #3
      001783 C1                    5599 	pop	bc
                                   5600 ;src/mushroompie.c:579: if (current_room->room_use) {
      001784 21r0Er00              5601 	ld	hl, #_current_room
      001787 2A                    5602 	ld	a, (hl+)
      001788 5F                    5603 	ld	e, a
      001789 56                    5604 	ld	d, (hl)
      00178A 21 15 00              5605 	ld	hl, #0x0015
      00178D 19                    5606 	add	hl, de
      00178E 5D                    5607 	ld	e, l
      00178F 54                    5608 	ld	d, h
      001790 1A                    5609 	ld	a, (de)
      001791 F8 00                 5610 	ldhl	sp,	#0
      001793 22                    5611 	ld	(hl+), a
      001794 13                    5612 	inc	de
      001795 1A                    5613 	ld	a, (de)
      001796 77                    5614 	ld	(hl), a
      001797 F8 01                 5615 	ldhl	sp,	#1
      001799 3A                    5616 	ld	a, (hl-)
      00179A B6                    5617 	or	a, (hl)
      00179B 28 1D                 5618 	jr	Z, 00135$
                                   5619 ;src/mushroompie.c:580: current_item_id = current_room->room_use(tile_pos_x, tile_pos_y + 1, current_item_id);
      00179D FAr3Br02              5620 	ld	a, (#_tile_pos_y)
      0017A0 3C                    5621 	inc	a
      0017A1 C5                    5622 	push	bc
      0017A2 C5                    5623 	push	bc
      0017A3 33                    5624 	inc	sp
      0017A4 F5                    5625 	push	af
      0017A5 33                    5626 	inc	sp
      0017A6 FAr3Ar02              5627 	ld	a, (#_tile_pos_x)
      0017A9 F5                    5628 	push	af
      0017AA 33                    5629 	inc	sp
      0017AB F8 05                 5630 	ldhl	sp,	#5
      0017AD 2A                    5631 	ld	a, (hl+)
      0017AE 66                    5632 	ld	h, (hl)
                                   5633 ;	spillPairReg hl
                                   5634 ;	spillPairReg hl
      0017AF 6F                    5635 	ld	l, a
                                   5636 ;	spillPairReg hl
                                   5637 ;	spillPairReg hl
      0017B0 CDr00r00              5638 	call	___sdcc_call_hl
      0017B3 E8 03                 5639 	add	sp, #3
      0017B5 7B                    5640 	ld	a, e
      0017B6 C1                    5641 	pop	bc
      0017B7 47                    5642 	ld	b, a
      0017B8 18 09                 5643 	jr	00136$
      0017BA                       5644 00135$:
                                   5645 ;src/mushroompie.c:581: } else current_item_id = default_drop(current_item_id);
      0017BA C5                    5646 	push	bc
      0017BB C5                    5647 	push	bc
      0017BC 33                    5648 	inc	sp
      0017BD CDrC6r12              5649 	call	_default_drop
      0017C0 33                    5650 	inc	sp
      0017C1 C1                    5651 	pop	bc
      0017C2 43                    5652 	ld	b, e
      0017C3                       5653 00136$:
                                   5654 ;src/mushroompie.c:583: if (current_item_id) {
      0017C3 78                    5655 	ld	a, b
      0017C4 B7                    5656 	or	a, a
      0017C5 28 4B                 5657 	jr	Z, 00143$
                                   5658 ;src/mushroompie.c:584: push_last(&item_stack, __temp_game_item3);
      0017C7 C5                    5659 	push	bc
      0017C8 21rCEr02              5660 	ld	hl, #___temp_game_item3
      0017CB 2A                    5661 	ld	a, (hl+)
      0017CC 5F                    5662 	ld	e, a
      0017CD 56                    5663 	ld	d, (hl)
      0017CE D5                    5664 	push	de
      0017CF 11rBBr03              5665 	ld	de, #_item_stack
      0017D2 D5                    5666 	push	de
      0017D3 CDr0Cr0F              5667 	call	_push_last
      0017D6 E8 04                 5668 	add	sp, #4
      0017D8 C1                    5669 	pop	bc
                                   5670 ;src/mushroompie.c:585: if (current_item_id == ID_ITEM_USED) {
      0017D9 78                    5671 	ld	a, b
      0017DA D6 0F                 5672 	sub	a, #0x0f
      0017DC 20 0A                 5673 	jr	NZ, 00140$
                                   5674 ;src/mushroompie.c:586: __temp_game_item3 = 0;
      0017DE AF                    5675 	xor	a, a
      0017DF 21rCEr02              5676 	ld	hl, #___temp_game_item3
      0017E2 22                    5677 	ld	(hl+), a
      0017E3 77                    5678 	ld	(hl), a
                                   5679 ;src/mushroompie.c:587: redraw_room = 1;
      0017E4 0E 01                 5680 	ld	c, #0x01
      0017E6 18 2A                 5681 	jr	00143$
      0017E8                       5682 00140$:
                                   5683 ;src/mushroompie.c:589: __temp_game_item3 = pop_by_id(&game_item_list, current_item_id);
      0017E8 C5                    5684 	push	bc
      0017E9 C5                    5685 	push	bc
      0017EA 33                    5686 	inc	sp
      0017EB 11rC5r02              5687 	ld	de, #_game_item_list
      0017EE D5                    5688 	push	de
      0017EF CDr77r0F              5689 	call	_pop_by_id
      0017F2 E8 03                 5690 	add	sp, #3
      0017F4 C1                    5691 	pop	bc
      0017F5 21rCEr02              5692 	ld	hl, #___temp_game_item3
      0017F8 7B                    5693 	ld	a, e
      0017F9 22                    5694 	ld	(hl+), a
      0017FA 72                    5695 	ld	(hl), d
                                   5696 ;src/mushroompie.c:590: if (!__temp_game_item3) __temp_game_item3 = pop_by_id(&item_stack, current_item_id);
      0017FB 3A                    5697 	ld	a, (hl-)
      0017FC B6                    5698 	or	a, (hl)
      0017FD 20 13                 5699 	jr	NZ, 00143$
      0017FF C5                    5700 	push	bc
      001800 C5                    5701 	push	bc
      001801 33                    5702 	inc	sp
      001802 11rBBr03              5703 	ld	de, #_item_stack
      001805 D5                    5704 	push	de
      001806 CDr77r0F              5705 	call	_pop_by_id
      001809 E8 03                 5706 	add	sp, #3
      00180B C1                    5707 	pop	bc
      00180C 21rCEr02              5708 	ld	hl, #___temp_game_item3
      00180F 7B                    5709 	ld	a, e
      001810 22                    5710 	ld	(hl+), a
      001811 72                    5711 	ld	(hl), d
      001812                       5712 00143$:
                                   5713 ;src/mushroompie.c:594: if (__temp_game_item3) {
      001812 21rCFr02              5714 	ld	hl, #___temp_game_item3 + 1
      001815 3A                    5715 	ld	a, (hl-)
      001816 B6                    5716 	or	a, (hl)
      001817 28 42                 5717 	jr	Z, 00149$
                                   5718 ;src/mushroompie.c:595: __temp_game_item3->room_row = current_room_y, __temp_game_item3->room_col = current_room_x;
      001819 2A                    5719 	ld	a, (hl+)
      00181A 4F                    5720 	ld	c, a
      00181B 46                    5721 	ld	b, (hl)
      00181C 03                    5722 	inc	bc
      00181D FAr0Dr00              5723 	ld	a, (#_current_room_y)
      001820 02                    5724 	ld	(bc), a
      001821 21rCEr02              5725 	ld	hl, #___temp_game_item3
      001824 2A                    5726 	ld	a, (hl+)
      001825 4F                    5727 	ld	c, a
      001826 46                    5728 	ld	b, (hl)
      001827 03                    5729 	inc	bc
      001828 03                    5730 	inc	bc
      001829 FAr0Cr00              5731 	ld	a, (#_current_room_x)
      00182C 02                    5732 	ld	(bc), a
                                   5733 ;src/mushroompie.c:596: __temp_game_item3->x = tile_pos_x, __temp_game_item3->y = tile_pos_y + 1;
      00182D 21rCEr02              5734 	ld	hl, #___temp_game_item3
      001830 2A                    5735 	ld	a, (hl+)
      001831 4F                    5736 	ld	c, a
      001832 46                    5737 	ld	b, (hl)
      001833 03                    5738 	inc	bc
      001834 03                    5739 	inc	bc
      001835 03                    5740 	inc	bc
      001836 FAr3Ar02              5741 	ld	a, (#_tile_pos_x)
      001839 02                    5742 	ld	(bc), a
      00183A 21rCEr02              5743 	ld	hl, #___temp_game_item3
      00183D 2A                    5744 	ld	a, (hl+)
      00183E 4F                    5745 	ld	c, a
      00183F 46                    5746 	ld	b, (hl)
      001840 03                    5747 	inc	bc
      001841 03                    5748 	inc	bc
      001842 03                    5749 	inc	bc
      001843 03                    5750 	inc	bc
      001844 FAr3Br02              5751 	ld	a, (#_tile_pos_y)
      001847 3C                    5752 	inc	a
      001848 02                    5753 	ld	(bc), a
                                   5754 ;src/mushroompie.c:597: push_last(&game_item_list, __temp_game_item3);
      001849 21rCEr02              5755 	ld	hl, #___temp_game_item3
      00184C 2A                    5756 	ld	a, (hl+)
      00184D 5F                    5757 	ld	e, a
      00184E 56                    5758 	ld	d, (hl)
      00184F D5                    5759 	push	de
      001850 11rC5r02              5760 	ld	de, #_game_item_list
      001853 D5                    5761 	push	de
      001854 CDr0Cr0F              5762 	call	_push_last
      001857 E8 04                 5763 	add	sp, #4
                                   5764 ;src/mushroompie.c:598: redraw_room = 1;
      001859 0E 01                 5765 	ld	c, #0x01
      00185B                       5766 00149$:
                                   5767 ;src/mushroompie.c:602: if (redraw_room) {
      00185B 79                    5768 	ld	a, c
      00185C B7                    5769 	or	a, a
      00185D 28 6A                 5770 	jr	Z, 00160$
                                   5771 ;src/mushroompie.c:603: FADE_OUT;
      00185F 3E 01                 5772 	ld	a, #0x01
      001861 F5                    5773 	push	af
      001862 33                    5774 	inc	sp
      001863 CDr00r00              5775 	call	_push_bank
      001866 33                    5776 	inc	sp
      001867 21 2C 2C              5777 	ld	hl, #0x2c2c
      00186A E5                    5778 	push	hl
      00186B 21 00 93              5779 	ld	hl, #0x9300
      00186E E5                    5780 	push	hl
      00186F CDr00r00              5781 	call	_FadeDMG
      001872 E8 04                 5782 	add	sp, #4
      001874 CDr00r00              5783 	call	_pop_bank
                                   5784 ;src/mushroompie.c:579: if (current_room->room_use) {
      001877 21r0Er00              5785 	ld	hl, #_current_room
      00187A 2A                    5786 	ld	a, (hl+)
      00187B 4F                    5787 	ld	c, a
      00187C 46                    5788 	ld	b, (hl)
                                   5789 ;src/mushroompie.c:605: if (current_room->room_customdraw) current_room->room_customdraw(); else default_draw();
      00187D 21 19 00              5790 	ld	hl, #0x0019
      001880 09                    5791 	add	hl, bc
      001881 2A                    5792 	ld	a, (hl+)
      001882 4F                    5793 	ld	c, a
      001883 66                    5794 	ld	h, (hl)
                                   5795 ;	spillPairReg hl
      001884 7C                    5796 	ld	a, h
      001885 B1                    5797 	or	a, c
      001886 28 06                 5798 	jr	Z, 00151$
      001888 69                    5799 	ld	l, c
                                   5800 ;	spillPairReg hl
                                   5801 ;	spillPairReg hl
      001889 CDr00r00              5802 	call	___sdcc_call_hl
      00188C 18 03                 5803 	jr	00152$
      00188E                       5804 00151$:
      00188E CDr84r12              5805 	call	_default_draw
      001891                       5806 00152$:
                                   5807 ;src/mushroompie.c:606: FADE_IN;
      001891 3E 01                 5808 	ld	a, #0x01
      001893 F5                    5809 	push	af
      001894 33                    5810 	inc	sp
      001895 CDr00r00              5811 	call	_push_bank
      001898 33                    5812 	inc	sp
      001899 21 2C 2C              5813 	ld	hl, #0x2c2c
      00189C E5                    5814 	push	hl
      00189D 21 01 93              5815 	ld	hl, #0x9301
      0018A0 E5                    5816 	push	hl
      0018A1 CDr00r00              5817 	call	_FadeDMG
      0018A4 E8 04                 5818 	add	sp, #4
      0018A6 CDr00r00              5819 	call	_pop_bank
                                   5820 ;src/mushroompie.c:608: rle_decompress_data(current_room->room_coll_map->rle_data, (UWORD)current_room->room_coll_map->size, coll_buf);
                                   5821 ;src/mushroompie.c:579: if (current_room->room_use) {
      0018A9 21r0Er00              5822 	ld	hl, #_current_room
      0018AC 6E                    5823 	ld	l, (hl)
                                   5824 ;	spillPairReg hl
                                   5825 ;	spillPairReg hl
      0018AD FAr0Fr00              5826 	ld	a, (_current_room + 1)
      0018B0 67                    5827 	ld	h, a
                                   5828 ;	spillPairReg hl
                                   5829 ;	spillPairReg hl
                                   5830 ;src/mushroompie.c:608: rle_decompress_data(current_room->room_coll_map->rle_data, (UWORD)current_room->room_coll_map->size, coll_buf);
      0018B1 23                    5831 	inc	hl
      0018B2 23                    5832 	inc	hl
      0018B3 23                    5833 	inc	hl
      0018B4 2A                    5834 	ld	a, (hl+)
      0018B5 4F                    5835 	ld	c, a
      0018B6 46                    5836 	ld	b, (hl)
      0018B7 69                    5837 	ld	l, c
      0018B8 60                    5838 	ld	h, b
      0018B9 2A                    5839 	ld	a,	(hl+)
      0018BA 66                    5840 	ld	h, (hl)
                                   5841 ;	spillPairReg hl
      0018BB 6F                    5842 	ld	l, a
                                   5843 ;	spillPairReg hl
                                   5844 ;	spillPairReg hl
      0018BC 03                    5845 	inc	bc
      0018BD 03                    5846 	inc	bc
      0018BE 11r00r00              5847 	ld	de, #_coll_buf
      0018C1 D5                    5848 	push	de
      0018C2 E5                    5849 	push	hl
      0018C3 C5                    5850 	push	bc
      0018C4 CDr00r00              5851 	call	_rle_decompress_data
      0018C7 E8 06                 5852 	add	sp, #6
      0018C9                       5853 00160$:
                                   5854 ;src/mushroompie.c:522: __temp_i = animation[ani_type]->interr;
      0018C9 21r02r00              5855 	ld	hl, #_ani_type
      0018CC 6E                    5856 	ld	l, (hl)
                                   5857 ;	spillPairReg hl
                                   5858 ;	spillPairReg hl
      0018CD 26 00                 5859 	ld	h, #0x00
                                   5860 ;	spillPairReg hl
                                   5861 ;	spillPairReg hl
                                   5862 ;src/mushroompie.c:618: if (double_dyn) current_dyn = double_y_data[ani_type]; else current_dyn = move_y_data[ani_type]; 
      0018CF 29                    5863 	add	hl, hl
      0018D0 4D                    5864 	ld	c, l
      0018D1 44                    5865 	ld	b, h
                                   5866 ;src/mushroompie.c:614: if (ani_type != ani_type_old) { 
      0018D2 FAr02r00              5867 	ld	a, (#_ani_type)
      0018D5 21r00r02              5868 	ld	hl, #_ani_type_old
      0018D8 96                    5869 	sub	a, (hl)
      0018D9 28 3A                 5870 	jr	Z, 00167$
                                   5871 ;src/mushroompie.c:615: ani_phase = 0; 
      0018DB 21r03r00              5872 	ld	hl, #_ani_phase
      0018DE 36 00                 5873 	ld	(hl), #0x00
                                   5874 ;src/mushroompie.c:616: ani_update = 1;
      0018E0 21r08r00              5875 	ld	hl, #_ani_update
      0018E3 36 01                 5876 	ld	(hl), #0x01
                                   5877 ;src/mushroompie.c:617: if (!current_dyn) {
      0018E5 21r05r00              5878 	ld	hl, #_current_dyn + 1
      0018E8 3A                    5879 	ld	a, (hl-)
      0018E9 B6                    5880 	or	a, (hl)
      0018EA 20 24                 5881 	jr	NZ, 00165$
                                   5882 ;src/mushroompie.c:618: if (double_dyn) current_dyn = double_y_data[ani_type]; else current_dyn = move_y_data[ani_type]; 
      0018EC FAr06r00              5883 	ld	a, (#_double_dyn)
      0018EF B7                    5884 	or	a, a
      0018F0 28 10                 5885 	jr	Z, 00162$
      0018F2 21rFCr01              5886 	ld	hl, #_double_y_data
      0018F5 09                    5887 	add	hl, bc
      0018F6 5D                    5888 	ld	e, l
      0018F7 54                    5889 	ld	d, h
      0018F8 1A                    5890 	ld	a, (de)
      0018F9 21r04r00              5891 	ld	hl, #_current_dyn
      0018FC 22                    5892 	ld	(hl+), a
      0018FD 13                    5893 	inc	de
      0018FE 1A                    5894 	ld	a, (de)
      0018FF 77                    5895 	ld	(hl), a
      001900 18 0E                 5896 	jr	00165$
      001902                       5897 00162$:
      001902 21rE8r01              5898 	ld	hl, #_move_y_data
      001905 09                    5899 	add	hl, bc
      001906 5D                    5900 	ld	e, l
      001907 54                    5901 	ld	d, h
      001908 1A                    5902 	ld	a, (de)
      001909 21r04r00              5903 	ld	hl, #_current_dyn
      00190C 22                    5904 	ld	(hl+), a
      00190D 13                    5905 	inc	de
      00190E 1A                    5906 	ld	a, (de)
      00190F 77                    5907 	ld	(hl), a
      001910                       5908 00165$:
                                   5909 ;src/mushroompie.c:620: current_dyn_phase = 0;
      001910 21r07r00              5910 	ld	hl, #_current_dyn_phase
      001913 36 00                 5911 	ld	(hl), #0x00
      001915                       5912 00167$:
                                   5913 ;src/mushroompie.c:622: double_dyn = 0;     
      001915 21r06r00              5914 	ld	hl, #_double_dyn
      001918 36 00                 5915 	ld	(hl), #0x00
                                   5916 ;src/mushroompie.c:624: if (walk_update) {
      00191A FAr09r00              5917 	ld	a, (#_walk_update)
      00191D B7                    5918 	or	a, a
      00191E CAr0Fr1A              5919 	jp	Z, 00180$
                                   5920 ;src/mushroompie.c:625: is_position_safe = 0;
      001921 21r1Cr00              5921 	ld	hl, #_is_position_safe
      001924 36 00                 5922 	ld	(hl), #0x00
                                   5923 ;src/mushroompie.c:626: if ((!current_dyn) && ((ani_type == ANI_STAND) || (ani_type == ANI_WALK_L) || (ani_type == ANI_WALK_R))) {
      001926 21r05r00              5924 	ld	hl, #_current_dyn + 1
      001929 3A                    5925 	ld	a, (hl-)
      00192A B6                    5926 	or	a, (hl)
      00192B 20 3C                 5927 	jr	NZ, 00169$
      00192D 21r02r00              5928 	ld	hl, #_ani_type
      001930 7E                    5929 	ld	a, (hl)
      001931 B7                    5930 	or	a, a
      001932 28 0C                 5931 	jr	Z, 00168$
      001934 7E                    5932 	ld	a, (hl)
      001935 D6 03                 5933 	sub	a, #0x03
      001937 28 07                 5934 	jr	Z, 00168$
      001939 FAr02r00              5935 	ld	a, (#_ani_type)
      00193C D6 02                 5936 	sub	a, #0x02
      00193E 20 29                 5937 	jr	NZ, 00169$
      001940                       5938 00168$:
                                   5939 ;src/mushroompie.c:627: tmp_room_x = current_room_x; tmp_room_y = current_room_y;
      001940 FAr0Cr00              5940 	ld	a, (#_current_room_x)
      001943 EAr01r02              5941 	ld	(#_tmp_room_x),a
      001946 FAr0Dr00              5942 	ld	a, (#_current_room_y)
      001949 EAr02r02              5943 	ld	(#_tmp_room_y),a
                                   5944 ;src/mushroompie.c:628: tmp_dizzy_x = dizzy_x; tmp_dizzy_y = dizzy_y;
      00194C FAr10r00              5945 	ld	a, (#_dizzy_x)
      00194F EAr07r02              5946 	ld	(#_tmp_dizzy_x),a
      001952 FAr11r00              5947 	ld	a, (#_dizzy_x + 1)
      001955 EAr08r02              5948 	ld	(#_tmp_dizzy_x + 1),a
      001958 FAr12r00              5949 	ld	a, (#_dizzy_y)
      00195B EAr09r02              5950 	ld	(#_tmp_dizzy_y),a
      00195E FAr13r00              5951 	ld	a, (#_dizzy_y + 1)
      001961 EAr0Ar02              5952 	ld	(#_tmp_dizzy_y + 1),a
                                   5953 ;src/mushroompie.c:629: is_position_safe = 1;
      001964 21r1Cr00              5954 	ld	hl, #_is_position_safe
      001967 36 01                 5955 	ld	(hl), #0x01
      001969                       5956 00169$:
                                   5957 ;src/mushroompie.c:632: delta_x = move_x_data[ani_type];
      001969 21r10r02              5958 	ld	hl, #_move_x_data
      00196C 09                    5959 	add	hl, bc
      00196D 5D                    5960 	ld	e, l
      00196E 54                    5961 	ld	d, h
      00196F 1A                    5962 	ld	a, (de)
      001970 21r16r00              5963 	ld	hl, #_delta_x
      001973 22                    5964 	ld	(hl+), a
      001974 13                    5965 	inc	de
      001975 1A                    5966 	ld	a, (de)
      001976 77                    5967 	ld	(hl), a
                                   5968 ;src/mushroompie.c:634: if ((bal_update) && (current_dyn)) {
      001977 FAr0Ar00              5969 	ld	a, (#_bal_update)
      00197A B7                    5970 	or	a, a
      00197B 28 41                 5971 	jr	Z, 00176$
      00197D 21r05r00              5972 	ld	hl, #_current_dyn + 1
      001980 3A                    5973 	ld	a, (hl-)
      001981 B6                    5974 	or	a, (hl)
      001982 28 3A                 5975 	jr	Z, 00176$
                                   5976 ;src/mushroompie.c:635: delta_y += current_dyn->steps[current_dyn_phase];
      001984 2A                    5977 	ld	a, (hl+)
      001985 4F                    5978 	ld	c, a
      001986 46                    5979 	ld	b, (hl)
      001987 59                    5980 	ld	e, c
      001988 50                    5981 	ld	d, b
      001989 13                    5982 	inc	de
      00198A 21r07r00              5983 	ld	hl, #_current_dyn_phase
      00198D 6E                    5984 	ld	l, (hl)
                                   5985 ;	spillPairReg hl
                                   5986 ;	spillPairReg hl
      00198E 26 00                 5987 	ld	h, #0x00
                                   5988 ;	spillPairReg hl
                                   5989 ;	spillPairReg hl
      001990 29                    5990 	add	hl, hl
      001991 19                    5991 	add	hl, de
      001992 5D                    5992 	ld	e, l
      001993 54                    5993 	ld	d, h
      001994 1A                    5994 	ld	a, (de)
      001995 F8 00                 5995 	ldhl	sp,	#0
      001997 22                    5996 	ld	(hl+), a
      001998 13                    5997 	inc	de
      001999 1A                    5998 	ld	a, (de)
      00199A 77                    5999 	ld	(hl), a
      00199B 21r18r00              6000 	ld	hl, #_delta_y
      00199E 2A                    6001 	ld	a, (hl+)
      00199F 5F                    6002 	ld	e, a
      0019A0 56                    6003 	ld	d, (hl)
      0019A1 E1                    6004 	pop	hl
      0019A2 E5                    6005 	push	hl
      0019A3 19                    6006 	add	hl, de
      0019A4 5D                    6007 	ld	e, l
      0019A5 54                    6008 	ld	d, h
      0019A6 21r18r00              6009 	ld	hl, #_delta_y
      0019A9 7B                    6010 	ld	a, e
      0019AA 22                    6011 	ld	(hl+), a
      0019AB 72                    6012 	ld	(hl), d
                                   6013 ;src/mushroompie.c:636: current_dyn_phase++; if (current_dyn_phase >= current_dyn->count) current_dyn = 0;
      0019AC 21r07r00              6014 	ld	hl, #_current_dyn_phase
      0019AF 34                    6015 	inc	(hl)
      0019B0 0A                    6016 	ld	a, (bc)
      0019B1 4F                    6017 	ld	c, a
      0019B2 7E                    6018 	ld	a, (hl)
      0019B3 91                    6019 	sub	a, c
      0019B4 38 0E                 6020 	jr	C, 00177$
      0019B6 AF                    6021 	xor	a, a
      0019B7 21r04r00              6022 	ld	hl, #_current_dyn
      0019BA 22                    6023 	ld	(hl+), a
      0019BB 77                    6024 	ld	(hl), a
      0019BC 18 06                 6025 	jr	00177$
      0019BE                       6026 00176$:
                                   6027 ;src/mushroompie.c:637: } else delta_y = 0;
      0019BE AF                    6028 	xor	a, a
      0019BF 21r18r00              6029 	ld	hl, #_delta_y
      0019C2 22                    6030 	ld	(hl+), a
      0019C3 77                    6031 	ld	(hl), a
      0019C4                       6032 00177$:
                                   6033 ;src/mushroompie.c:639: check_change_room();
      0019C4 CDrFBr0D              6034 	call	_check_change_room
                                   6035 ;src/mushroompie.c:641: check_dizzy_collisions();
      0019C7 CDrB5r09              6036 	call	_check_dizzy_collisions
                                   6037 ;src/mushroompie.c:642: dizzy_x += delta_x; dizzy_y += delta_y;
      0019CA FAr10r00              6038 	ld	a, (#_dizzy_x)
      0019CD 21r16r00              6039 	ld	hl, #_delta_x
      0019D0 86                    6040 	add	a, (hl)
      0019D1 21r10r00              6041 	ld	hl, #_dizzy_x
      0019D4 22                    6042 	ld	(hl+), a
      0019D5 7E                    6043 	ld	a, (hl)
      0019D6 21r17r00              6044 	ld	hl, #_delta_x + 1
      0019D9 8E                    6045 	adc	a, (hl)
      0019DA EAr11r00              6046 	ld	(#_dizzy_x + 1),a
      0019DD FAr12r00              6047 	ld	a, (#_dizzy_y)
      0019E0 21r18r00              6048 	ld	hl, #_delta_y
      0019E3 86                    6049 	add	a, (hl)
      0019E4 21r12r00              6050 	ld	hl, #_dizzy_y
      0019E7 22                    6051 	ld	(hl+), a
      0019E8 7E                    6052 	ld	a, (hl)
      0019E9 21r19r00              6053 	ld	hl, #_delta_y + 1
      0019EC 8E                    6054 	adc	a, (hl)
      0019ED EAr13r00              6055 	ld	(#_dizzy_y + 1),a
                                   6056 ;src/mushroompie.c:644: set_dizzy_position();
      0019F0 CDr38r09              6057 	call	_set_dizzy_position
                                   6058 ;src/mushroompie.c:646: set_enemies_position();
      0019F3 CDrD1r08              6059 	call	_set_enemies_position
                                   6060 ;src/mushroompie.c:648: walk_update = 0; bal_update = 0;
      0019F6 21r09r00              6061 	ld	hl, #_walk_update
      0019F9 36 00                 6062 	ld	(hl), #0x00
      0019FB 21r0Ar00              6063 	ld	hl, #_bal_update
      0019FE 36 00                 6064 	ld	(hl), #0x00
                                   6065 ;src/mushroompie.c:649: delta_x = delta_y = 0;
      001A00 AF                    6066 	xor	a, a
      001A01 21r18r00              6067 	ld	hl, #_delta_y
      001A04 22                    6068 	ld	(hl+), a
      001A05 77                    6069 	ld	(hl), a
      001A06 AF                    6070 	xor	a, a
      001A07 21r16r00              6071 	ld	hl, #_delta_x
      001A0A 22                    6072 	ld	(hl+), a
      001A0B 77                    6073 	ld	(hl), a
                                   6074 ;src/mushroompie.c:651: update_energy();
      001A0C CDr60r05              6075 	call	_update_energy
      001A0F                       6076 00180$:
                                   6077 ;src/mushroompie.c:654: if (ani_update) {
      001A0F FAr08r00              6078 	ld	a, (#_ani_update)
      001A12 B7                    6079 	or	a, a
      001A13 CAr62r15              6080 	jp	Z, 00208$
                                   6081 ;src/mushroompie.c:655: current_animation = animation[ani_type];
      001A16 21r02r00              6082 	ld	hl, #_ani_type
      001A19 6E                    6083 	ld	l, (hl)
                                   6084 ;	spillPairReg hl
                                   6085 ;	spillPairReg hl
      001A1A 26 00                 6086 	ld	h, #0x00
                                   6087 ;	spillPairReg hl
                                   6088 ;	spillPairReg hl
      001A1C 29                    6089 	add	hl, hl
      001A1D 11r52r01              6090 	ld	de, #_animation
      001A20 19                    6091 	add	hl, de
      001A21 5D                    6092 	ld	e, l
      001A22 54                    6093 	ld	d, h
      001A23 1A                    6094 	ld	a, (de)
      001A24 21rFEr01              6095 	ld	hl, #_current_animation
      001A27 22                    6096 	ld	(hl+), a
      001A28 13                    6097 	inc	de
      001A29 1A                    6098 	ld	a, (de)
      001A2A 77                    6099 	ld	(hl), a
                                   6100 ;src/mushroompie.c:656: wait_vbl_done();
      001A2B CDr00r00              6101 	call	_wait_vbl_done
                                   6102 ;src/mushroompie.c:657: set_dizzy_animdata(current_animation->steps[ani_phase]);
      001A2E 21rFEr01              6103 	ld	hl, #_current_animation
      001A31 2A                    6104 	ld	a, (hl+)
      001A32 4F                    6105 	ld	c, a
      001A33 46                    6106 	ld	b, (hl)
      001A34 03                    6107 	inc	bc
      001A35 03                    6108 	inc	bc
      001A36 03                    6109 	inc	bc
      001A37 03                    6110 	inc	bc
      001A38 03                    6111 	inc	bc
      001A39 21r03r00              6112 	ld	hl, #_ani_phase
      001A3C 6E                    6113 	ld	l, (hl)
                                   6114 ;	spillPairReg hl
                                   6115 ;	spillPairReg hl
      001A3D 26 00                 6116 	ld	h, #0x00
                                   6117 ;	spillPairReg hl
                                   6118 ;	spillPairReg hl
      001A3F 29                    6119 	add	hl, hl
      001A40 09                    6120 	add	hl, bc
      001A41 2A                    6121 	ld	a, (hl+)
      001A42 4F                    6122 	ld	c, a
      001A43 46                    6123 	ld	b, (hl)
      001A44 C5                    6124 	push	bc
      001A45 CDr1Ar09              6125 	call	_set_dizzy_animdata
      001A48 E1                    6126 	pop	hl
                                   6127 ;src/mushroompie.c:658: ani_phase++; 
      001A49 21r03r00              6128 	ld	hl, #_ani_phase
      001A4C 34                    6129 	inc	(hl)
                                   6130 ;src/mushroompie.c:657: set_dizzy_animdata(current_animation->steps[ani_phase]);
      001A4D 21rFEr01              6131 	ld	hl, #_current_animation
      001A50 2A                    6132 	ld	a, (hl+)
      001A51 4F                    6133 	ld	c, a
      001A52 46                    6134 	ld	b, (hl)
                                   6135 ;src/mushroompie.c:659: if (ani_phase >= current_animation->count) {
      001A53 0A                    6136 	ld	a, (bc)
      001A54 5F                    6137 	ld	e, a
      001A55 FAr03r00              6138 	ld	a, (#_ani_phase)
      001A58 93                    6139 	sub	a, e
      001A59 38 48                 6140 	jr	C, 00189$
                                   6141 ;src/mushroompie.c:660: if ((dizzy_stun) && (ani_type != ANI_DEAD)) {
      001A5B FAr21r00              6142 	ld	a, (#_dizzy_stun)
      001A5E B7                    6143 	or	a, a
      001A5F 28 1F                 6144 	jr	Z, 00185$
      001A61 FAr02r00              6145 	ld	a, (#_ani_type)
      001A64 D6 07                 6146 	sub	a, #0x07
      001A66 28 18                 6147 	jr	Z, 00185$
                                   6148 ;src/mushroompie.c:661: ani_type = ANI_STUN;
      001A68 21r02r00              6149 	ld	hl, #_ani_type
      001A6B 36 06                 6150 	ld	(hl), #0x06
                                   6151 ;src/mushroompie.c:662: ani_phase = 0;
      001A6D 21r03r00              6152 	ld	hl, #_ani_phase
      001A70 36 00                 6153 	ld	(hl), #0x00
                                   6154 ;src/mushroompie.c:663: dizzy_stun = 0;
      001A72 21r21r00              6155 	ld	hl, #_dizzy_stun
      001A75 36 00                 6156 	ld	(hl), #0x00
                                   6157 ;src/mushroompie.c:664: dec_energy += 10;
      001A77 21r35r02              6158 	ld	hl, #_dec_energy
      001A7A 7E                    6159 	ld	a, (hl)
      001A7B C6 0A                 6160 	add	a, #0x0a
      001A7D 77                    6161 	ld	(hl), a
      001A7E 18 23                 6162 	jr	00189$
      001A80                       6163 00185$:
                                   6164 ;src/mushroompie.c:665: } else if (dizzy_falling) { 
      001A80 FAr20r00              6165 	ld	a, (#_dizzy_falling)
      001A83 B7                    6166 	or	a, a
      001A84 28 0F                 6167 	jr	Z, 00182$
                                   6168 ;src/mushroompie.c:666: ani_type = current_animation->fall_state;
      001A86 03                    6169 	inc	bc
      001A87 03                    6170 	inc	bc
      001A88 03                    6171 	inc	bc
      001A89 03                    6172 	inc	bc
      001A8A 0A                    6173 	ld	a, (bc)
      001A8B EAr02r00              6174 	ld	(#_ani_type),a
                                   6175 ;src/mushroompie.c:667: ani_phase = 0;
      001A8E 21r03r00              6176 	ld	hl, #_ani_phase
      001A91 36 00                 6177 	ld	(hl), #0x00
      001A93 18 0E                 6178 	jr	00189$
      001A95                       6179 00182$:
                                   6180 ;src/mushroompie.c:669: ani_type = current_animation->next_state;
      001A95 59                    6181 	ld	e, c
      001A96 50                    6182 	ld	d, b
      001A97 13                    6183 	inc	de
      001A98 13                    6184 	inc	de
      001A99 13                    6185 	inc	de
      001A9A 1A                    6186 	ld	a, (de)
      001A9B EAr02r00              6187 	ld	(#_ani_type),a
                                   6188 ;src/mushroompie.c:670: ani_phase = current_animation->cycle;
      001A9E 03                    6189 	inc	bc
      001A9F 0A                    6190 	ld	a, (bc)
      001AA0 EAr03r00              6191 	ld	(#_ani_phase),a
      001AA3                       6192 00189$:
                                   6193 ;src/mushroompie.c:673: ani_update = 0;
      001AA3 21r08r00              6194 	ld	hl, #_ani_update
      001AA6 36 00                 6195 	ld	(hl), #0x00
                                   6196 ;src/mushroompie.c:675: if (ani_type == ANI_DEAD) {
      001AA8 FAr02r00              6197 	ld	a, (#_ani_type)
      001AAB D6 07                 6198 	sub	a, #0x07
      001AAD 20 7B                 6199 	jr	NZ, 00198$
                                   6200 ;src/mushroompie.c:676: dizzy_stun = 0;
      001AAF 21r21r00              6201 	ld	hl, #_dizzy_stun
      001AB2 36 00                 6202 	ld	(hl), #0x00
                                   6203 ;src/mushroompie.c:677: if (death_pause) death_pause--;
      001AB4 21r1Fr00              6204 	ld	hl, #_death_pause
      001AB7 7E                    6205 	ld	a, (hl)
      001AB8 B7                    6206 	or	a, a
      001AB9 28 01                 6207 	jr	Z, 00191$
      001ABB 35                    6208 	dec	(hl)
      001ABC                       6209 00191$:
                                   6210 ;src/mushroompie.c:678: if (!death_pause) {
      001ABC FAr1Fr00              6211 	ld	a, (#_death_pause)
      001ABF B7                    6212 	or	a, a
      001AC0 20 6B                 6213 	jr	NZ, 00199$
                                   6214 ;src/mushroompie.c:679: if (!game_over) {
      001AC2 FAr1Er00              6215 	ld	a, (#_game_over)
      001AC5 B7                    6216 	or	a, a
      001AC6 20 50                 6217 	jr	NZ, 00193$
                                   6218 ;src/mushroompie.c:680: dizzy_x = safe_dizzy_x, dizzy_y = safe_dizzy_y;
      001AC8 FAr03r02              6219 	ld	a, (#_safe_dizzy_x)
      001ACB EAr10r00              6220 	ld	(#_dizzy_x),a
      001ACE FAr04r02              6221 	ld	a, (#_safe_dizzy_x + 1)
      001AD1 EAr11r00              6222 	ld	(#_dizzy_x + 1),a
      001AD4 FAr05r02              6223 	ld	a, (#_safe_dizzy_y)
      001AD7 EAr12r00              6224 	ld	(#_dizzy_y),a
      001ADA FAr06r02              6225 	ld	a, (#_safe_dizzy_y + 1)
      001ADD EAr13r00              6226 	ld	(#_dizzy_y + 1),a
                                   6227 ;src/mushroompie.c:681: current_room_x = safe_room_x; current_room_y = safe_room_y;
      001AE0 FAr1Ar00              6228 	ld	a, (#_safe_room_x)
      001AE3 EAr0Cr00              6229 	ld	(#_current_room_x),a
      001AE6 FAr1Br00              6230 	ld	a, (#_safe_room_y)
      001AE9 EAr0Dr00              6231 	ld	(#_current_room_y),a
                                   6232 ;src/mushroompie.c:682: set_room(current_room_y, current_room_x, 1);
      001AEC 3E 01                 6233 	ld	a, #0x01
      001AEE F5                    6234 	push	af
      001AEF 33                    6235 	inc	sp
      001AF0 FAr0Cr00              6236 	ld	a, (#_current_room_x)
      001AF3 67                    6237 	ld	h, a
      001AF4 FAr0Dr00              6238 	ld	a, (#_current_room_y)
      001AF7 6F                    6239 	ld	l, a
      001AF8 E5                    6240 	push	hl
      001AF9 CDrD9r0C              6241 	call	_set_room
      001AFC E8 03                 6242 	add	sp, #3
                                   6243 ;src/mushroompie.c:683: wait_vbl_done();
      001AFE CDr00r00              6244 	call	_wait_vbl_done
                                   6245 ;src/mushroompie.c:684: set_dizzy_animdata(&m_stand_0);
      001B01 11r00r00              6246 	ld	de, #_m_stand_0
      001B04 D5                    6247 	push	de
      001B05 CDr1Ar09              6248 	call	_set_dizzy_animdata
      001B08 E1                    6249 	pop	hl
                                   6250 ;src/mushroompie.c:685: init_dizzy_energy(); 
      001B09 CDr03r04              6251 	call	_init_dizzy_energy
                                   6252 ;src/mushroompie.c:686: ani_type = ANI_STAND; ani_phase = 0;
      001B0C 21r02r00              6253 	ld	hl, #_ani_type
      001B0F 36 00                 6254 	ld	(hl), #0x00
      001B11 21r03r00              6255 	ld	hl, #_ani_phase
      001B14 36 00                 6256 	ld	(hl), #0x00
      001B16 18 15                 6257 	jr	00199$
      001B18                       6258 00193$:
                                   6259 ;src/mushroompie.c:688: show_dialog_window(5, &game_over_dialog);
      001B18 11r00r00              6260 	ld	de, #_game_over_dialog
      001B1B D5                    6261 	push	de
      001B1C 3E 05                 6262 	ld	a, #0x05
      001B1E F5                    6263 	push	af
      001B1F 33                    6264 	inc	sp
      001B20 CDr71r00              6265 	call	_show_dialog_window
      001B23 E8 03                 6266 	add	sp, #3
                                   6267 ;src/mushroompie.c:689: init_game();
      001B25 CDr6Er13              6268 	call	_init_game
      001B28 18 03                 6269 	jr	00199$
      001B2A                       6270 00198$:
                                   6271 ;src/mushroompie.c:692: } else check_dizzy_evil_collisions();
      001B2A CDr70r0C              6272 	call	_check_dizzy_evil_collisions
      001B2D                       6273 00199$:
                                   6274 ;src/mushroompie.c:694: if (is_position_safe) {
      001B2D FAr1Cr00              6275 	ld	a, (#_is_position_safe)
      001B30 B7                    6276 	or	a, a
      001B31 CAr62r15              6277 	jp	Z, 00208$
                                   6278 ;src/mushroompie.c:695: if (!((dizzy_falling) || (dec_energy))) {
      001B34 FAr20r00              6279 	ld	a, (#_dizzy_falling)
      001B37 B7                    6280 	or	a, a
      001B38 20 2A                 6281 	jr	NZ, 00201$
      001B3A FAr35r02              6282 	ld	a, (#_dec_energy)
      001B3D B7                    6283 	or	a, a
      001B3E 20 24                 6284 	jr	NZ, 00201$
                                   6285 ;src/mushroompie.c:696: safe_room_x = tmp_room_x, safe_room_y = tmp_room_y; 
      001B40 FAr01r02              6286 	ld	a, (#_tmp_room_x)
      001B43 EAr1Ar00              6287 	ld	(#_safe_room_x),a
      001B46 FAr02r02              6288 	ld	a, (#_tmp_room_y)
      001B49 EAr1Br00              6289 	ld	(#_safe_room_y),a
                                   6290 ;src/mushroompie.c:697: safe_dizzy_x = tmp_dizzy_x, safe_dizzy_y = tmp_dizzy_y;
      001B4C FAr07r02              6291 	ld	a, (#_tmp_dizzy_x)
      001B4F EAr03r02              6292 	ld	(#_safe_dizzy_x),a
      001B52 FAr08r02              6293 	ld	a, (#_tmp_dizzy_x + 1)
      001B55 EAr04r02              6294 	ld	(#_safe_dizzy_x + 1),a
      001B58 FAr09r02              6295 	ld	a, (#_tmp_dizzy_y)
      001B5B EAr05r02              6296 	ld	(#_safe_dizzy_y),a
      001B5E FAr0Ar02              6297 	ld	a, (#_tmp_dizzy_y + 1)
      001B61 EAr06r02              6298 	ld	(#_safe_dizzy_y + 1),a
      001B64                       6299 00201$:
                                   6300 ;src/mushroompie.c:699: is_position_safe = 0;
      001B64 21r1Cr00              6301 	ld	hl, #_is_position_safe
      001B67 36 00                 6302 	ld	(hl), #0x00
      001B69 C3r62r15              6303 	jp	00208$
                                   6304 ;src/mushroompie.c:703: }
      001B6C 33                    6305 	inc	sp
      001B6D 33                    6306 	inc	sp
      001B6E C9                    6307 	ret
                                   6308 	.area _CODE
                                   6309 	.area _INITIALIZER
      000000                       6310 __xinit____CRASH_HEANDLER_INIT:
      000000r00r00                 6311 	.dw ___HandleCrash
      000002                       6312 __xinit__ani_type:
      000002 00                    6313 	.db #0x00	; 0
      000003                       6314 __xinit__ani_phase:
      000003 00                    6315 	.db #0x00	; 0
      000004                       6316 __xinit__current_dyn:
      000004 00 00                 6317 	.dw #0x0000
      000006                       6318 __xinit__double_dyn:
      000006 00                    6319 	.db #0x00	; 0
      000007                       6320 __xinit__current_dyn_phase:
      000007 00                    6321 	.db #0x00	; 0
      000008                       6322 __xinit__ani_update:
      000008 00                    6323 	.db #0x00	; 0
      000009                       6324 __xinit__walk_update:
      000009 00                    6325 	.db #0x00	; 0
      00000A                       6326 __xinit__bal_update:
      00000A 00                    6327 	.db #0x00	; 0
      00000B                       6328 __xinit__cloud_timer:
      00000B 00                    6329 	.db #0x00	; 0
      00000C                       6330 __xinit__current_room_x:
      00000C 01                    6331 	.db #0x01	; 1
      00000D                       6332 __xinit__current_room_y:
      00000D 01                    6333 	.db #0x01	; 1
      00000E                       6334 __xinit__current_room:
      00000E 00 00                 6335 	.dw #0x0000
      000010                       6336 __xinit__dizzy_x:
      000010 68 00                 6337 	.dw #0x0068
      000012                       6338 __xinit__dizzy_y:
      000012 48 00                 6339 	.dw #0x0048
      000014                       6340 __xinit__dizzy_tmp_xy:
      000014 00 00                 6341 	.dw #0x0000
      000016                       6342 __xinit__delta_x:
      000016 00 00                 6343 	.dw #0x0000
      000018                       6344 __xinit__delta_y:
      000018 00 00                 6345 	.dw #0x0000
      00001A                       6346 __xinit__safe_room_x:
      00001A 00                    6347 	.db #0x00	; 0
      00001B                       6348 __xinit__safe_room_y:
      00001B 00                    6349 	.db #0x00	; 0
      00001C                       6350 __xinit__is_position_safe:
      00001C 01                    6351 	.db #0x01	; 1
      00001D                       6352 __xinit__joy:
      00001D 00                    6353 	.db #0x00	; 0
      00001E                       6354 __xinit__game_over:
      00001E 00                    6355 	.db #0x00	; 0
      00001F                       6356 __xinit__death_pause:
      00001F 00                    6357 	.db #0x00	; 0
      000020                       6358 __xinit__dizzy_falling:
      000020 00                    6359 	.db #0x00	; 0
      000021                       6360 __xinit__dizzy_stun:
      000021 00                    6361 	.db #0x00	; 0
      000022                       6362 __xinit__dizzy_old_pos_x:
      000022 FF FF                 6363 	.dw #0xffff
      000024                       6364 __xinit__dizzy_old_pos_y:
      000024 FF FF                 6365 	.dw #0xffff
      000026                       6366 __xinit__tim_div:
      000026 00                    6367 	.db #0x00	; 0
      000027                       6368 __xinit____lcd_int_state:
      000027 00                    6369 	.db #0x00	; 0
      000028                       6370 __xinit__inventory:
      000028 00                    6371 	.db #0x00	; 0
      000029                       6372 __xinit__lyc_table:
      000029 00                    6373 	.db #0x00	; 0
      00002A 17                    6374 	.db #0x17	; 23
      00002B 00                    6375 	.db #0x00	; 0
      00002C 17                    6376 	.db #0x17	; 23
      00002D 00                    6377 	.db #0x00	; 0
      00002E 17                    6378 	.db #0x17	; 23
      00002F 37                    6379 	.db #0x37	; 55	'7'
      000030 6F                    6380 	.db #0x6f	; 111	'o'
                                   6381 	.area _CABS (ABS)
